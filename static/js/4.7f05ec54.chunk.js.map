{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Assets/Icons/Close.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Components/Player/Steaming/MP3/Utils/Common.js","Components/Player/Steaming/MP3/Utils/Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Parser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Token.js","Components/Player/Steaming/MP3/ID3v2/FrameParser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Parser.js","Components/Player/Steaming/MP3/ID3Parser.js","Utils/Media.js","Stores/PlayerStore.js","Utils/User.js","Components/Viewer/FileProgress.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Assets/Icons/Download.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Tile/User.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Components/Message/MessageAuthor.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Assets/Icons/Check.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Components/ColumnMiddle/StickerSet.js","Utils/Animatior.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Workers/pako.worker.js","Assets/Icons/Face.js","Components/ColumnMiddle/FaceCam.js","Components/ColumnMiddle/RealEmojiPicker.js","Components/ColumnMiddle/Webcam.js","Components/ColumnMiddle/FaceApiEmojiPickerButton.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/NewChannel.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","cancelLoadAnimationContent","cancelGetRemoteFile","loadAnimationContent","PRELOAD_ANIMATION_SIZE","cancelLoadAnimationThumbnailContent","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","cancelLoadBigPhotoContent","getSize","PHOTO_BIG_SIZE","loadBigPhotoContent","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","cancelLoadVideoContent","loadVideoContent","PRELOAD_VIDEO_SIZE","cancelLoadVideoThumbnailContent","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerMinithumbnail","minithumbnail","getViewerThumbnail","getViewerFile","getMediaMiniPreview","getMediaPreviewFile","getMediaFile","mime_type","cancelLoadIVMediaViewerContent","blocks","cancelLoadMediaViewerContent","loadIVMediaViewerContent","useSizeLimit","loadMediaViewerContent","cancelPreloadIVMediaViewerContent","index","preload","cancelPreloadMediaViewerContent","history","preloadMediaViewerContent","preloadIVMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","full","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","isCreator","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","getBoldItalicEntities","isPre","indexOf","language","lastChar","firstChar","getMonoPreEntities","DOMParser","parseFromString","finalText","childNodes","nodeName","getHTMLEntities","replace","join","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","createSvgIcon","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","strtokBITSET","buf","bit","decodeString","buffer","encoding","slice","label","TextDecoder","decode","readUTF16String","readUTF8String","readWindows1292String","Error","UINT32SYNCSAFE","UINT8","UINT32_BE","UINT24_BE","UINT16_BE","ASCII_TEXT","len","Id3v1StringType","pos0","trimRightNull","trim","undefined","ID3v1Header","artist","album","year","comment","zeroByte","track","genre","ID3v1Parser","hasID3v1Header","ID3v2Header","fileIdentifier","version","major","revision","flags","raw","unsynchronisation","isExtendedHeader","expIndicator","ExtendedHeader","extendedFlags","sizeOfPadding","crcDataPresent","crcData","TextEncodingToken","bom","FrameParser","output","debug","splitValue","tag","trimArray","ID3v2Parser","tags","frameHeaderLength","getFrameHeaderLength","id3Header","frameHeaderBytes","frameHeader","readFrameHeader","frameDataBytes","readFrameData","extendedHeader","parseId3Data","dataLen","parseMetadata","parseExtendedHeader","readI","writeI","majorVer","includeCovers","warningCollector","frameParser","readData","format","removeUnsyncBytes","data_length_indicator","tag_alter_preservation","file_alter_preservation","read_only","grouping_identity","compression","encryption","v","readFrameFlags","hasID3v2Header","ID3Parser","fr","readAsArrayBuffer","getArrayBuffer","arrayBuffer","Uint8Array","id3Tags","artistTag","find","titleTag","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaTags","src","addEventListener","trunc","getMediaDocumentFromFile","getRandomInt","name","album_cover_minithumbnail","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","worker","PakoWorker","handlers","inflateBlob","random","toString","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","User","showStatus","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","opacity","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","onClientUpdateMediaSeeking","playerDuration","seekProgress","seeking","timeString","getTimeString","onClientUpdateMediaSeek","Infinity","onClientUpdateMediaTime","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","strings","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","input","extra","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","ToASCII","domain_array","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","dragging","handleMouseDown","handleChangeCommitted","handleChange","thumb","min","step","onChange","onChangeCommitted","onMouseDown","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","sourceRef","getTracks","stop","load","progressTime","clamp","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","StickerSet","info","onDeleteClick","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","Animator","stopped","startAnim","timeStamp","last","outSine","func","StickersPickerHeader","onClientUpdateStickerSetPosition","scrollToPosition","animator","anchorRef","scroll","scrollRef","anchor","anchorNode","ReactDOM","scrollFrom","scrollLeft","scrollTo","anchorFrom","anchorTo","sign","handleWheel","deltaX","deltaY","onWheel","StickersPicker","onUpdateInstalledStickerSets","is_masks","filterSets","onUpdateRecentStickers","reloadRecentContent","scrollTop","stickerSets","is_attached","promises","all","slicedSets","headerStickers","fullSets","setsLength","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","padding","inViewItems","itemsMap","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","loadedSets","updatePosition","minDiff","scrollHeight","firstOffsetTop","pos","element","handleScroll","loadingChunk","loadChunk","finally","loadPreviewContent","stickerId","currentTarget","mouseDown","mouseDownStickerId","previewStickerId","onPreview","showPreview","cancelSend","handleMouseUp","handleStickerSelect","handleSelectSet","concatSets","handleDeleteRecent","handleDeleteStickerSet","debounce","throttle","clear","el","recentInfo","onScroll","enhance","compose","withSaveRef","withRestoreRef","fillRule","mixBlendMode","DocumentAction","Download","viewBox","data-name","data-ext","module","exports","Worker","MODELPATH","inputSize","FaceCam","setInputDevice","mediaDevices","enumerateDevices","devices","device","kind","facingMode","exact","startCapture","interval","setInterval","capture","webcam","getFullFaceDescription","getScreenshot","fullDesc","currentEmotion","expressions","sendEmotion","scoreThreshold","OPTION","faceapi","img","withFaceLandmarks","withFaceExpressions","emotionCallback","detections","tinyFaceDetector","faceExpressionNet","faceLandmark68Net","videoConstraints","screenshotFormat","connect","emotions","emojiList","multipleEmojis","emo","Webcam","streamCamVideo","bind","videoElement","initEventListener","getUserMedia","mediaStream","onloadedmetadata","err","detection","singleResult","neutral","changeEmotion","visibility","dispatch","emotion","CHANGE_EMOTION","payload","FaceApiEmojiPickerButton","emotionFromChild","handleMouseClick","emojiIndex","search","handleButtonMouseEnter","buttonEnter","updatePicker","EMOJI_PICKER_TIMEOUT_MS","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","toggleLock","handlePaperMouseLeave","tab","onMouseLeave","pickerRoot","pickerRootOpened","withStyles","modal","overflowX","backgroundColor","palette","primary","borderRadius","shape","boxShadow","shadows","bottom","withTheme","TOGGLE_LOCK","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","clipboard","writeText","copyOld","successful","contentEditable","readOnly","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","focus","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","aria-describedby","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","withSnackbar","isVerified","DialogStatus","updateSubtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","incompleteResults","onLoadMigratedNext","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","currentIndex","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","removeItem","cache","contacts","CacheManager","remove","saveChatsInternal","files","parseCache","meChat","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","MainMenuButton","handleMenuOpen","anchorEl","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","handleSaved","CacheStore","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","onChoose","handleAttach","attachPhotoRef","handleAttachComplete","fileURL","defaultURL","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","FormControl","FormLabel","RadioGroup","FormControlLabel","control","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","NewChannel","titleRef","descriptionRef","NewGroup","itemsCaption","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","onCancel","textRef","urlRef","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","sendAsFile","performance","cancel","isMediaEditing","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","Slider","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","synchronous","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","canCopyLink","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","handleDateClick","handleAnimationEnd","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","dict","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.7f05ec54.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction cancelLoadAnimationContent(animation) {\n    const { animation: file } = animation;\n    if (!file) return;\n\n    const { id } = file;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction cancelLoadAnimationThumbnailContent(animation){\n    if (!animation) return;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction cancelLoadBigPhotoContent(photo) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction cancelLoadVideoContent(video) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction cancelLoadVideoThumbnailContent(video) {\n    if (!video) return;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nexport function getViewerMinithumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'document': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'photo': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'video': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nexport function getMediaMiniPreview(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.minithumbnail) {\n                return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.minithumbnail) {\n                return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.minithumbnail) {\n                    return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n                }\n\n                if (document && document.minithumbnail) {\n                    return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n                }\n\n                if (video && video.minithumbnail) {\n                    return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n                }\n\n                if (photo && photo.minithumbnail) {\n                    return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.minithumbnail) {\n                return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null, ''];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation, media.mime_type];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo, ''];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document, document.mime_type];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video, media.mime_type];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null, ''];\n\n    const { content } = message;\n    if (!content) return [0, 0, null, ''];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                const { width, height, animation: file, mime_type } = animation;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                const { document: file, mime_type } = document;\n                return [50, 50, file, mime_type];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    const { width, height, animation: file, mime_type } = animation;\n                    return [width, height, file, mime_type];\n                }\n\n                if (document) {\n                    const { document: file, mime_type } = document;\n                    return [50, 50, file, mime_type];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        const { width, height, photo: file } = photoSize;\n                        return [width, height, file, ''];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    const { width, height, video: file, mime_type } = video;\n                    return [width, height, file, mime_type];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                const { width, height, video: file, mime_type } = video;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nexport function cancelLoadIVMediaViewerContent(blocks) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { animation, photo, video } = web_page;\n\n                        if (animation) {\n                            cancelLoadAnimationThumbnailContent(animation);\n                            cancelLoadAnimationContent(animation);\n                        }\n\n                        if (photo) {\n                            cancelLoadBigPhotoContent(photo);\n                        }\n\n                        if (video) {\n                            cancelLoadVideoThumbnailContent(video);\n                            cancelLoadVideoContent(video);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function loadIVMediaViewerContent(blocks, useSizeLimit = false) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, null, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, null);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, null);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, null);\n                    loadVideoContent(store, video, null, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function cancelPreloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    cancelLoadIVMediaViewerContent([blocks[index]]);\n    cancelLoadIVMediaViewerContent(blocks);\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nexport function preloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    loadIVMediaViewerContent([blocks[index]], false);\n    loadIVMediaViewerContent(preload, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId, full = false) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id, full);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId, full) {\n    if (!photo) return;\n\n    const { small, big } = photo;\n\n    loadChatFileContent(store, small, chatId);\n    if (full) loadChatFileContent(store, big, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isCreator(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const { basic_group_id } = type;\n            const basicGroup = BasicGroupStore.get(basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (status) return false;\n\n            return status['@type'] === 'chatMemberStatusCreator';\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const { supergroup_id } = type;\n            const supergroup = SupergroupStore.get(supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            return status['@type'] === 'chatMemberStatusCreator';\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n    text = text.split('<br>').join('\\n');\n\n    // 0 looking for html entities\n    text = getHTMLEntities(text, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    text = getMonoPreEntities(text, entities);\n\n    // 2 looking for bold, italic entities\n    text = getBoldItalicEntities(text, entities);\n\n    return { text, entities };\n}\n\nexport function getHTMLEntities(text, entities) {\n    const result = new DOMParser().parseFromString(text, 'text/html');\n\n    let offset = 0;\n    let length = 0;\n\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n\n    return text;\n}\n\nexport function getMonoPreEntities(text, entities) {\n    const mono = '`';\n    const pre = '```';\n    let isPre = false;\n\n    let index = -1;     // first index of end tag\n    let lastIndex = 0;  // first index after end tag\n    let start = -1;     // first index of start tag\n\n    let offset = 0, length = 0;\n\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    return text;\n}\n\nexport function getBoldItalicEntities(text, entities) {\n    const bold = '**';\n    const italic = '__';\n\n\n    let index = -1;     // first index of end tag\n    let lastIndex = 0;  // first index after end tag\n    let start = -1;     // first index of start tag\n\n    let offset = 0, length = 0;\n\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n\n    return text;\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","export const strtokBITSET = {\n    get: (buf, off, bit) => {\n        return (buf[off] & (1 << bit)) !== 0;\n    },\n    len: 1\n};\n\nfunction readUTF16String(buffer) {\n    let offset = 2;\n    let label = 'utf-16';\n    if (buffer[0] === 0xFE && buffer[1] === 0xFF) { // big endian\n        offset = 2;\n        label = 'utf-16be';\n    } else if (buffer[0] === 0xFF && buffer[1] === 0xFE) { // little endian\n        offset = 2;\n        label = 'utf-16le';\n    }\n\n    return new TextDecoder(label).decode(buffer.slice(offset));\n}\n\nfunction readUTF8String(buffer) {\n    return new TextDecoder('utf-8').decode(buffer);\n}\n\nfunction readWindows1292String(buffer) {\n    return new TextDecoder('iso-8859-1').decode(buffer);\n}\n\n/**\n *\n * @param buffer Decoder input data\n * @param encoding 'utf16le' | 'utf16' | 'utf8' | 'iso-8859-1'\n * @return {string}\n */\nexport function decodeString(buffer, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (buffer[0] === 0xFF && buffer[1] === 0xFE && buffer[2] === 0xFE && buffer[3] === 0xFF) {\n        buffer = buffer.slice(2);\n    }\n\n    if (encoding === 'utf16le' || encoding === 'utf16') {\n        return readUTF16String(buffer);\n    } else if (encoding === 'utf8') {\n        return readUTF8String(buffer);\n    } else if (encoding === 'iso-8859-1') {\n        return readWindows1292String(buffer);\n    }\n\n    throw Error(encoding + ' encoding is not supported!');\n}\n\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\n\nexport function LOG(message, ...optionalParams) {\n    console.log(message, optionalParams);\n}\n\nexport function ERROR(message, ...optionalParams) {\n    console.error(message, optionalParams);\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return {number} decoded bit aligned number\n */\nexport function getBitAllignedNumber(buf, byteOffset, bitOffset, len){\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = buf[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    } else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(buf, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is least significant bit\n * @return {boolean} decoded bit aligned number\n */\nexport function isBitSet(buf, byteOffset, bitOffset) {\n    return getBitAllignedNumber(buf, byteOffset, bitOffset, 1) === 1;\n}","import { trimRightNull } from './Common';\n\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | (buf[off + 2] << 7) | (buf[off + 1] << 14) | (buf[off] << 21);\n    },\n    len: 4\n};\n\nexport const UINT8 = {\n    get: (buf, off) => {\n        return buf[off];\n    }\n}\n\nexport const UINT32_BE = {\n    get: (buf, off) => {\n        return buf[off + 3] | (buf[off + 2] << 8) | (buf[off + 1] << 16) | (buf[off] << 24);\n    }\n}\n\nexport const UINT24_BE = {\n    get: (buf, off) => {\n        return buf[off + 2] | (buf[off + 1] << 8) | (buf[off] << 16);\n    }\n}\n\nexport const UINT16_BE = {\n    get: (buf, off) => {\n        return buf[off + 1] | (buf[off] << 8);\n    }\n}\n\nexport const ASCII_TEXT = {\n    get: (buf, off, len) => {\n        return new TextDecoder('ascii').decode(buf.slice(off, off + len));\n    }\n}\n\nexport const Id3v1StringType = {\n    get: (buf, off, len) => {\n        let value = new TextDecoder('ascii').decode(buf.slice(off, off + len));\n        value = trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}","import {Id3v1StringType, UINT8} from '../Utils/Token';\n\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nexport const ID3v1Header = {\n    len: 128,\n\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = Id3v1StringType.get(buf, off, 3);\n        return header === 'TAG' ? {\n            header,\n            title: Id3v1StringType.get(buf, off + 3, 30),\n            artist: Id3v1StringType.get(buf, off + 33, 30),\n            album: Id3v1StringType.get(buf, off + 63, 30),\n            year: Id3v1StringType.get(buf, off + 93, 4),\n            comment: Id3v1StringType.get(buf, off + 97, 28),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};","import {ID3v1Header} from './ID3v1Token';\nimport {Id3v1StringType} from '../Utils/Token';\n\nexport class ID3v1Parser {\n    parse(buffer) {\n        if (buffer.length < 128) {\n            console.log('[ID3v1Parser] Skip checking for ID3v1 because the file-size is less than 128 bytes');\n            return null;\n        }\n\n        return ID3v1Header.get(buffer, buffer.length - ID3v1Header.len);\n    }\n}\n\nexport function hasID3v1Header(buffer) {\n    if (buffer.length >= 128) {\n        const tag = Id3v1StringType.get(buffer, buffer.length - 128, 3);\n        return tag === 'TAG';\n    }\n    return false;\n}","import { strtokBITSET } from '../Utils/Common';\nimport { UINT16_BE, UINT32_BE, ASCII_TEXT, UINT32SYNCSAFE } from '../Utils/Token';\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n */\nexport const ID3v2Header = {\n    get: (buffer, offset) => {\n        // ID3v2/file identifier   'ID3'\n        const fileIdentifier = ASCII_TEXT.get(buffer, offset, 3); // new TextDecoder('ascii').decode(buffer.slice(offset, 3));\n\n        // ID3v2 versionIndex\n        const version = {\n            major: buffer[offset + 3],\n            revision: buffer[offset + 4]\n        };\n\n        // ID3v2 flags\n        const flags = {\n            raw: buffer[offset + 5],\n            // Unsynchronisation\n            unsynchronisation: strtokBITSET.get(buffer, offset + 5, 7),\n            // Extended header\n            isExtendedHeader: strtokBITSET.get(buffer, offset + 5, 6),\n            // Experimental indicator\n            expIndicator: strtokBITSET.get(buffer, offset + 5, 5),\n            footer: strtokBITSET.get(buffer, offset + 5, 4)\n        };\n\n        // ID3v2 size\n        // The ID3v2 tag size is the size of the complete tag after unsychronisation, including padding, excluding the header but not excluding the extended header\n        const size = UINT32SYNCSAFE.get(buffer, offset + 6);\n\n        return {\n            fileIdentifier,\n            version,\n            flags,\n            size\n        };\n    },\n    len: 10\n}\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_extended_header\n */\nexport const ExtendedHeader = {\n    len: 10,\n\n    get: (buf, off) => {\n        // Extended header size (10 or 6 excluding itself)\n        const size = UINT32_BE.get(buf, off);\n\n        // Extended Flags\n        const extendedFlags = UINT16_BE.get(buf, off + 4);\n\n        // Size of padding\n        const sizeOfPadding = UINT32_BE.get(buf, off + 6);\n\n        // CRC data present\n        const crcDataPresent = strtokBITSET.get(buf, off + 4, 31);\n\n        const crcData = crcDataPresent ? UINT32_BE.get(buf, off + 10) : null;\n\n        return {\n            size,\n            extendedFlags,\n            sizeOfPadding,\n            crcDataPresent,\n            crcData\n        };\n    }\n}\n\nexport const TextEncodingToken = {\n    len: 1,\n\n    get: (buf, off) => {\n        switch (buf[off]) {\n            case 0x00:\n                return { encoding: 'iso-8859-1' }; // binary\n            case 0x01:\n                return { encoding: 'utf16', bom: true };\n            case 0x02:\n                return { encoding: 'utf16', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n\n        }\n    }\n};","import {TextEncodingToken} from './ID3v2Token';\nimport {decodeString} from '../Utils/Common';\n\nconst defaultEnc = 'iso-8859-1';\n\nexport class FrameParser {\n\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     */\n    constructor(major)  {\n        this.major = major;\n    }\n\n    readData(b, type) {\n\n        if (b.length === 0) {\n            console.log(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n\n        const {encoding, bom} = TextEncodingToken.get(b, 0);\n        let output = [];\n\n        console.debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type) {\n            case 'TPE1': // 4.2.1. Text information frames - details\n            case 'TIT2': {\n                const text = decodeString(b.slice(1), encoding).replace(/\\x00+$/, '');\n                output = this.major >= 4 ? this.splitValue(type, text) : [text];\n            }\n            default:\n                //console.log('Warning: unsupported id3v2-tag-type: ' + type);\n                break;\n        }\n\n        return output;\n    }\n\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                console.log(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            } else {\n                values = text.split(/\\//g);\n            }\n        } else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n}","import { ExtendedHeader, ID3v2Header } from './ID3v2Token';\nimport { strtokBITSET } from '../Utils/Common';\nimport { ASCII_TEXT, UINT24_BE, UINT32_BE, UINT32SYNCSAFE } from '../Utils/Token';\nimport { FrameParser } from './FrameParser';\n\nexport class ID3v2Parser {\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.slice(0, writeI);\n    }\n\n    static readFrameData(buf, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags.format.unsynchronisation) {\n                    buf = ID3v2Parser.removeUnsyncBytes(buf);\n                }\n                if (frameHeader.flags.format.data_length_indicator) {\n                    buf = buf.slice(4, buf.length);\n                }\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n    }\n\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: strtokBITSET.get(b, 0, 6),\n                file_alter_preservation: strtokBITSET.get(b, 0, 5),\n                read_only: strtokBITSET.get(b, 0, 4)\n            },\n            format: {\n                grouping_identity: strtokBITSET.get(b, 1, 7),\n                compression: strtokBITSET.get(b, 1, 3),\n                encryption: strtokBITSET.get(b, 1, 2),\n                unsynchronisation: strtokBITSET.get(b, 1, 1),\n                data_length_indicator: strtokBITSET.get(b, 1, 0)\n            }\n        };\n    }\n\n    static readFrameHeader(v, majorVer) {\n        let header;\n        switch (majorVer) {\n\n            case 2:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 3),\n                    length: UINT24_BE.get(v, 3)\n                };\n                break;\n\n            case 3:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32_BE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            case 4:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32SYNCSAFE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n\n        return header;\n    }\n\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw new Error('header versionIndex is incorrect');\n        }\n    }\n\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n\n        while (true) {\n            if (offset === data.length) break;\n\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                console.log('Illegal ID3v2 tag length');\n                break;\n            }\n\n            const frameHeaderBytes = data.slice(offset, offset += frameHeaderLength);\n            const frameHeader = ID3v2Parser.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n\n            // Last frame. Check first char is a letter, bit of defensive programming\n            if (frameHeader.id === '' || frameHeader.id === '\\u0000\\u0000\\u0000\\u0000' || 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(frameHeader.id[0]) === -1) {\n                console.log('Illegal ID3v2 tag header', frameHeaderBytes, frameHeader.id);\n                break;\n            }\n\n            const frameDataBytes = data.slice(offset, offset += frameHeader.length);\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, true, []);\n\n            console.log('[ID3v2Parser] parseMetadata', offset, frameHeader.length, frameHeader.id, values);\n            tags.push({ id: frameHeader.id, value: values });\n        }\n        return tags;\n    }\n\n    parseExtendedHeader(buffer) {\n        const extendedHeader = ExtendedHeader.get(buffer, 10);\n\n        return this.parseId3Data(buffer, this.id3Header.size + extendedHeader.size + 4, this.id3Header.size);\n    }\n\n    parseId3Data(buf, offset, dataLen) {\n        const buffer = buf.slice(offset, offset + dataLen);\n        return this.parseMetadata(buffer)\n    }\n\n    parse(buffer) {\n        const id3Header = ID3v2Header.get(buffer, 0);\n\n        this.id3Header = id3Header;\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new Error('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n\n        if (id3Header.flags.isExtendedHeader) {\n            return this.parseExtendedHeader(buffer);\n        } else {\n            return this.parseId3Data(buffer, ID3v2Header.len, id3Header.size);\n        }\n    }\n}\n\nexport function hasID3v2Header(buffer) {\n    if (buffer.length > 10) {\n        const tag = ASCII_TEXT.get(buffer, 0, 3);\n        return tag === 'ID3';\n    }\n    return false;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { hasID3v1Header, ID3v1Parser } from './ID3v1/ID3v1Parser';\nimport { hasID3v2Header, ID3v2Parser } from './ID3v2/ID3v2Parser';\n\nexport class ID3Parser {\n    getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    async parse(file) {\n        const tags = { artist: '', title: '' };\n        const result = { tags };\n\n        if (!file) return result;\n\n        const arrayBuffer = await this.getArrayBuffer(file);\n        if (!arrayBuffer) return result;\n\n        const buffer = new Uint8Array(arrayBuffer);\n        if (!buffer) return result;\n\n        if (hasID3v2Header(buffer)) {\n            const id3Tags = new ID3v2Parser().parse(buffer);\n            if (id3Tags) {\n                const artistTag = id3Tags.find(x => x.id === 'TPE1');\n                if (artistTag && artistTag.value.length > 0){\n                    tags.artist = artistTag.value[0];\n                }\n                const titleTag = id3Tags.find(x => x.id === 'TIT2');\n                if (titleTag && titleTag.value.length > 0){\n                    tags.title = titleTag.value[0];\n                }\n            }\n        } else if (hasID3v1Header(buffer)) {\n            const id3Tags = new ID3v1Parser().parse(buffer);\n\n            if (id3Tags) {\n                tags.artist = id3Tags.artist;\n                tags.title = id3Tags.title;\n            }\n        }\n\n        return result;\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\nimport { ID3Parser } from '../Components/Player/Steaming/MP3/ID3Parser';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaTags(file) {\n    return new Promise(async resolve => {\n        const tag = await new ID3Parser().parse(file);\n\n        const { tags } = tag;\n        const { artist, title } = tags;\n\n        const audio = document.createElement('audio');\n        const url = URL.createObjectURL(file);\n\n        audio.src = url;\n        audio.addEventListener('loadedmetadata', function(){\n            URL.revokeObjectURL(url);\n            const duration = audio.duration;\n            audio.src = null;\n            resolve({ title, performer : artist, duration : Math.trunc(duration) });\n        },false);\n        audio.addEventListener('error', function() {\n            resolve(null);\n        });\n    })\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    const { name, type, size } = file;\n\n    if (type === 'audio/mp3') {\n        const tags = await getMediaTags(file);\n        if (tags) {\n            const { title, performer, duration } = tags;\n\n            return ({\n                '@type': 'messageAudio',\n                audio: {\n                    '@type': 'audio',\n                    duration,\n                    title,\n                    performer,\n                    file_name: name,\n                    mime_type: type,\n                    album_cover_minithumbnail: null,\n                    album_cover_thumbnail: null,\n                    audio: {\n                        '@type': 'file',\n                        id: fileId,\n                        size,\n                        expected_size: size,\n                        local: {\n                            is_downloading_completed: true\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    return ({\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: name,\n            mime_type: type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size,\n                expected_size: size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    });\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return ({\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [ photoSize ]\n            }\n        });\n    } else {\n        return null;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeek': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeeking': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    { thumbnailSrc && (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <>\n                            {thumbnailSrc && (\n                                <img\n                                    className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                                    draggable={false}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <>\n                            { thumbnailSrc && (\n                                <img\n                                    className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                                    draggable={false}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                (this.ivInView && !this.openIVMedia))\n        ) {\n            player.play();\n        } else {\n            player.pause();\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n        const source = src ? <source src={src} type={mime_type}/> : null;\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        >\n                            {source}\n                        </video>\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing, active } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioSubtitle(audio);\n        const audioSubtitle = getAudioShortTitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='audio-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>{audioSubtitle}</div>\n                    <VoiceNoteSlider className='audio-slider' chatId={chatId} messageId={messageId} duration={duration} style={{ opacity: active ? 1 : 0 }}/>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            seekProgress: 0,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    onClientUpdateMediaSeeking = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: update.value,\n                seeking: true,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: 0,\n                seeking: false,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, playerDuration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file, seekProgress, seeking } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(time, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\n        const strings = [];\n        if (!isDownloadingCompleted) {\n            strings.push(sizeString);\n        }\n        if (!isDownloadingActive) {\n            strings.push(timeString);\n        }\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {<span>{strings.join(', ')}</span>}\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, dragging } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (messageId !== update.messageId) return;\n\n        const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n        const value = this.getValue(update.currentTime, playerDuration, active);\n\n        if (dragging) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration\n            });\n        } else {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, dragging } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            let value = this.state.value;\n            if (!dragging) {\n                value = this.getValue(active ? currentTime : 0, playerDuration, true);\n            }\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        this.setState({\n            dragging: true\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { chatId, messageId } = this.props;\n        const { value, active } = this.state;\n        if (!active) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaSeek',\n            chatId,\n            messageId,\n            value\n        });\n\n        this.setState({\n            dragging: false\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { chatId, messageId } = this.props;\n        const { active, dragging } = this.state;\n        if (!active) return;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaSeeking',\n                chatId,\n                messageId,\n                value\n            });\n        }\n\n        this.setState({\n            value\n        });\n    };\n\n    render() {\n        const { className, style } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className={classNames('voice-note-slider', className)} style={style}>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        thumb: 'voice-note-slider-thumb',\n                        active: 'voice-note-slider-active'\n                    }}\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    value={value}\n                    onChange={this.handleChange}\n                    onChangeCommitted={this.handleChangeCommitted}\n                    onMouseDown={this.handleMouseDown}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { clamp, getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.sourceRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n\n        const source = this.sourceRef.current;\n        if (!source) return;\n\n        if (source.src !== src) {\n            source.src = src;\n            player.load();\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = clamp(progressTime / videoDuration * 100, 0, 100);\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        >\n                            <source ref={this.sourceRef} src={null} type='video/mp4'/>\n                        </video>\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport './StickerSet.css';\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info, theme } = this.props;\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { info, onSelect, onMouseDown, onMouseEnter, onDeleteClick } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className='sticker-set-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseEnter={onMouseEnter}\n                onMouseDown={onMouseDown}\n                style={{\n                    width: STICKER_SMALL_DISPLAY_SIZE,\n                    height: STICKER_SMALL_DISPLAY_SIZE\n                }}>\n                <Sticker\n                    key={x.sticker.id}\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    preview\n                    source={StickerSourceEnum.PICKER}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className='sticker-set-title'>\n                    <div className='sticker-set-title-wrapper'>\n                        <span>{title}</span>\n                    </div>\n                    {onDeleteClick && (\n                        <IconButton\n                            aria-label='delete'\n                            classes={{ root: 'sticker-set-icon-root' }}\n                            size='small'\n                            onClick={onDeleteClick}>\n                            <ClearIcon fontSize='inherit' />\n                        </IconButton>\n                    )}\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired,\n    onDeleteClick: PropTypes.func\n};\n\nexport default StickerSet;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, start, options } = this;\n\n        if (now - start > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - start, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n\n        this.state = { position: 0 };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    onClientUpdateStickerSetPosition = update => {\n        const { position } = update;\n\n        this.setState({ position });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.position !== this.state.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.state;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        const scrollFrom = scroll.scrollLeft;\n        const scrollTo = position * 44 - 147;\n\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n        const anchorTo = position * 44;\n\n        if (animator) {\n            animator.stop();\n        }\n\n        this.animator = new Animator(0, [\n            {\n                from: scrollFrom,\n                to: scrollTo,\n                func: left => (scroll.scrollLeft = left)\n            },\n            {\n                from:\n                    Math.abs(anchorTo - anchorFrom) > 338\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\n                        : anchorFrom,\n                to: anchorTo,\n                func: left => (anchorNode.style.left = left + 'px')\n            }\n        ]);\n\n        setTimeout(() => {\n            if (!this.animator) return;\n\n            this.animator.start();\n        }, 0);\n        // this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft += event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { stickers } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                style={{ width: 32, height: 32 }}\n                sticker={x}\n                play={false}\n                autoplay={false}\n                blur={false}\n                displaySize={32}\n                preview\n                source={StickerSourceEnum.PICKER_HEADER}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker-header'>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>{items}</div>\n                    <div ref={this.anchorRef} className='stickers-picker-header-anchor' />\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default StickersPickerHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            recent: null,\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, recent, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.recent !== recent) {\n            return true;\n        }\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n        StickerStore.on('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n        StickerStore.off('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n\n    onUpdateInstalledStickerSets = update => {\n        const { is_masks, sticker_set_ids } = update;\n        if (!is_masks) return;\n\n        this.filterSets();\n    };\n\n    onUpdateRecentStickers = update => {\n        this.reloadRecentContent();\n    };\n\n    filterSets(sticker_set_ids) {\n        const { sets, stickerSets } = this.state;\n    }\n\n    async reloadRecentContent() {\n        const recent = await TdLibController.send({\n            '@type': 'getRecentStickers',\n            is_attached: false\n        });\n\n        this.setState({\n            recent\n        });\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (recent, stickerSets, sets) => {\n        // console.log('[sp] loadContent', recent, stickerSets, sets);\n\n        if (!recent) {\n            recent = await TdLibController.send({\n                '@type': 'getRecentStickers',\n                is_attached: false\n            });\n        }\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        }, []);\n\n        this.setState({\n            recent,\n            stickerSets,\n            sets: slicedSets,\n            fullSets: sets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let firstOffsetTop = 0;\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n\n                    const offsetTop = node.offsetTop - firstOffsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSetPosition',\n            position\n        });\n    };\n\n    handleScroll = async () => {\n        //this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => {\n            this.loadingChunk = false;\n        });\n\n        this.setsLength += result.length;\n        this.setState({ sets: sets.concat(result) });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { recent, sets } = this.state;\n\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { recent, sets } = this.state;\n\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { recent, sets } = this.state;\n\n                    const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = async position => {\n        const { sets, stickerSets } = this.state;\n        const { scrollRef } = this;\n\n        if (position < sets.length) {\n            const element = this.itemsMap.get(sets[position].id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    const scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                }\n            }\n        } else if (position < stickerSets.sets.length) {\n            if (this.loadingChunk) return;\n            if (stickerSets.sets.length === sets.length) return;\n\n            this.loadingChunk = true;\n            const promises = [];\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n            this.setsLength += result.length;\n            let concatSets = sets.concat(result);\n            this.setState({ sets: concatSets }, () => {\n                if (position < concatSets.length) {\n                    this.handleSelectSet(position);\n                }\n            });\n        }\n    };\n\n    handleDeleteRecent = () => {\n        TdLibController.send({\n            '@type': 'clearRecentStickers',\n            is_attached: false\n        });\n    };\n\n    handleDeleteStickerSet = id => {\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: id,\n            is_installed: false\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { recent, stickerSets, sets, headerStickers } = this.state;\n        // console.log('[sp] render', recent, stickerSets, sets);\n        // if (!stickerSets) return null;\n        //\n        // if (!sets) return null;\n        // if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseEnter={this.handleMouseEnter}\n            />\n        ));\n\n        const recentInfo =\n            recent && recent.stickers.length > 0\n                ? {\n                      stickers: recent.stickers,\n                      title: t('RecentStickers')\n                  }\n                : null;\n\n        return (\n            <div className='stickers-picker'>\n                <StickersPickerHeader onSelect={this.handleSelectSet} stickers={headerStickers} />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {Boolean(recentInfo) && (\n                        <StickerSet\n                            info={recentInfo}\n                            onSelect={this.handleStickerSelect}\n                            onMouseDown={this.handleMouseDown}\n                            onMouseEnter={this.handleMouseEnter}\n                            onDeleteClick={this.handleDeleteRecent}\n                        />\n                    )}\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(StickersPicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e33e8791554f674a437f.worker.js\");\n};","import React from \"react\";\nimport createSvgIcon from \"@material-ui/core/esm/internal/svg-icons/createSvgIcon\";\n\nexport default createSvgIcon(\n    <g>\n        <path\n            d=\"M12,5.4c-3.6,0-6.6,3-6.6,6.6s3,6.6,6.6,6.6s6.6-3,6.6-6.6S15.6,5.4,12,5.4z M13.7,9.6c0.4,0,0.6,0.3,0.6,0.8\n\t\tc0,0.4-0.3,0.8-0.6,0.8c-0.4,0-0.6-0.3-0.6-0.8C13,9.9,13.3,9.6,13.7,9.6z M10.3,9.6c0.4,0,0.6,0.3,0.6,0.8c0,0.4-0.3,0.8-0.6,0.8\n\t\tc-0.4,0-0.6-0.3-0.6-0.8C9.7,9.9,10,9.6,10.3,9.6z M14.9,13.2C14.4,14.2,13.3,15,12,15c-1.3,0-2.4-0.7-2.9-1.8\n\t\tc-0.1-0.2,0-0.5,0.2-0.7s0.5,0,0.7,0.2c0.4,0.8,1.2,1.3,2.1,1.3c0.9,0,1.7-0.5,2.1-1.3c0.1-0.2,0.4-0.3,0.7-0.2\n\t\tC15,12.6,15.1,12.9,14.9,13.2z\"\n        />\n        <path d=\"M12,1C5.9,1,1,5.9,1,12s4.9,11,11,11s11-4.9,11-11S18.1,1,12,1z M12,21c-5,0-9-4-9-9s4-9,9-9s9,4,9,9S17,21,12,21z\" />\n    </g>,\n    \"Face\"\n);\n","import React from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Emoji } from \"emoji-mart\";\nimport { compose } from \"recompose\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withTranslation } from \"react-i18next\";\nimport * as faceapi from \"face-api.js\";\nimport _ from \"lodash\";\n//import EmotionManager from \"../../Workers/EmotionManager\";\n\nconst MODELPATH = \"/data/models\";\nconst WIDTH = 420;\nconst HEIGHT = 420;\nconst inputSize = 160;\n\nclass FaceCam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    //this.emotionManager = EmotionManager;\n    //this.emotionManager.loadNets();\n    this.state = {\n      fullDesc: null,\n      detections: null,\n      expressions: null,\n      facingMode: null,\n      currentEmotion: null\n    };\n\n    Promise.all([\n      faceapi.nets.tinyFaceDetector.load(MODELPATH),\n      faceapi.nets.faceExpressionNet.load(MODELPATH),\n      faceapi.nets.faceLandmark68Net.load(MODELPATH)\n    ])\n      .then(() => {\n        console.log(\"all nets are loaded\");\n        this.setInputDevice();\n      })\n      .catch(() => console.error(\"Nets didn't loaded\"));\n  }\n\n  setInputDevice = () => {\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(async devices => {\n        let inputDevice = await devices.filter(\n          device => device.kind === \"videoinput\"\n        );\n        if (inputDevice.length < 2) {\n          await this.setState({\n            facingMode: \"user\"\n          });\n        } else {\n          await this.setState({\n            facingMode: { exact: \"environment\" }\n          });\n        }\n      })\n      .then(this.startCapture);\n  };\n  startCapture = () => {\n    // capture all 1.5 sec a screenshot\n    console.log(\"start capture\");\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1000);\n  };\n\n  capture = async () => {\n    if (!!this.webcam.current) {\n      await this.getFullFaceDescription(\n        this.webcam.current.getScreenshot(),\n        inputSize\n      ).then(fullDesc => {\n        let currentEmotion = null;\n        if (fullDesc) {\n          let expressions = fullDesc.expressions;\n          currentEmotion = Object.keys(expressions).reduce((a, b) =>\n            expressions[a] > expressions[b] ? a : b\n          );\n\n          if (currentEmotion === \"happy\") {\n            currentEmotion = \"smile\";\n          }\n\n          this.setState({ currentEmotion });\n          this.sendEmotion();\n        }\n\n        this.setState({ fullDesc: fullDesc });\n      });\n    }\n  };\n\n  getFullFaceDescription = async function(blob, inputSize = 512) {\n    // tiny_face_detector options\n    let scoreThreshold = 0.4;\n    const OPTION = new faceapi.TinyFaceDetectorOptions({\n      inputSize,\n      scoreThreshold\n    });\n\n    // fetch image to api\n    let img = await faceapi.fetchImage(blob);\n\n    console.log(blob);\n    // detect all faces and generate full description from image\n    // including landmark and descriptor of each face\n    let fullDesc = await faceapi\n      .detectAllFaces(img, OPTION)\n      .withFaceLandmarks()\n      .withFaceExpressions();\n    return fullDesc[0];\n  };\n\n  sendEmotion = () => {\n    if (this.state.currentEmotion) {\n      this.props.emotionCallback(this.state.currentEmotion);\n    } else {\n      console.error(\"no emotion detected\");\n    }\n  };\n\n  render() {\n    const { detections, facingMode } = this.state;\n    let videoConstraints = null;\n    let camera = \"\";\n    if (!!facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode: facingMode,\n        screenshotFormat: \"image/jpeg\"\n      };\n      if (facingMode === \"user\") {\n        camera = \"Front\";\n      } else {\n        camera = \"Back\";\n      }\n    }\n\n    return (\n      <>\n        <Webcam\n          audio={false}\n          height={HEIGHT}\n          width={WIDTH}\n          ref={this.webcam}\n          videoConstraints={videoConstraints}\n        />\n      </>\n    );\n  }\n}\n\nconst enhance = compose(withTranslation());\nexport default enhance(FaceCam);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { emojis } from \"../../Stores/emotion/reducers/emojis\";\nimport { Emoji } from \"emoji-mart\";\nimport data from \"emoji-mart/data/all.json\";\n\nfunction RealEmojiPicker(props) {\n  let emojiList = props.emojis.multipleEmojis.map((emo) => (\n    <Emoji emoji={emo} size={32} onClick={props.onSelect} />\n  ));\n\n  return <div>{emojiList}</div>;\n}\n\nconst mapStateToProps = (state) => ({\n  currentEmotion: state.emotions.currentEmotion,\n  emojis: state.emojis.emojis.find(\n    (emojis) => emojis.id === state.emotions.currentEmotion\n  ),\n});\n\nexport default connect(mapStateToProps)(RealEmojiPicker);\n","import React from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../../Stores/emotion/action/constants\";\n\nclass Webcam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.streamCamVideo = this.streamCamVideo.bind(this);\n    this.videoElement = React.createRef();\n    this.state = {\n      fullDesc: null,\n      detections: null,\n      expressions: null,\n      facingMode: null,\n      currentEmotion: null,\n      count: 0,\n    };\n    Promise.all([\n      faceapi.nets.tinyFaceDetector.load(\"data/models/\"),\n      faceapi.nets.faceExpressionNet.load(\"data/models/\"),\n      faceapi.nets.faceLandmark68Net.load(\"data/models/\"),\n    ])\n      .then(() => {\n        console.log(\"all nets are loaded\");\n        this.streamCamVideo();\n        this.initEventListener(this.videoElement);\n      })\n      .catch(() => console.error(\"Nets didn't loaded\"));\n  }\n  streamCamVideo() {\n    const constraints = { audio: false, video: true };\n    const videoRef = this.videoElement.current;\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(function (mediaStream) {\n        videoRef.srcObject = mediaStream;\n        videoRef.onloadedmetadata = function (e) {\n          videoRef.play();\n        };\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      }); // always check for errors at the end.\n  }\n  componentDidMount() {}\n\n  handleClick = () => {\n    // when handleClick is called, newCount is set to whatever this.state.count is plus 1 PRIOR to calling this.setState\n    let newCount = this.state.count + 1;\n    this.setState({\n      count: newCount,\n    });\n  };\n\n  changeEmotion(detection) {\n    this.emit();\n  }\n\n  initEventListener(videoRef) {\n    const video = videoRef.current;\n\n    video.addEventListener(\"play\", () => {\n      setInterval(async () => {\n        const singleResult = await faceapi\n          .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\n          .withFaceLandmarks()\n          .withFaceExpressions();\n        console.log(singleResult);\n        if (!!singleResult[0]) {\n          const expressions = singleResult[0].expressions;\n          expressions.neutral = expressions.neutral*0.7\n          const currentEmotion = Object.keys(expressions).reduce((a, b) =>\n            expressions[a] > expressions[b] ? a : b\n          );\n          this.props.changeEmotion(currentEmotion);\n        }\n      }, 1000);\n    });\n  }\n\n  render() {\n    return (\n      <video\n        autoPlay={true}\n        ref={this.videoElement}\n        style={{ display: \"none\", visibility: \"hidden\" }}\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeEmotion: (emotion) => {\n      dispatch({ type: actions.CHANGE_EMOTION, payload: emotion });\n    },\n  };\n};\nexport default connect(null, mapDispatchToProps)(Webcam);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { compose } from \"recompose\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withTranslation } from \"react-i18next\";\nimport ApplicationStore from \"../../Stores/ApplicationStore\";\nimport LocalizationStore from \"../../Stores/LocalizationStore\";\nimport InsertEmoticonIcon from \"../../Assets/Icons/Face\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { EMOJI_PICKER_TIMEOUT_MS } from \"../../Constants\";\nimport Button from \"@material-ui/core/Button\";\nimport FaceCam from \"./FaceCam\";\nimport StickersPicker from \"./StickersPicker\";\nimport { emojiIndex } from \"emoji-mart\";\nimport \"./RealEmojiPicker\";\nimport RealEmojiPicker from \"./RealEmojiPicker\";\nimport Webcam from \"./Webcam\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../../Stores/emotion/action/constants\";\n\nconst styles = theme => ({\n  pickerRoot: {\n    zIndex: theme.zIndex.modal,\n    width: 338,\n    height: 200,\n    overflowX: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[8],\n    position: \"absolute\",\n    bottom: 54,\n    display: \"none\"\n  },\n  pickerRootOpened: {\n    display: \"block\"\n  }\n});\n\nclass FaceApiEmojiPickerButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      tab: 0,\n      currentEmotion: null\n    };\n  }\n\n  emotionCallback = emotionFromChild => {\n    this.setState({\n      currentEmotion: emotionFromChild\n    });\n  };\n  handleMouseClick = event => {\n    console.log(\"mouse clicked\");\n    console.log(this.state.currentEmotion);\n    if (this.state.currentEmotion) {\n      console.log(emojiIndex.search(this.state.currentEmotion)[0]);\n      this.props.onSelect(emojiIndex.search(this.state.currentEmotion)[0]);\n    }\n  };\n  // opens the menu and set state to open\n  handleButtonMouseEnter = event => {\n    this.buttonEnter = true;\n    setTimeout(() => {\n      if (!this.buttonEnter) return;\n\n      this.updatePicker(true);\n    }, EMOJI_PICKER_TIMEOUT_MS);\n  };\n\n  handleButtonMouseLeave = () => {\n    this.buttonEnter = false;\n    setTimeout(() => {\n      this.tryClosePicker();\n    }, EMOJI_PICKER_TIMEOUT_MS);\n  };\n\n  tryClosePicker = () => {\n    if (this.paperEnter) {\n      return;\n    } else {\n      this.updatePicker(false);\n    }\n  };\n\n  updatePicker = function(open) {\n    this.setState({ open });\n  };\n\n  handlePaperMouseEnter = () => {\n    this.paperEnter = true;\n    this.props.toggleLock()\n  };\n\n  handlePaperMouseLeave = () => {\n    // return;\n\n    this.paperEnter = false;\n    this.props.toggleLock()\n    setTimeout(() => {\n      this.tryClosePicker();\n    }, EMOJI_PICKER_TIMEOUT_MS);\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open, tab } = this.state;\n\n    return (\n      <>\n        <IconButton\n          className=\"inputbox-icon-button\"\n          aria-label=\"Emoticon\"\n          onMouseEnter={this.handleButtonMouseEnter}\n          onMouseLeave={this.handleButtonMouseLeave}\n          onClick={this.handleMouseClick}\n        >\n          <InsertEmoticonIcon />\n        </IconButton>\n        <div\n          className={classNames(classes.pickerRoot, {\n            [classes.pickerRootOpened]: open\n          })}\n          onMouseEnter={this.handlePaperMouseEnter}\n          onMouseLeave={this.handlePaperMouseLeave}\n        >\n          <RealEmojiPicker onSelect={this.props.onSelect} />\n          <Webcam />\n        </div>\n      </>\n    );\n  }\n}\n\nconst enhance = compose(\n  withStyles(styles, { withTheme: true }),\n  withTranslation()\n);\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleLock: () => {\n      dispatch({ type: actions.TOGGLE_LOCK});\n    },\n  };\n};\nexport default connect(null, mapDispatchToProps)(enhance(FaceApiEmojiPickerButton));\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('TextCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            AppStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\nimport { isChatMember } from '../../Utils/Chat';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        const { chat_list } = chat;\n        if (chat_list && chat_list['@type'] !== type) {\n            return;\n        }\n\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0' && isChatMember(chat.id)) {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        console.log('[updateChatOrder] newChatIds', update, newChatIds);\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.chat_list) {\n                    ChatStore.updateChatChatList(x.id, x.chat_list);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            this.setState({\n                blob,\n                blobURL: URL.createObjectURL(blob)\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>Drag to Reposition</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities })\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = { };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const title = this.titleRef.current.value;\n        if (!title.trim()) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (this.state.error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (this.photo) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: this.photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = blob => {\n        this.photo = blob;\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = { };\n    }\n\n    componentDidMount() {\n        let { userIds } = this.props;\n\n        userIds = [UserStore.getMyId()];\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const title = this.titleRef.current.value;\n        if (!title.trim()) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (this.state.error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            is_channel: false,\n            description: '',\n            location: null\n        });\n\n        if (this.photo) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: this.photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = blob => {\n        this.photo = blob;\n    };\n\n    render() {\n        let { popup, t, userIds } = this.props;\n        const { error } = this.state;\n\n        userIds = [UserStore.getMyId()];\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n        const itemsCaption = userIds.length > 1 ? `${userIds.length} members` : '1 member';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        {/*<div className='sidebar-page-section'>*/}\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                        {/*</div>*/}\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nNewGroup.defaultProps = {\n    userIds: [UserStore.getMyId()]\n}\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nimport FaceApiEmojiPickerButton from \"./FaceApiEmojiPickerButton\";\n\nconst EmojiPickerButton = React.lazy(() =>\n    import(\"./../ColumnMiddle/EmojiPickerButton\")\n);\nconst FacePickerButton = React.lazy(() =>\n    import(\"./../ColumnMiddle/FaceApiEmojiPickerButton\")\n);\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n          <div className=\"inputbox-background\">\n            <div className=\"inputbox\">\n              <div className=\"inputbox-bubble\">\n                <InputBoxHeader\n                  chatId={chatId}\n                  messageId={replyToMessageId}\n                  editMessageId={openEditMedia ? 0 : editMessageId}\n                  onClick={this.handleHeaderClick}\n                />\n                <div className=\"inputbox-wrapper\">\n                    <div className=\"inputbox-left-column\">\n                        <FaceApiEmojiPickerButton onSelect={this.handleEmojiSelect} />\n                    </div>\n                    <div className=\"inputbox-left-column\">\n                        <React.Suspense\n                            fallback={\n                                <IconButton\n                                    className=\"inputbox-icon-button\"\n                                    aria-label=\"Emoticon\"\n                                >\n                                    <InsertEmoticonIcon />\n                                    {console.debug(\"load: \", IconButton)};\n                                </IconButton>\n                            }\n                        >\n                            <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                        </React.Suspense>\n                    </div>\n                  <div className=\"inputbox-middle-column\">\n                    <div\n                      id=\"inputbox-message\"\n                      ref={this.newMessageRef}\n                      placeholder={isMediaEditing ? t(\"Caption\") : t(\"Message\")}\n                      contentEditable\n                      suppressContentEditableWarning\n                      onKeyDown={this.handleKeyDown}\n                      onPaste={this.handlePaste}\n                      onInput={this.handleInput}\n                    />\n                  </div>\n                  <div className=\"inputbox-right-column\">\n                    <input\n                      ref={this.attachDocumentRef}\n                      className=\"inputbox-attach-button\"\n                      type=\"file\"\n                      multiple=\"multiple\"\n                      onChange={this.handleAttachDocumentComplete}\n                    />\n                    <input\n                      ref={this.attachPhotoRef}\n                      className=\"inputbox-attach-button\"\n                      type=\"file\"\n                      multiple=\"multiple\"\n                      accept=\"image/*\"\n                      onChange={this.handleAttachPhotoComplete}\n                    />\n                    {!Boolean(editMessageId) && (\n                      <AttachButton\n                        chatId={chatId}\n                        onAttachPhoto={this.handleAttachPhoto}\n                        onAttachDocument={this.handleAttachDocument}\n                        onAttachPoll={this.handleAttachPoll}\n                      />\n                    )}\n\n                    {/*<IconButton>*/}\n                    {/*<KeyboardVoiceIcon />*/}\n                    {/*</IconButton>*/}\n                  </div>\n                </div>\n              </div>\n              <div className=\"inputbox-send-button-background\">\n                <IconButton\n                  className=\"inputbox-send-button\"\n                  aria-label=\"Send\"\n                  size=\"small\"\n                  onClick={this.handleSubmit}\n                >\n                  {editMessageId ? <DoneIcon /> : <SendIcon />}\n                </IconButton>\n              </div>\n            </div>\n            {!isPrivateChat(chatId) && (\n              <CreatePollDialog onSend={this.handleSendPoll} />\n            )}\n            <PasteFilesDialog\n              files={files}\n              onConfirm={this.handlePasteConfirm}\n              onCancel={this.handlePasteCancel}\n            />\n            {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n            <EditUrlDialog\n              open={openEditUrl}\n              defaultText={defaultText}\n              defaultUrl={defaultUrl}\n              onDone={this.handleDoneEditUrl}\n              onCancel={this.handleCancelEditUrl}\n            />\n            <EditMediaDialog\n              open={openEditMedia}\n              chatId={chatId}\n              messageId={editMessageId}\n              newItem={newItem}\n              onEdit={this.handleEditMedia}\n              onSend={this.handleSendMedia}\n              onCancel={this.handleCancelEditMedia}\n            />\n          </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            AppStore.changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>{t('Download')}</MenuItem>*/}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nexport default withTranslation()(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}