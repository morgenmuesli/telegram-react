{"version":3,"sources":["Utils/Phone.js","Actions/Client.js","Utils/ActionScheduler.js","Stores/ApplicationStore.js","Stores/MessageStore.js","Stores/SupergroupStore.js","Utils/Store.js","Stores/NotificationStore.js","Constants.js","Language.js","Stores/emotion/reducers/emojis.js","Stores/EventEmitter.js","Utils/Color.js","Theme.js","Assets/telegram-logo.svg","Stores/AuthorizationStore.js","Components/Auth/Caption.js","Components/Auth/Country.js","Components/Auth/Phone.js","Components/Auth/Code.js","Components/Auth/Password.js","Components/Auth/AuthErrorDialog.js","Components/Auth/AuthForm.js","Components/Additional/AppInactive.js","Components/Footer.js","Components/InactivePage.js","Components/Additional/NativeApp.js","Components/NativeAppPage.js","TelegramApp.js","Stores/emotion/reducers/emotions.js","Stores/emotion/reducers/index.js","Stores/emotion/store/index.js","index.js","Utils/Common.js","Controllers/TdLibController.js","Utils/InputTypingManager.js","Stores/ChatStore.js","registerServiceWorker.js","Utils/HOC.js","Stores/OptionStore.js","Localization/Cache.js","Stores/LocalizationStore.js","Components/ColumnMiddle/HeaderProgress.js","Stores/emotion/action/constants.js","Stores/UserStore.js"],"names":["data","loadData","a","fetch","response","text","lines","split","data2","forEach","x","item","prefix","code","name","pattern","count","Number","emoji","push","phone","filter","console","error","clearPhone","replace","toLowerCase","getCountryFromPhone","index","findIndex","option","startsWith","isPhoneWithOptionCode","formatPhoneNumber","country","result","i","length","substring","formatByPattern","openArchive","TdLibController","clientUpdate","open","editMessage","chatId","messageId","deleteMessages","messageIds","replyMessage","forward","info","forwardMessages","openUser","userId","popup","openChat","closeChat","openReply","highlightMessage","selectMessage","selected","clearSelection","setInstantViewViewerContent","content","setMediaViewerContent","setProfileMediaViewerContent","setInstantViewContent","searchChat","query","ActionScheduler","actionCallback","cancelCallback","add","key","timeout","action","cancel","actions","has","expire","Date","setMilliseconds","getMilliseconds","set","timerId","clearTimeout","setTimeout","invoke","get","delete","remove","now","actionTimeout","handleTimer","expired","value","this","Map","store","onWindowResize","isSmallWidth","nextIsSmallWidth","window","innerWidth","PAGE_WIDTH_SMALL","reset","dialogsReady","cacheLoaded","setPhoneNumberRequest","dialogChatId","statistics","authorizationState","defaultPhone","connectionState","isChatDetailsVisible","mediaViewerContent","profileMediaViewerContent","dragParams","actionScheduler","handleScheduledAction","handleCancelScheduledAction","addScheduledAction","invokeScheduledAction","removeScheduledAction","log","onUpdate","update","authorization_state","loggingOut","sendTdParameters","send","subscribeNotifications","init","document","title","emit","chat_id","is_marked_as_unread","state","type","confirm","logOut","alert","onClientUpdate","extendedUpdate","nextChatId","nextMessageId","previousChatId","previousMessageId","dragging","files","setPhoneNumber","focused","inProgress","setChatId","phone_number","then","catch","onUpdateStatistics","addTdLibListener","on","removeTdLibListener","off","addStatistics","addEventListener","visibility","source1","source2","Object","assign","EventEmitter","app","items","selectedItems","message","chat","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","id","error_code","error_message","size","clear","deletedMessage","messages","fullInfoItems","prevSupergroup","supergroup","setFullInfo","supergroup_id","supergroup_full_info","fullInfo","isChatMuted","ChatStore","notification_settings","use_default_mute_for","mute_for","settings","getScopeNotificationSettings","getChatMuteFor","NotificationStore","SupergroupStore","is_channel","isChannelChat","isMessageMuted","contains_unread_mention","hasMention","use_default_disable_mention_notifications","disable_mention_notifications","getChatDisableMentionNotifications","hasPinnedMessage","use_default_disable_pinned_message_notifications","disable_pinned_message_notifications","getChatDisablePinnedMessageNotifications","chatStore","messageStore","MessageStore","appInactive","newMessages","windowFocused","timerHandler","nextSoundAt","enableSound","onTimer","unreadCount","getUnreadCount","APP_NAME","getElementById","href","last_read_inbox_message_id","chatMap","newChatMap","updateTimer","message_ids","is_permanent","filterMap","map","is_outgoing","Audio","play","NOTIFICATION_AUDIO_DELAY_MS","scope","m","setInterval","clearInterval","notifications","ANIMATION_DURATION_200MS","ANIMATION_DURATION_300MS","CHAT_SLICE_LIMIT","EMOJI_PICKER_TIMEOUT_MS","FILE_PRIORITY","IV_LOCATION_HEIGHT","IV_LOCATION_WIDTH","IV_PHOTO_SIZE","IV_PHOTO_DISPLAY_SIZE","KEY_AUTH_STATE","KEY_SUGGESTED_LANGUAGE_PACK_ID","LOCATION_HEIGHT","LOCATION_SCALE","LOCATION_WIDTH","LOCATION_ZOOM","MAX_SNACK","MEDIA_SLICE_LIMIT","MESSAGE_SLICE_LIMIT","MESSAGE_SPLIT_MAX_TIME_S","MUTED_VALUE_MAX","MUTED_VALUE_MIN","NOTIFICATION_AUTO_HIDE_DURATION_MS","NOTIFICATION_DEBOUNCE_DELAY_MS","OPTIMIZATIONS_FIRST_START","PHOTO_BIG_SIZE","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","PLAYER_VOLUME_NORMAL","PLAYER_STARTTIME","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","PLAYER_PROGRESS_TIMEOUT_MS","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","POLL_QUESTION_MAX_LENGTH","POLL_OPTION_LENGTH","POLL_OPTION_HINT_LENGTH","POLL_OPTION_MAX_LENGTH","POLL_OPTIONS_MAX_COUNT","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","POLL_RESULTS_SLICE_LENGTH","PRELOAD_AUDIO_SIZE","PRELOAD_ANIMATION_SIZE","PRELOAD_DOCUMENT_SIZE","PRELOAD_STICKER_SIZE","PRELOAD_VOICENOTE_SIZE","PRELOAD_VIDEO_SIZE","PRELOAD_VIDEONOTE_SIZE","PROFILE_PHOTO_BIG_SIZE","PROFILE_PHOTO_SMALL_SIZE","SCROLL_PRECISION","SCROLL_CHATS_PRECISION","SERVICE_NOTIFICATIONS_USER_ID","SHARED_MESSAGE_SLICE_LIMIT","STICKER_DISPLAY_SIZE","STICKER_HINT_DISPLAY_SIZE","STICKER_PREVIEW_DISPLAY_SIZE","STICKER_SMALL_DISPLAY_SIZE","THUMBNAIL_BLURRED_SIZE_90","THUMBNAIL_PRIORITY","TYPING_INPUT_INTERVAL_S","TYPING_OUTPUT_INTERVAL_S","VERBOSITY_JS_MAX","VERBOSITY_JS_MIN","VERBOSITY_MAX","VERBOSITY_MIN","USERNAME_LENGTH_MIN","WASM_FILE_NAME","WASM_FILE_HASH","withLanguage","WrappedComponent","LanguageWrapper","i18n","LocalizationStore","props","React","Component","displayName","getDisplayName","getEmojiDataFromNative","nativeString","_","find","emojiIndex","emojis","native","initialState","singleEmoji","multipleEmojis","search","loading","getSingleEmoji","emotion","getMultipleEmoji","GET_SINGLE_EMOJI","payload","GET_MULTIPLE_EMOJI","observers","events","listener","event","l","args","cloned","concat","observer","apply","getBadgeSelectedColor","rgb","primaryHLS","r","g","b","parseInt","cmin","Math","min","cmax","max","delta","h","s","round","abs","toFixed","RGBToHSL","createTheme","primary","MuiTouchRipple","child","color","rippleVisible","opacity","transform","hover","hoverOpacity","theme","createMuiTheme","palette","secondary","main","typography","useNextVariants","shape","borderRadius","overrides","MuiOutlinedInput","input","padding","MuiAutocomplete","paddingLeft","paddingTop","paddingRight","paddingBottom","paper","maxHeight","MuiMenuList","root","minWidth","MuiList","style","documentElement","setProperty","disabled","zIndex","modal","dark","light","grey","divider","background","updateDarkTheme","default","updateLightTheme","withTheme","ThemeWrapper","onClientUpdateThemeChanging","localStorage","setItem","JSON","stringify","setState","ApplicationStore","themeOptions","parse","getItem","StylesProvider","injectFirst","_extends","target","arguments","source","prototype","hasOwnProperty","call","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","stroke","strokeWidth","fillRule","d","_ref","svgRef","className","width","height","viewBox","ref","ForwardRef","forwardRef","current","save","load","removeItem","authorization","Lottie","lazy","Caption","closeData","requests","Promise","all","results","json","idleData","peekData","trackingData","lastUpdate","onClientUpdateMonkeyIdle","onClientUpdateMonkeyTracking","onClientUpdateMonkeyClose","onClientUpdateMonkeyPeek","lottieRef","anim","playSegments","prevCode","from","to","peek","createRef","AuthStore","control","Suspense","fallback","options","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Country","cleanProgressStatus","status","isConnecting","isWhitelistKey","getCountryFromCode","Phone","onUpdateConnectionState","setCountryCode","connecting","onClientUpdateSetPhoneCanceled","onClientUpdateSetPhoneError","errorString","string","onClientUpdateSetPhoneResult","onUpdateOption","setSuggestedLanguagePackId","handleKeyPress","preventDefault","handleDone","stopPropagation","phoneNumber","isBad","match","isValidPhoneNumber","handleChangeLanguage","suggestedLanguage","nextLanguage","language","fallbackLng","handleFilterOptions","inputValue","names","some","isValidOption","handleCountryChange","nextCountry","prevPhone","nextPhone","trimStart","phoneInputRef","focus","handleKeepChange","keep","handlePhoneChange","phone1","phone2","handlePaste","plainText","clipboardData","getData","ch","execCommand","AppStore","countryCode","nextProps","nextState","nextContext","OptionStore","languagePackId","loadLanguage","t","autoComplete","Typography","variant","HeaderProgress","Autocomplete","debug","noOptionsText","autoHighlight","getOptionLabel","renderOption","renderInput","params","TextField","classes","label","inputProps","fullWidth","filterOptions","onChange","inputRef","Boolean","helperText","autoFocus","onKeyPress","onPaste","Checkbox","checked","Button","disableElevation","onClick","Link","lng","withTranslation","Code","handleNext","isValid","first_name","last_name","finally","handleBack","onChangePhone","handleChange","e","codeLength","codeInfo","getPhoneNumber","getCodeLength","subtitle","getSubtitle","classNames","IconButton","aria-label","fontSize","maxLength","Password","password","handleMouseDownPassword","handleClickShowPassword","showPassword","sendMonkeyPeek","func","wait","immediate","context","later","callNow","debounce","passwordHint","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","onMouseDown","edge","labelWidth","FormHelperText","AuthErrorDialog","handleAuthError","bind","handleClose","handleKeyDown","Dialog","transitionDuration","onKeyDown","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","AuthForm","loadContent","terms_of_service","code_info","termsOfService","password_hint","has_recovery_email_address","recovery_email_address_pattern","hasRecoveryEmailAddress","recoveryEmailAddressPattern","onLoad","handleLoad","AppInactive","src","alt","handleReload","location","reload","Footer","packageJson","version","PureComponent","InactivePage","NativeApp","isIOS","isWindowsPhone","handleInstall","NativeAppPage","MainPage","TelegramApp","onClientUpdateTdLibDatabaseExists","exists","tdlibDatabaseExists","checkServiceWorker","registerServiceWorker","onUpdateFatalError","fatalError","onUpdateAuthorizationState","hasFocus","onClientUpdateAppInactive","inactive","handleChangePhone","handleDragOver","handleDrop","handleRefresh","handleDestroy","prevAuthorizationState","AuthorizationStore","nativeMobile","isMobile","isSmall","page","onDragOver","onDrop","aria-describedby","keyMap","openPinnedChat","offset_order","offset_chat_id","limit","chats","pinnedIndex","chat_ids","is_pinned","altKey","ctrlKey","user_id","UserStore","getMyId","force","onblur","onfocus","history","pushState","onpopstate","go","enhance","compose","withTelegramTheme","currentEmotion","isLocked","reducer","combineReducers","emotions","CHANGE_EMOTION","TOGGLE_LOCK","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","path","component","navigator","userAgent","platform","test","MSStream","isAppleDevice","getOSName","OSName","getBrowser","isEdge","documentMode","StyleMedia","stringToBoolean","trim","orderCompare","order1","order2","diff","getPhotoThumbnailSize","sizes","getSize","getPhotoSize","dimension","useWidth","photo","local","is_downloading_completed","currDiff","getFitSize","increaseToMax","floor","itemsInView","scrollContainerRef","itemsContainerRef","scrollContainer","itemsContainer","children","offsetTop","offsetHeight","scrollTop","throttle","previous","leading","remaining","trailing","getFirstLetter","str","char","toUpperCase","getLetters","readImageSize","file","resolve","reject","reader","FileReader","image","Image","readAsDataURL","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","isAuthorizationReady","between","first","last","clamp","getDurationString","secondsTotal","hours","minutes","seconds","getRandomInt","ceil","random","historyEquals","second","insertByOrder","array","element","comparator","slice","controller","setParameters","parameters","verbosity","jsVerbosity","useTestDC","readOnly","fastUpdating","useDatabase","mode","dbname","callback","req","indexedDB","existed","onsuccess","close","deleteDatabase","onupgradeneeded","databaseExists","logVerbosityLevel","jsLogVerbosityLevel","isBackground","wasmUrl","client","TdClient","disableLog","URLSearchParams","tag","tagVerbosity","request","process","apiHash","use_test_dc","api_id","api_hash","system_language_code","device_model","system_version","application_version","use_secret_chats","use_message_database","use_file_database","database_directory","files_directory","new_verbosity_level","InputTypingManager","timeoutCallback","addAction","clearAction","setActionsTimeout","expiredActions","setSeconds","getSeconds","typingManagers","onlineMemberCount","counters","skippedUpdates","chatList","wallpaper","loadClientData","clientData","saveClientData","obj","Array","entries","reduce","updating","emitUpdate","updates","action_bar","emitFastUpdate","chat_list","updateChatChatList","setOnlineMemberCount","online_member_count","order","draft_message","is_sponsored","last_message","user","profile_photo","pinned_message_id","unread_count","last_read_outbox_message_id","reply_markup_message_id","unread_mention_count","typingManager","getTypingManager","setTypingManager","client_data","setClientData","idMap","isLocalhost","hostname","register","URL","origin","swUrl","registerValidSW","checkValidServiceWorker","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","ready","pushManager","getSubscription","pushSubscription","unsubscribe","subscribe","userVisibleOnly","endpoint","p256dh_base64url","getKey","auth_base64url","deviceToken","device_token","other_user_ids","headers","unregister","funcs","arg","withSaveRef","forwardedRef","withRestoreRef","rest","Storage","getDefaults","expirationTime","Infinity","versions","Cache","services","storage","namespace","nowMS","getTime","i18nStamp","i18nVersion","defaultNS","use","initReactI18next","ns","fallbackNS","resources","en","ChatsAndContacts","SearchMessagesIn","ContactJoinedEnabled","ContactJoinedDisabled","NotificationsEnabled","NotificationsDisabled","PreviewEnabled","PreviewDisabled","BioAbout","Archived","Saved","EditProfile","GeneralSettings","PollQuizOneRightAnswer","LeftChannel","LeftGroup","EnterPassword","YourAccountProtectedWithPassword","DeletedMessage","YourPhone","SignInToTelegram","PhoneNumber","KeepMeSignedIn","StartText","Next","InvalidPhoneNumber","More","SendFileConfirmation","SendFilesConfirmation","SendMessage","ChatInfo","ChannelInfo","Stickers","Emoji","SelectChatToStartMessaging","Text","ViewChannelInfo","ViewGroupInfo","ViewProfile","GoToMessage","PhotosTitle","VideosTitle","VoiceTitle","UpdateDraftConfirmation","Search","NotEmojiFound","ChooseDefaultSkinTone","SearchResults","Recent","SmileysPeople","AnimalsNature","FoodDrink","Activity","TravelPlaces","Objects","Symbols","Flags","Custom","translation","AppName","Connecting","ConnectingToProxy","Loading","Updating","WaitingForNetwork","ContinueOnThisLanguage","SendAsFile","SendAsPhoto","ru","interpolation","escapeValue","react","cache","LocalizationCache","enabled","defaultResources","read","err","currentResources","addResourceBundle","only_local","changeLanguage","processStrings","languagePackStrings","strings","zero_value","one_value","two_value","few_value","many_value","other_value","language_pack_id","localization","user_full_info","myId"],"mappings":"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","file":"static/js/main.c7d8dd31.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet data = null;\nexport async function loadData() {\n    if (data) return;\n\n    try {\n        const response = await fetch('data/countries.txt');\n        const text = await response.text();\n\n        const lines = text.split('\\n');\n        const data2 = [];\n        lines.forEach(x => {\n            const split = x.split(';');\n            const item = {\n                prefix: split[0],\n                code: split[1],\n                name: split[2],\n                pattern: split[3],\n                count: Number(split[4]),\n                emoji: split[5]\n            };\n            data2.push(item);\n        });\n        data2.forEach(x => {\n            x.phone = '+' + x.prefix;\n        });\n\n        data = data2.filter(x => x.emoji);\n\n        return data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nfunction clearPhone(phone) {\n    if (!phone) return phone;\n\n    return phone\n        .replace(/ /g, '')\n        .replace('+', '')\n        .toLowerCase();\n}\n\nfunction isPhoneWithOptionCode(phone, option) {\n    if (!phone) return false;\n    if (!option) return false;\n\n    phone = clearPhone(phone);\n    const code = clearPhone(option.phone);\n\n    return phone.startsWith(code) && option.pattern;\n}\n\nfunction getCountryFromPhone(phone, data) {\n    if (!data) return null;\n\n    const index = data.findIndex(x => isPhoneWithOptionCode(phone, x));\n\n    return index !== -1 ? data[index] : null;\n}\n\nfunction formatByPattern(phone, pattern) {\n    phone = clearPhone(phone);\n\n    let result = '';\n    let index = 0;\n    for (let i = 0; i < pattern.length && index < phone.length; i++) {\n        if (pattern[i] >= '0' && pattern[i] <= '9') {\n            result += pattern[i];\n            if (phone[index] === pattern[i]) {\n                index++;\n            }\n        } else if (pattern[i] === ' ') {\n            result += pattern[i];\n        } else if (pattern[i] === 'X') {\n            result += phone[index++];\n        }\n    }\n\n    result += ' ' + phone.substring(index);\n\n    return '+' + result;\n}\n\nexport function formatPhoneNumber(phone) {\n    if (!phone) return phone;\n    if (!data) return phone.startsWith('+') ? phone : '+' + phone;\n\n    const country = getCountryFromPhone(phone, data);\n    if (!country) return phone.startsWith('+') ? phone : '+' + phone;\n\n    return formatByPattern(phone, country.pattern);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openArchive() {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateArchive',\n        open: true\n    });\n}\n\nexport function closeArchive() {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateArchive',\n        open: false\n    });\n}\n\nexport function editMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateEditMessage',\n        chatId,\n        messageId\n    });\n}\n\nexport function deleteMessages(chatId, messageIds) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateDeleteMessages',\n        chatId,\n        messageIds\n    });\n}\n\nexport function replyMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateReply',\n        chatId,\n        messageId\n    });\n}\n\nexport function forward(info) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateForward',\n        info\n    });\n}\n\nexport function forwardMessages(chatId, messageIds) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateForward',\n        info: {\n            chatId,\n            messageIds\n        }\n    });\n}\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function closeChat() {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId: 0,\n        messageId: null,\n        popup: false\n    });\n}\n\nexport function openReply(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenReply',\n        chatId,\n        messageId\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n\nexport function clearSelection() {\n    TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n}\n\nexport function setInstantViewViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateInstantViewViewerContent',\n        content\n    });\n}\n\nexport function setMediaViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaViewerContent',\n        content\n    });\n}\n\nexport function setProfileMediaViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateProfileMediaViewerContent',\n        content\n    });\n}\n\nexport function setInstantViewContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateInstantViewContent',\n        content\n    });\n}\n\nexport function searchChat(chatId, query = null) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateSearchChat',\n        chatId,\n        query\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass ActionScheduler {\n    constructor(actionCallback, cancelCallback) {\n        this.actions = new Map();\n        this.actionCallback = actionCallback;\n        this.cancelCallback = cancelCallback;\n    }\n\n    add = (key, timeout, action, cancel) => {\n        if (this.actions.has(key)) {\n            return false;\n        }\n\n        let expire = new Date();\n        expire.setMilliseconds(expire.getMilliseconds() + timeout);\n\n        this.actions.set(key, { expire: expire, action: action, cancel: cancel });\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setTimeout();\n\n        return true;\n    };\n\n    invoke = async key => {\n        const item = this.actions.get(key);\n        if (!item) return;\n\n        this.actions.delete(key);\n\n        await this.actionCallback({ key: key, action: item.action, cancel: item.cancel });\n        if (item.action) await item.action();\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setTimeout();\n    };\n\n    remove = key => {\n        const item = this.actions.get(key);\n        if (!item) return;\n\n        this.actions.delete(key);\n\n        this.cancelCallback({ key: key, action: item.action, cancel: item.cancel });\n        if (item.cancel) item.cancel();\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setTimeout();\n    };\n\n    setTimeout = () => {\n        let now = new Date();\n        let timeout = 1000000;\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout < timeout) timeout = actionTimeout;\n            if (timeout < 0) timeout = 0;\n        }\n\n        if (timeout < 1000000) {\n            this.timerId = setTimeout(this.handleTimer, timeout);\n        }\n    };\n\n    handleTimer = () => {\n        let now = new Date();\n        let expired = [];\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout <= 0) expired.push({ key: key, value: value });\n        }\n\n        for (let item of expired) {\n            this.actions.delete(item.key);\n            this.actionCallback({ key: item.key, action: item.value.action, cancel: item.value.cancel });\n            if (item.value.action) item.value.action();\n        }\n\n        this.setTimeout();\n    };\n}\n\nexport default ActionScheduler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport ActionScheduler from '../Utils/ActionScheduler';\nimport { closeChat } from '../Actions/Client';\nimport { subscribeNotifications } from '../registerServiceWorker';\nimport { PAGE_WIDTH_SMALL } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass ApplicationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.addStatistics();\n\n        this.isSmallWidth = window.innerWidth < PAGE_WIDTH_SMALL;\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    onWindowResize = () => {\n        const { isSmallWidth } = this;\n\n        const nextIsSmallWidth = window.innerWidth < PAGE_WIDTH_SMALL;\n        if (nextIsSmallWidth !== isSmallWidth) {\n            this.isSmallWidth = nextIsSmallWidth;\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePageWidth',\n                isSmallWidth: nextIsSmallWidth\n            })\n        }\n    };\n\n    reset = () => {\n        this.dialogsReady = false;\n        this.cacheLoaded = false;\n        this.setPhoneNumberRequest = null;\n        this.chatId = 0;\n        this.dialogChatId = 0;\n        this.messageId = null;\n        this.statistics = new Map();\n        this.authorizationState = null;\n        this.defaultPhone = null;\n        this.connectionState = null;\n        this.isChatDetailsVisible = false;\n        this.mediaViewerContent = null;\n        this.profileMediaViewerContent = null;\n        this.dragParams = null;\n        this.actionScheduler = new ActionScheduler(this.handleScheduledAction, this.handleCancelScheduledAction);\n    };\n\n    addScheduledAction = (key, timeout, action, cancel) => {\n        return this.actionScheduler.add(key, timeout, action, cancel);\n    };\n\n    invokeScheduledAction = async key => {\n        await this.actionScheduler.invoke(key);\n    };\n\n    removeScheduledAction = key => {\n        this.actionScheduler.remove(key);\n    };\n\n    handleScheduledAction = item => {\n        console.log('Invoked scheduled action key=', item.key);\n    };\n\n    handleCancelScheduledAction = item => {\n        console.log('Cancel scheduled action key=', item.key);\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                this.authorizationState = update.authorization_state;\n\n                switch (update.authorization_state['@type']) {\n                    case 'authorizationStateLoggingOut':\n                        this.loggingOut = true;\n                        break;\n                    case 'authorizationStateWaitTdlibParameters':\n                        TdLibController.sendTdParameters();\n                        break;\n                    case 'authorizationStateWaitEncryptionKey':\n                        TdLibController.send({ '@type': 'checkDatabaseEncryptionKey' });\n                        break;\n                    case 'authorizationStateWaitPhoneNumber': {\n                        if (this.setPhoneNumberRequest) {\n                            this.setPhoneNumberRequest();\n\n                            this.setPhoneNumberRequest = null;\n                        }\n\n                        break;\n                    }\n                    case 'authorizationStateWaitCode':\n                        break;\n                    case 'authorizationStateWaitPassword':\n                        break;\n                    case 'authorizationStateReady':\n                        this.loggingOut = false;\n                        this.setPhoneNumberRequest = null;\n                        subscribeNotifications();\n                        break;\n                    case 'authorizationStateClosing':\n                        break;\n                    case 'authorizationStateClosed':\n                        this.reset();\n\n                        if (!this.loggingOut) {\n                            document.title += ': Zzz…';\n\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateAppInactive'\n                            });\n                        } else {\n                            TdLibController.init();\n                        }\n                        break;\n                    default:\n                        break;\n                }\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateChatIsMarkedAsUnread': {\n                const { chat_id, is_marked_as_unread } = update;\n                if (chat_id === this.chatId && is_marked_as_unread) {\n                    closeChat();\n                }\n\n                break;\n            }\n            case 'updateConnectionState': {\n                this.connectionState = update.state;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateFatalError': {\n                this.emit(update['@type'], update);\n\n                break;\n            }\n            case 'updateServiceNotification': {\n                const { type, content } = update;\n\n                if (!content) return;\n                if (content['@type'] === 'messageText') {\n                    const { text } = content;\n                    if (!text) return;\n\n                    if (text['@type'] === 'formattedText' && text.text) {\n                        switch (type) {\n                            case 'AUTH_KEY_DROP_DUPLICATE':\n                                let result = window.confirm(text.text);\n                                if (result) {\n                                    TdLibController.logOut();\n                                }\n                                break;\n                            default:\n                                alert(text.text);\n                                break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAppInactive': {\n                this.emit('clientUpdateAppInactive');\n                break;\n            }\n            case 'clientUpdateCacheLoaded': {\n                this.cacheLoaded = true;\n                this.emit('clientUpdateCacheLoaded');\n                break;\n            }\n            case 'clientUpdateChatId': {\n                const extendedUpdate = {\n                    '@type': 'clientUpdateChatId',\n                    nextChatId: update.chatId,\n                    nextMessageId: update.messageId,\n                    previousChatId: this.chatId,\n                    previousMessageId: this.messageId\n                };\n\n                this.chatId = update.chatId;\n                this.messageId = update.messageId;\n\n                this.emit('clientUpdateChatId', extendedUpdate);\n                break;\n            }\n            case 'clientUpdateTdLibDatabaseExists': {\n                this.emit('clientUpdateTdLibDatabaseExists', update);\n                break;\n            }\n            case 'clientUpdateDeleteMessages': {\n                this.emit('clientUpdateDeleteMessages', update);\n                break;\n            }\n            case 'clientUpdateDialogsReady': {\n                this.dialogsReady = true;\n                this.emit('clientUpdateDialogsReady', update);\n                break;\n            }\n            case 'clientUpdateDragging': {\n                const { dragging, files } = update;\n\n                this.dragParams = dragging ? { dragging, files } : null;\n                this.emit('clientUpdateDragging', update);\n                break;\n            }\n            case 'clientUpdateEditMessage': {\n                this.emit('clientUpdateEditMessage', update);\n                break;\n            }\n            case 'clientUpdateMediaViewerContent': {\n                const { content } = update;\n                this.mediaViewerContent = content;\n\n                this.emit('clientUpdateMediaViewerContent', update);\n                break;\n            }\n            case 'clientUpdateNewContentAvailable': {\n                this.emit('clientUpdateNewContentAvailable', update);\n                break;\n            }\n            case 'clientUpdatePageWidth': {\n                this.emit('clientUpdatePageWidth', update);\n                break;\n            }\n            case 'clientUpdateProfileMediaViewerContent': {\n                const { content } = update;\n                this.profileMediaViewerContent = content;\n\n                this.emit('clientUpdateProfileMediaViewerContent', update);\n                break;\n            }\n            case 'clientUpdateSearchChat': {\n                this.emit('clientUpdateSearchChat', update);\n                break;\n            }\n            case 'clientUpdateSetPhone': {\n                const { phone } = update;\n\n                this.defaultPhone = phone;\n\n                if (!phone) {\n                    this.setPhoneNumberRequest = null;\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateSetPhoneCanceled'\n                    });\n                } else {\n                    if (\n                        this.authorizationState &&\n                        this.authorizationState['@type'] === 'authorizationStateWaitPhoneNumber'\n                    ) {\n                        this.setPhoneNumber(phone);\n                    } else {\n                        this.setPhoneNumberRequest = () => this.setPhoneNumber(phone);\n                    }\n                }\n\n                this.emit('clientUpdateSetPhone', update);\n                break;\n            }\n            case 'clientUpdateSetPhoneResult': {\n                this.emit('clientUpdateSetPhoneResult', update);\n                break;\n            }\n            case 'clientUpdateSetPhoneError': {\n                this.emit('clientUpdateSetPhoneError', update);\n                break;\n            }\n            case 'clientUpdateDialogChatId': {\n                const { chatId } = update;\n                this.dialogChatId = chatId;\n\n                this.emit('clientUpdateDialogChatId', update);\n                break;\n            }\n            case 'clientUpdateFocusWindow': {\n                if (!this.authorizationState) {\n                    break;\n                }\n\n                TdLibController.send({\n                    '@type': 'setOption',\n                    name: 'online',\n                    value: { '@type': 'optionValueBoolean', value: update.focused }\n                });\n\n                this.emit('clientUpdateFocusWindow', update);\n                break;\n            }\n            case 'clientUpdateForward': {\n                this.emit('clientUpdateForward', update);\n                break;\n            }\n            case 'clientUpdateLeaveChat': {\n                if (update.inProgress && this.chatId === update.chatId) {\n                    TdLibController.setChatId(0);\n                }\n\n                break;\n            }\n        }\n    };\n\n    setPhoneNumber = phone => {\n        TdLibController.send({\n            '@type': 'setAuthenticationPhoneNumber',\n            phone_number: phone\n        })\n            .then(result => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateSetPhoneResult',\n                    result\n                });\n            })\n            .catch(error => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateSetPhoneError',\n                    error\n                });\n            });\n    };\n\n    onUpdateStatistics = update => {\n        if (!update) return;\n\n        if (this.statistics.has(update['@type'])) {\n            const count = this.statistics.get(update['@type']);\n\n            this.statistics.set(update['@type'], count + 1);\n        } else {\n            this.statistics.set(update['@type'], 1);\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    addStatistics = () => {\n        TdLibController.on('update', this.onUpdateStatistics);\n    };\n\n    setChatId = (chatId, messageId = null) => {\n        const update = {\n            '@type': 'clientUpdateChatId',\n            nextChatId: chatId,\n            nextMessageId: messageId,\n            previousChatId: this.chatId,\n            previousMessageId: this.messageId\n        };\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n        this.emit(update['@type'], update);\n    };\n\n    getChatId() {\n        return this.chatId;\n    }\n\n    getMessageId() {\n        return this.messageId;\n    }\n\n    changeChatDetailsVisibility(visibility) {\n        this.isChatDetailsVisible = visibility;\n        this.emit('clientUpdateChatDetailsVisibility', visibility);\n    }\n\n    getConnectionState() {\n        return this.connectionState;\n    }\n\n    getAuthorizationState() {\n        return this.authorizationState;\n    }\n\n    assign(source1, source2) {\n        Object.assign(source1, source2);\n        //this.set(Object.assign({}, source1, source2));\n    }\n}\n\nconst store = new ApplicationStore();\nwindow.app = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.selectedItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateMessageShake': {\n                this.emit('clientUpdateMessageShake', update);\n                break;\n            }\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n            case 'clientUpdateOpenReply': {\n                this.emit('clientUpdateOpenReply', update);\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateTryEditMessage': {\n                this.emit('clientUpdateTryEditMessage', update);\n                break;\n            }\n        }\n    };\n\n    hasSelectedMessage(chatId, messageId) {\n        return this.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        if (!message) return;\n\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateSupergroup': {\n                const prevSupergroup = this.get(update.supergroup.id);\n\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], { ...update, prevSupergroup });\n                break;\n            }\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDisablePinnedMessageNotifications(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { notification_settings } = chat;\n    if (!chat) return false;\n\n    const {\n        use_default_disable_pinned_message_notifications,\n        disable_pinned_message_notifications\n    } = notification_settings;\n    if (use_default_disable_pinned_message_notifications) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.disable_pinned_message_notifications : false;\n    }\n\n    return disable_pinned_message_notifications;\n}\n\nfunction getChatDisableMentionNotifications(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return false;\n\n    const { use_default_disable_mention_notifications, disable_mention_notifications } = notification_settings;\n    if (use_default_disable_mention_notifications) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.disable_mention_notifications : false;\n    }\n\n    return disable_mention_notifications;\n}\n\nfunction hasMention(message) {\n    return message && message.contains_unread_mention;\n}\n\nfunction hasPinnedMessage(message) {\n    return message && message.content['@type'] === 'messagePinMessage';\n}\n\nexport function isMessageMuted(message) {\n    const { chat_id } = message;\n\n    if (hasMention(message)) {\n        return getChatDisableMentionNotifications(chat_id);\n    }\n    if (hasPinnedMessage(message)) {\n        return getChatDisablePinnedMessageNotifications(chat_id);\n    }\n\n    return isChatMuted(chat_id);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { isMessageMuted } from '../Utils/Store';\nimport { APP_NAME, NOTIFICATION_AUDIO_DELAY_MS } from '../Constants';\nimport ChatStore from './ChatStore';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass NotificationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        // depends on ChatStore and MessageStore updates\n        this.chatStore = ChatStore;\n        this.messageStore = MessageStore;\n\n        this.appInactive = false;\n        this.newMessages = new Map();\n        this.settings = new Map();\n        this.windowFocused = true;\n        this.timerHandler = null;\n        this.nextSoundAt = new Date();\n        this.enableSound = false;\n    };\n\n    getUnreadCount() {\n        let unreadCount = 0;\n        this.newMessages.forEach(chat => {\n            chat.forEach(m => {\n                if (!m.is_outgoing && !isMessageMuted(m)) {\n                    unreadCount++;\n                }\n            });\n        });\n\n        return unreadCount;\n    }\n\n    updateTimer() {\n        const unreadCount = this.getUnreadCount();\n        // console.log('[ns] updateTimer', unreadCount, this.newMessages);\n\n        if (unreadCount > 0) {\n            if (!this.timerHandler) {\n                // console.log('[ns] setInterval');\n\n                this.onTimer();\n                this.timerHandler = setInterval(this.onTimer, 1000);\n            }\n        } else {\n            if (this.timerHandler) {\n                // console.log('[ns] clearInterval');\n\n                clearInterval(this.timerHandler);\n                this.timerHandler = null;\n                this.onTimer();\n            }\n        }\n    }\n\n    onTimer = () => {\n        // console.log('[ns] onTimer');\n\n        const unreadCount = this.getUnreadCount();\n        const showBadge = document.title === APP_NAME && unreadCount > 0;\n\n        if (showBadge) {\n            let title = '+99 notifications';\n            if (unreadCount === 1) {\n                title = '1 notification';\n            } else if (unreadCount < 99) {\n                title = `${unreadCount} notifications`;\n            }\n            document.title = title;\n            document.getElementById('favicon').href = 'favicon_unread.ico';\n        } else {\n            document.title = APP_NAME + (this.appInactive ? ': Zzz…' : '');\n            document.getElementById('favicon').href = 'favicon.ico';\n        }\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatReadInbox': {\n                const { windowFocused } = this;\n                if (!windowFocused) {\n                    const { chat_id, last_read_inbox_message_id } = update;\n\n                    const chatMap = this.newMessages.get(chat_id);\n                    if (chatMap) {\n                        const newChatMap = new Map([...chatMap].filter(([id, m]) => m.id > last_read_inbox_message_id));\n                        if (newChatMap.size < chatMap.size) {\n                            this.newMessages.set(chat_id, newChatMap);\n                            this.updateTimer();\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatNotificationSettings': {\n                const { windowFocused } = this;\n                if (!windowFocused) {\n                    this.updateTimer();\n                }\n\n                break;\n            }\n            case 'updateDeleteMessages': {\n                const { windowFocused } = this;\n                if (!windowFocused) {\n                    const { chat_id, message_ids, is_permanent } = update;\n                    if (is_permanent && message_ids.length > 0) {\n                        const chatMap = this.newMessages.get(chat_id);\n                        if (chatMap) {\n                            const filterMap = new Map(message_ids.map(id => [id, id]));\n\n                            const newChatMap = new Map([...chatMap].filter(([id, m]) => !filterMap.has(id)));\n                            if (newChatMap.size < chatMap.size) {\n                                this.newMessages.set(chat_id, newChatMap);\n                                this.updateTimer();\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'updateNewMessage': {\n                const { windowFocused } = this;\n                // console.log('[ns] updateNewMessage', windowFocused);\n                if (!windowFocused) {\n                    const { message } = update;\n                    const { chat_id, id } = message;\n\n                    const chatMap = this.newMessages.get(chat_id) || new Map();\n                    chatMap.set(id, message);\n                    this.newMessages.set(chat_id, chatMap);\n                    this.updateTimer();\n\n                    if (!message.is_outgoing && !isMessageMuted(message) && this.enableSound) {\n                        const now = new Date();\n                        if (now > this.nextSoundAt) {\n                            // console.log('[ns] audio play');\n                            try {\n                                const audio = new Audio('sound_a.mp3');\n                                audio.play();\n                            } catch {\n\n                            }\n\n                            const nextSoundAt = new Date();\n                            nextSoundAt.setMilliseconds(nextSoundAt.getMilliseconds() + NOTIFICATION_AUDIO_DELAY_MS);\n                            this.nextSoundAt = nextSoundAt;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'updateScopeNotificationSettings': {\n                const { scope, notification_settings } = update;\n\n                this.settings.set(scope['@type'], notification_settings);\n\n                const { windowFocused } = this;\n                if (!windowFocused) {\n                    this.updateTimer();\n                }\n\n                this.emit('updateScopeNotificationSettings', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAppInactive': {\n                this.appInactive = true;\n                this.newMessages = new Map();\n                this.updateTimer();\n                break;\n            }\n            case 'clientUpdateFocusWindow': {\n                const { focused } = update;\n                // console.log('[ns] clientUpdateFocusWindow', update);\n\n                this.windowFocused = focused;\n                if (focused) {\n                    this.newMessages = new Map();\n                    this.updateTimer();\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new NotificationStore();\nwindow.notifications = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const ANIMATION_FRAME_DURATION_MS = 40;\nexport const ANIMATION_DURATION_100MS = 100;\nexport const ANIMATION_DURATION_200MS = 200;\nexport const ANIMATION_DURATION_300MS = 300;\nexport const ANIMATION_DURATION_500MS = 500;\nexport const APP_NAME = 'Telegram Web';\nexport const CHAT_SLICE_LIMIT = 25;\nexport const EMOJI_PICKER_TIMEOUT_MS = 100;\nexport const FILE_PRIORITY = 1;\nexport const IV_LOCATION_HEIGHT = 300;\nexport const IV_LOCATION_WIDTH = 600;\nexport const IV_PHOTO_SIZE = 800;\nexport const IV_PHOTO_DISPLAY_SIZE = 600;\nexport const KEY_AUTH_STATE = 'auth';\nexport const KEY_SUGGESTED_LANGUAGE_PACK_ID = 'suggested_language_pack_id';\nexport const LOCATION_HEIGHT = 150;\nexport const LOCATION_SCALE = 2;\nexport const LOCATION_WIDTH = 300;\nexport const LOCATION_ZOOM = 16;\nexport const MAX_SNACK = 10;\nexport const MEDIA_SLICE_LIMIT = 20;\nexport const MESSAGE_SLICE_LIMIT = 30;\nexport const MESSAGE_SPLIT_MAX_TIME_S = 600;\nexport const MUTED_VALUE_MAX = 2147483647; // int32.max = 2^32 - 1\nexport const MUTED_VALUE_MIN = 0;\nexport const NOTIFICATION_AUDIO_DELAY_MS = 5000;\nexport const NOTIFICATION_AUTO_HIDE_DURATION_MS = 5000;\nexport const NOTIFICATION_DEBOUNCE_DELAY_MS = 500;\nexport const OPTIMIZATIONS_FIRST_START = true;\nexport const PAGE_WIDTH_SMALL = 960;\nexport const PHOTO_BIG_SIZE = 1280;\nexport const PHOTO_DISPLAY_SIZE = 320;\nexport const PHOTO_DISPLAY_SMALL_SIZE = 65;\nexport const PHOTO_DISPLAY_EXTRA_SMALL_SIZE = 40;\nexport const PHOTO_SIZE = 320;\nexport const PHOTO_THUMBNAIL_SIZE = 90;\nexport const PLAYER_VOLUME_NORMAL = 0.25;\nexport const PLAYER_STARTTIME = 0.0;\nexport const PLAYER_PLAYBACKRATE_NORMAL = 1.0;\nexport const PLAYER_PLAYBACKRATE_FAST = 1.75;\nexport const PLAYER_PROGRESS_TIMEOUT_MS = 250;\nexport const POLL_QUESTION_LENGTH = 255;\nexport const POLL_QUESTION_HINT_LENGTH = POLL_QUESTION_LENGTH - 79;\nexport const POLL_QUESTION_MAX_LENGTH = POLL_QUESTION_LENGTH + 99;\nexport const POLL_OPTION_LENGTH = 100;\nexport const POLL_OPTION_HINT_LENGTH = POLL_OPTION_LENGTH - 29;\nexport const POLL_OPTION_MAX_LENGTH = POLL_OPTION_LENGTH + 99;\nexport const POLL_OPTIONS_MAX_COUNT = 10;\nexport const POLL_RESULTS_FIRST_SLICE_LENGTH = 15;\nexport const POLL_RESULTS_LEAVE_LENGTH = 5;\nexport const POLL_RESULTS_SLICE_LENGTH = 50;\nexport const PRELOAD_AUDIO_SIZE = 200 * 1024; //10 * 1024 * 1024;\nexport const PRELOAD_ANIMATION_SIZE = 200 * 1024; //10 * 1024 * 1024;\nexport const PRELOAD_DOCUMENT_SIZE = 200 * 1024;\nexport const PRELOAD_STICKER_SIZE = 10 * 200 * 1024;\nexport const PRELOAD_VOICENOTE_SIZE = 200 * 1024; //10 * 1024 * 1024;\nexport const PRELOAD_VIDEO_SIZE = 10 * 1024 * 1024;\nexport const PRELOAD_VIDEONOTE_SIZE = 200 * 1024; //10 * 1024 * 1024;\nexport const PROFILE_PHOTO_BIG_SIZE = 640;\nexport const PROFILE_PHOTO_SMALL_SIZE = 160;\nexport const SCROLL_PRECISION = 0;\nexport const SCROLL_CHATS_PRECISION = 400;\nexport const SERVICE_NOTIFICATIONS_USER_ID = 777000;\nexport const SHARED_MESSAGE_SLICE_LIMIT = 30;\nexport const STICKER_DISPLAY_SIZE = 192;\nexport const STICKER_HINT_DISPLAY_SIZE = 76;\nexport const STICKER_PREVIEW_DISPLAY_SIZE = 256;\nexport const STICKER_SMALL_DISPLAY_SIZE = 64;\nexport const THUMBNAIL_BLURRED_SIZE = 100;\nexport const THUMBNAIL_BLURRED_SIZE_90 = 90;\nexport const THUMBNAIL_PRIORITY = 32;\nexport const TYPING_INPUT_INTERVAL_S = 8;\nexport const TYPING_OUTPUT_INTERVAL_S = 8;\nexport const VERBOSITY_JS_MAX = 20;\nexport const VERBOSITY_JS_MIN = 0;\nexport const VERBOSITY_MAX = 20;\nexport const VERBOSITY_MIN = 0;\nexport const USERNAME_LENGTH_MIN = 5;\nexport const REPLACE_PREFIX = '/telegram-react';\nexport const WASM_FILE_NAME = '93851361833a55534e17170c3e15da85.wasm';\nexport const WASM_FILE_HASH = WASM_FILE_NAME.replace('.wasm', '');\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { getDisplayName } from './Utils/HOC';\nimport LocalizationStore from './Stores/LocalizationStore';\n\nfunction withLanguage(WrappedComponent) {\n    class LanguageWrapper extends React.Component {\n        render() {\n            const i18n = LocalizationStore.i18n;\n\n            return (\n                <I18nextProvider i18n={i18n}>\n                    <WrappedComponent {...this.props} />\n                </I18nextProvider>\n            );\n        }\n    }\n    LanguageWrapper.displayName = `WithLanguage(${getDisplayName(WrappedComponent)})`;\n\n    return LanguageWrapper;\n}\n\nexport default withLanguage;\n","import { actions } from \"../action/constants\";\nimport { emojiIndex } from \"emoji-mart\";\nimport data from \"emoji-mart/data/all\";\nimport _ from \"lodash\";\n\nconst getEmojiDataFromNative = nativeString => {\n  return _.find(emojiIndex.emojis, { native: nativeString });\n};\n\nconst initialState = {\n  emojis: [\n    {\n      id: \"surprised\",\n      singleEmoji: getEmojiDataFromNative(\"😲\"),\n      multipleEmojis: emojiIndex.search(\"surprised\")\n    },\n    {\n      id: \"happy\",\n      singleEmoji: getEmojiDataFromNative(\"😂\"),\n      multipleEmojis: emojiIndex.search(\"face-happy\")\n    },\n    {\n      id: \"disgusted\",\n      singleEmoji: getEmojiDataFromNative(\"🤢\"),\n      multipleEmojis: emojiIndex.search(\"sick\")\n    },\n    {\n      id: \"fearful\",\n      singleEmoji: getEmojiDataFromNative(\"😱\"),\n      multipleEmojis: emojiIndex.search(\"fear\")\n    },\n    {\n      id: \"sad\",\n      singleEmoji: getEmojiDataFromNative(\"😥\"),\n      multipleEmojis: emojiIndex.search(\"sad\")\n    },\n    {\n      id: \"angry\",\n      singleEmoji: getEmojiDataFromNative(\"😠\"),\n      multipleEmojis: emojiIndex.search(\"angry\")\n    },\n    {\n      id: \"neutral\",\n      singleEmoji: getEmojiDataFromNative(\"😐\"),\n      multipleEmojis: emojiIndex.search(\"neutral\")\n    }\n  ],\n  loading: false,\n  error: false\n};\nconst getSingleEmoji = (state, emotion) => {\n  return state.emojis.find(emoji => emoji.id === emotion).singleEmoji;\n};\n\nconst getMultipleEmoji = (state, emotion) => {\n  return state.emojis.find(emoji => emoji.id === emotion).multipleEmojis;\n};\n\nexport const emojis = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.GET_SINGLE_EMOJI:\n      console.log(action.type, action.payload);\n      return {\n        ...state,\n        emoji: getSingleEmoji(state, action.payload)\n      };\n    case actions.GET_MULTIPLE_EMOJI:\n      console.log(action.type, action.payload);\n      return {\n        ...state,\n        emojis: getMultipleEmoji(state, action.payload)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass EventEmitter {\n    constructor() {\n        this.observers = {};\n    }\n\n    on(events, listener) {\n        events.split(' ').forEach(event => {\n            this.observers[event] = this.observers[event] || [];\n            this.observers[event].push(listener);\n        });\n        return this;\n    }\n\n    off(event, listener) {\n        if (!this.observers[event]) return;\n        if (!listener) {\n            delete this.observers[event];\n            return;\n        }\n\n        this.observers[event] = this.observers[event].filter(l => l !== listener);\n    }\n\n    emit(event, ...args) {\n        if (this.observers[event]) {\n            const cloned = [].concat(this.observers[event]);\n            cloned.forEach(observer => {\n                observer(...args);\n            });\n        }\n\n        if (this.observers['*']) {\n            const cloned = [].concat(this.observers['*']);\n            cloned.forEach(observer => {\n                observer.apply(observer, [event, ...args]);\n            });\n        }\n    }\n}\n\nexport default EventEmitter;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function getBadgeSelectedColor(rgb) {\n    const primaryHLS = RGBToHSL(rgb);\n    primaryHLS.l += 15;\n\n    return `hsl(${primaryHLS.h}, ${primaryHLS.s}%, ${primaryHLS.l}%)`;\n}\n\nexport function RGBToHSL(rgb) {\n    let r = 0, g = 0, b = 0;\n\n    // 3 digits\n    if (rgb.length === 4) {\n        r = Number.parseInt(rgb[1] + rgb[1], 16);\n        g = Number.parseInt(rgb[2] + rgb[2], 16);\n        b = Number.parseInt(rgb[3] + rgb[3], 16);\n\n        // 6 digits\n    } else if (rgb.length === 7) {\n        r = Number.parseInt(rgb[1] + rgb[2], 16);\n        g = Number.parseInt(rgb[3] + rgb[4], 16);\n        b = Number.parseInt(rgb[5] + rgb[6], 16);\n    }\n\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    // Calculate hue\n    // No difference\n    if (delta === 0)\n        h = 0;\n    // Red is max\n    else if (cmax === r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax === g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    //return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\n    return { h, s, l }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport blue from '@material-ui/core/colors/blue';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { getDisplayName } from './Utils/HOC';\nimport ApplicationStore from './Stores/ApplicationStore';\nimport { getBadgeSelectedColor } from './Utils/Color';\n\nfunction updateLightTheme(theme) {\n    // const root = document.querySelector(':root');\n    // const style = getComputedStyle(root);\n    const { style } = document.documentElement;\n\n    style.setProperty('--text-primary', '#000000');\n    style.setProperty('--text-secondary', '#707579');\n    style.setProperty('--text-disabled', 'rgba(0, 0, 0, 0.38)');\n\n    style.setProperty('--error', '#E53935');\n\n    style.setProperty('--tile-size', '54px');\n    style.setProperty('--tile-size-normal', '48px');\n    style.setProperty('--tile-size-extra-small', '16px');\n    style.setProperty('--tile-size-small', '33px');\n    style.setProperty('--tile-size-big', '120px');\n\n    style.setProperty('--z-index-modal', theme.zIndex.modal);\n\n    style.setProperty('--color-accent-main', theme.palette.primary.main);\n    style.setProperty('--color-accent-main22', theme.palette.primary.main + '44');\n    style.setProperty('--color-accent-dark', theme.palette.primary.dark);\n    style.setProperty('--color-accent-light', theme.palette.primary.light);\n    style.setProperty('--color-grey700', theme.palette.grey[700]);\n    style.setProperty('--color-grey', '#9AA7B2');\n    style.setProperty('--color-hover', '#70757914');\n\n    style.setProperty('--search-input-background', '#f4f4f5');\n    style.setProperty('--search-input-icon', '#9aa7b2');\n\n    style.setProperty('--header-color', '#000000');\n    style.setProperty('--header-subtle-color', '#707579');\n\n    style.setProperty('--badge-unmuted', '#4DCD5E');\n    style.setProperty('--badge-muted', '#C4C9CC');\n    style.setProperty('--badge-item-selected', getBadgeSelectedColor(theme.palette.primary.main));\n\n    style.setProperty('--online-indicator', '#0AC630');\n\n    style.setProperty('--message-service-color', '#FFFFFF');\n    style.setProperty('--message-service-background', '#00000033');\n\n    style.setProperty('--panel-background', '#ffffff');\n    style.setProperty('--border', '#DADCE0');\n    style.setProperty('--chat-background', '#e6ebee');\n    style.setProperty('--background', '#ffffff');\n    style.setProperty('--background-paper', theme.palette.background.paper);\n    style.setProperty('--shared-media-background', theme.palette.background.default);\n\n    style.setProperty('--dialog-color', '#000000');\n    style.setProperty('--dialog-subtle-color', '#707579');\n    style.setProperty('--dialog-meta-color', '#5F6369');\n    style.setProperty('--dialog-meta-read-color', '#4FAE4E');\n\n    style.setProperty('--media-in-tile-background', theme.palette.primary.main);\n    style.setProperty('--media-out-tile-background', '#4FAE4E');\n\n    style.setProperty('--message-in-link', theme.palette.primary.main);\n    style.setProperty('--message-in-author', theme.palette.primary.main);\n    style.setProperty('--message-in-background', '#FFFFFF');\n    style.setProperty('--message-in-color', '#000000');\n    style.setProperty('--message-in-subtle-color', '#707579');\n    style.setProperty('--message-in-meta-color', '#8D969C');\n    style.setProperty('--message-in-reply-title', theme.palette.primary.main);\n    style.setProperty('--message-in-reply-border', theme.palette.primary.main);\n    style.setProperty('--message-in-control', theme.palette.primary.main);\n    style.setProperty('--message-in-control-hover', theme.palette.primary.main + '22');\n    style.setProperty('--message-in-control-border', theme.palette.primary.main + '77');\n    style.setProperty('--message-in-control-border-hover', theme.palette.primary.main);\n\n    style.setProperty('--message-out-link', '#4FAE4E');\n    style.setProperty('--message-out-author', '#4FAE4E');\n    style.setProperty('--message-out-background', '#EEFFDE');\n    style.setProperty('--message-out-color', '#000000');\n    style.setProperty('--message-out-subtle-color', '#4FAE4E');\n    style.setProperty('--message-out-meta-color', '#4FAE4E');\n    style.setProperty('--message-out-reply-title', '#4FAE4E');\n    style.setProperty('--message-out-reply-border', '#4FAE4E');\n    style.setProperty('--message-out-control', '#4FAE4E');\n    style.setProperty('--message-out-control-hover', '#4FAE4E' + '22');\n    style.setProperty('--message-out-control-border', '#4FAE4E' + '77');\n    style.setProperty('--message-out-control-border-hover', '#4FAE4E');\n}\n\nfunction updateDarkTheme(theme) {\n    // const root = document.querySelector(':root');\n    // const style = getComputedStyle(root);\n    const { style } = document.documentElement;\n\n    style.setProperty('--text-primary', theme.palette.text.primary);\n    style.setProperty('--text-secondary', theme.palette.text.secondary);\n    style.setProperty('--text-disabled', theme.palette.text.disabled);\n\n    style.setProperty('--error', '#E53935');\n\n    style.setProperty('--tile-size', '54px');\n    style.setProperty('--tile-size-normal', '48px');\n    style.setProperty('--tile-size-extra-small', '16px');\n    style.setProperty('--tile-size-small', '33px');\n    style.setProperty('--tile-size-big', '120px');\n\n    style.setProperty('--z-index-modal', theme.zIndex.modal);\n\n    style.setProperty('--color-accent-main', theme.palette.primary.main);\n    style.setProperty('--color-accent-main22', theme.palette.primary.main + '44');\n    style.setProperty('--color-accent-dark', theme.palette.primary.dark);\n    style.setProperty('--color-accent-light', theme.palette.primary.light);\n    style.setProperty('--color-grey700', theme.palette.grey[700]);\n    style.setProperty('--color-grey', '#9AA7B2');\n    style.setProperty('--color-hover', 'rgba(112, 117, 121, 0.15)');\n\n    style.setProperty('--search-input-background', '#424242');\n    style.setProperty('--search-input-icon', '#fff');\n\n    style.setProperty('--header-color', '#ffffff');\n    style.setProperty('--header-subtle-color', theme.palette.text.secondary);\n\n    style.setProperty('--badge-unmuted', '#4DCD5E');\n    style.setProperty('--badge-muted', '#979797');\n    style.setProperty('--badge-item-selected', getBadgeSelectedColor(theme.palette.primary.main));\n\n    style.setProperty('--online-indicator', '#0AC630');\n\n    style.setProperty('--message-service-color', '#FFFFFF');\n    style.setProperty('--message-service-background', '#303030');\n\n    style.setProperty('--panel-background', '#303030');\n    style.setProperty('--border', theme.palette.divider);\n    style.setProperty('--chat-background', theme.palette.grey[900]);\n    style.setProperty('--background', theme.palette.grey[900]);\n    style.setProperty('--background-paper', theme.palette.background.paper);\n    style.setProperty('--shared-media-background', theme.palette.background.paper);\n\n    style.setProperty('--dialog-color', '#ffffff');\n    style.setProperty('--dialog-subtle-color', theme.palette.text.secondary);\n    style.setProperty('--dialog-meta-color', theme.palette.text.secondary);\n    style.setProperty('--dialog-meta-read-color', '#4FAE4E');\n\n    style.setProperty('--media-in-tile-background', theme.palette.primary.main);\n    style.setProperty('--media-out-tile-background', theme.palette.primary.main);\n\n    style.setProperty('--message-in-link', theme.palette.primary.main);\n    style.setProperty('--message-in-author', theme.palette.primary.main);\n    style.setProperty('--message-in-background', '#303030'); // background.default\n    style.setProperty('--message-in-color', '#FFFFFF');\n    style.setProperty('--message-in-subtle-color', 'rgba(255, 255, 255, 0.7)');\n    style.setProperty('--message-in-meta-color', 'rgba(255, 255, 255, 0.7)');\n    style.setProperty('--message-in-reply-title', theme.palette.primary.main);\n    style.setProperty('--message-in-reply-border', theme.palette.primary.main);\n    style.setProperty('--message-in-control', theme.palette.primary.main);\n    style.setProperty('--message-in-control-hover', theme.palette.primary.main + '22');\n    style.setProperty('--message-in-control-border', theme.palette.primary.main + '77');\n    style.setProperty('--message-in-control-border-hover', theme.palette.primary.main);\n\n    style.setProperty('--message-out-link', theme.palette.primary.main);\n    style.setProperty('--message-out-author', theme.palette.primary.main);\n    style.setProperty('--message-out-background', '#303030'); // background.default\n    style.setProperty('--message-out-color', '#FFFFFF');\n    style.setProperty('--message-out-subtle-color', 'rgba(255, 255, 255, 0.7)');\n    style.setProperty('--message-out-meta-color', 'rgba(255, 255, 255, 0.7)'); // text.secondary\n    style.setProperty('--message-out-reply-title', theme.palette.primary.main);\n    style.setProperty('--message-out-reply-border', theme.palette.primary.main);\n    style.setProperty('--message-out-control', theme.palette.primary.main);\n    style.setProperty('--message-out-control-hover', theme.palette.primary.main + '22');\n    style.setProperty('--message-out-control-border', theme.palette.primary.main + '77');\n    style.setProperty('--message-out-control-border-hover', theme.palette.primary.main);\n}\n\nfunction createTheme(type, primary) {\n    let MuiTouchRipple = {};\n    let action = {};\n    if (type === 'light') {\n        MuiTouchRipple = {\n            child: {\n                color: type === 'dark' ? 'currentColor' : 'rgba(112, 117, 121)'\n            },\n            rippleVisible: {\n                opacity: 0.08 //type === 'dark' ? 0.15 : 1\n            },\n            '@keyframes enter': {\n                '0%': {\n                    transform: 'scale(0)',\n                    opacity: 0.03\n                },\n                '100%': {\n                    transform: 'scale(1)',\n                    opacity: 0.08 //type === 'dark' ? 0.15 : 1\n                }\n            }\n        };\n        action = {\n            hover: 'rgba(112, 117, 121, 0.08)',\n            hoverOpacity: 0.08\n        };\n    }\n\n    const theme = createMuiTheme({\n        palette: {\n            type: type,\n            primary: primary,\n            secondary: { main: '#E53935' },\n            action\n        },\n        typography: {\n            useNextVariants: true\n        },\n        shape: {\n            borderRadius: 8\n        },\n        overrides: {\n            MuiOutlinedInput: {\n                input: {\n                    padding: '17.5px 14px'\n                }\n            },\n            MuiAutocomplete: {\n                option: {\n                    paddingLeft: 0,\n                    paddingTop: 0,\n                    paddingRight: 0,\n                    paddingBottom: 0\n                },\n                paper: {\n                    '& > ul': {\n                        maxHeight: 56 * 5.5\n                    }\n                }\n            },\n            MuiMenuList: {\n                root: {\n                    minWidth: 150\n                }\n            },\n            MuiList: {\n                root: {\n                    minWidth: 150\n                }\n            },\n            MuiTouchRipple\n        }\n    });\n\n    if (type === 'dark') {\n        updateDarkTheme(theme);\n    } else {\n        updateLightTheme(theme);\n    }\n\n    return theme;\n}\n\nfunction withTheme(WrappedComponent) {\n    class ThemeWrapper extends React.Component {\n        constructor(props) {\n            super(props);\n\n            let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n            try {\n                const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n                if (themeOptions) {\n                    type = themeOptions.type;\n                    primary = themeOptions.primary;\n                }\n            } catch {}\n            const theme = createTheme(type, primary);\n\n            this.state = { theme };\n        }\n\n        componentDidMount() {\n            ApplicationStore.on('clientUpdateThemeChanging', this.onClientUpdateThemeChanging);\n        }\n\n        componentWillUnmount() {\n            ApplicationStore.off('clientUpdateThemeChanging', this.onClientUpdateThemeChanging);\n        }\n\n        onClientUpdateThemeChanging = update => {\n            const { type, primary } = update;\n\n            const theme = createTheme(type, primary);\n            localStorage.setItem('themeOptions', JSON.stringify({ type, primary }));\n\n            this.setState({ theme }, () => ApplicationStore.emit('clientUpdateThemeChange'));\n        };\n\n        render() {\n            const { theme } = this.state;\n\n            return (\n                <StylesProvider injectFirst={true}>\n                    <MuiThemeProvider theme={theme}>\n                        <WrappedComponent {...this.props} />\n                    </MuiThemeProvider>\n                </StylesProvider>\n            );\n        }\n    }\n    ThemeWrapper.displayName = `WithTheme(${getDisplayName(WrappedComponent)})`;\n\n    return ThemeWrapper;\n}\n\nexport default withTheme;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Login\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  id: \"Login_5_Phone\",\n  transform: \"translate(-760.000000, -186.000000)\"\n}, React.createElement(\"path\", {\n  d: \"M840,346 C795.81722,346 760,310.18278 760,266 C760,221.81722 795.81722,186 840,186 C884.18278,186 920,221.81722 920,266 C920,310.18278 884.18278,346 840,346 Z M794.596303,264.66919 C790.659174,266.234556 788.596733,267.765936 788.408978,269.263329 C788.048509,272.138166 792.188142,273.033142 797.396667,274.725906 C801.643184,276.106018 807.355495,277.720609 810.325092,277.784753 C813.018799,277.842938 816.025284,276.732617 819.344546,274.453789 C841.998088,259.16492 853.691946,251.437186 854.426119,251.270588 C854.944065,251.153055 855.661811,251.005273 856.148118,251.437434 C856.634425,251.869594 856.586618,252.688022 856.535106,252.907586 C856.123224,254.663156 834.84286,274.015606 833.61816,275.287388 C828.938462,280.146996 823.615302,283.120543 831.826781,288.530755 C838.932147,293.212193 843.067503,296.19863 850.387542,300.996094 C855.065474,304.061953 858.733031,307.697601 863.562866,307.253237 C865.785287,307.048765 868.080902,304.959403 869.246762,298.727987 C872.002037,284.001293 877.417883,252.09303 878.669527,238.944397 C878.779187,237.792407 878.641237,236.318088 878.530455,235.670896 C878.419672,235.023705 878.188168,234.101592 877.346762,233.418979 C876.350285,232.610561 874.811937,232.440083 874.123923,232.4522 C870.995743,232.507295 866.196346,234.175802 843.099163,243.78089 C835.009657,247.144954 818.842037,254.107721 794.596303,264.66919 Z\"\n})));\n\nvar SvgTelegramLogo = function SvgTelegramLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"telegram-logo\",\n    width: \"160px\",\n    height: \"160px\",\n    viewBox: \"0 0 160 160\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTelegramLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/telegram-logo.ac1331a4.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { KEY_AUTH_STATE } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass AuthorizationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n        this.load();\n\n        this.addTdLibListener();\n    }\n\n    load() {\n        try {\n            const value = localStorage.getItem(KEY_AUTH_STATE);\n            if (value) {\n                this.current = JSON.parse(value);\n            } else {\n                this.current = null;\n            }\n        } catch {}\n    }\n\n    save(state) {\n        if (state) {\n            localStorage.setItem(KEY_AUTH_STATE, JSON.stringify(state));\n        } else {\n            localStorage.removeItem(KEY_AUTH_STATE);\n        }\n    }\n\n    reset = () => {\n        this.current = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n\n                this.current = authorization_state;\n                this.save(authorization_state);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMonkeyIdle': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMonkeyTracking': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMonkeyClose': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMonkeyPeek': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new AuthorizationStore();\nwindow.authorization = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { ReactComponent as Logo } from '../../Assets/telegram-logo.svg';\n// import Lottie from '../Viewer/Lottie';\nimport AuthStore from '../../Stores/AuthorizationStore';\nimport './Caption.css';\n\nconst Lottie = React.lazy(() => import('../Viewer/Lottie'));\n\nclass Caption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            lastUpdate: null\n        };\n\n        this.lottieRef = React.createRef();\n    }\n\n    loadData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/TwoFactorSetupMonkeyClose.json'),\n                fetch('data/TwoFactorSetupMonkeyIdle.json'),\n                fetch('data/TwoFactorSetupMonkeyPeek.json'),\n                fetch('data/TwoFactorSetupMonkeyTracking.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [closeData, idleData, peekData, trackingData] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    closeData,\n                    idleData,\n                    peekData,\n                    trackingData\n                },\n                () => {\n                    const { lastUpdate } = this.state;\n                    if (lastUpdate) {\n                        switch (lastUpdate['@type']) {\n                            case 'clientUpdateMonkeyIdle': {\n                                this.onClientUpdateMonkeyIdle(lastUpdate);\n                                break;\n                            }\n                            case 'clientUpdateMonkeyTracking': {\n                                this.onClientUpdateMonkeyTracking(lastUpdate);\n                                break;\n                            }\n                            case 'clientUpdateMonkeyClose': {\n                                this.onClientUpdateMonkeyClose(lastUpdate);\n                                break;\n                            }\n                            case 'clientUpdateMonkeyPeek': {\n                                this.onClientUpdateMonkeyPeek(lastUpdate);\n                                break;\n                            }\n                        }\n                    }\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    async componentDidMount() {\n        setTimeout(this.loadData, 100);\n\n        AuthStore.on('clientUpdateMonkeyIdle', this.onClientUpdateMonkeyIdle);\n        AuthStore.on('clientUpdateMonkeyTracking', this.onClientUpdateMonkeyTracking);\n        AuthStore.on('clientUpdateMonkeyClose', this.onClientUpdateMonkeyClose);\n        AuthStore.on('clientUpdateMonkeyPeek', this.onClientUpdateMonkeyPeek);\n    }\n\n    componentWillUnmount() {\n        AuthStore.off('clientUpdateMonkeyIdle', this.onClientUpdateMonkeyIdle);\n        AuthStore.off('clientUpdateMonkeyTracking', this.onClientUpdateMonkeyTracking);\n        AuthStore.off('clientUpdateMonkeyClose', this.onClientUpdateMonkeyClose);\n        AuthStore.off('clientUpdateMonkeyPeek', this.onClientUpdateMonkeyPeek);\n    }\n\n    onClientUpdateMonkeyIdle = update => {\n        const { idleData } = this.state;\n\n        this.setState(\n            {\n                data: idleData,\n                lastUpdate: update\n            },\n            () => {\n                const { current } = this.lottieRef;\n                if (!current) return;\n\n                current.anim.playSegments([0, 180], true);\n            }\n        );\n    };\n\n    onClientUpdateMonkeyTracking = update => {\n        const { code, prevCode } = update;\n        const { trackingData } = this.state;\n\n        const from = Math.min(15 * prevCode.length, 180);\n        const to = Math.min(15 * code.length, 180);\n\n        this.setState(\n            {\n                data: trackingData,\n                lastUpdate: update\n            },\n            () => {\n                const { current } = this.lottieRef;\n                if (!current) return;\n\n                current.anim.playSegments([from, to], true);\n            }\n        );\n    };\n\n    onClientUpdateMonkeyClose = update => {\n        const { closeData } = this.state;\n\n        this.setState(\n            {\n                data: closeData,\n                lastUpdate: update\n            },\n            () => {\n                const { current } = this.lottieRef;\n                if (!current) return;\n\n                current.anim.playSegments([0, 49], true);\n            }\n        );\n    };\n\n    onClientUpdateMonkeyPeek = update => {\n        const { peek } = update;\n        const { peekData, lastUpdate } = this.state;\n\n        if (lastUpdate && lastUpdate['@type'] === 'clientUpdateMonkeyPeek' && lastUpdate.peek === peek) {\n            return;\n        }\n\n        this.setState(\n            {\n                data: peekData,\n                lastUpdate: update\n            },\n            () => {\n                const { current } = this.lottieRef;\n                if (!current) return;\n\n                if (peek) {\n                    current.anim.playSegments([0, 15], true);\n                } else {\n                    current.anim.playSegments([15, 33], true);\n                }\n            }\n        );\n    };\n\n    render() {\n        const { state } = this.props;\n        const { data } = this.state;\n\n        let control = null;\n        switch (state['@type']) {\n            case 'authorizationStateWaitPhoneNumber':\n            case 'authorizationStateWaitEncryptionKey':\n            case 'authorizationStateWaitTdlibParameters':\n            case 'authorizationStateWaitTdlib': {\n                control = <Logo className='auth-caption-telegram-logo' />;\n                break;\n            }\n            case 'authorizationStateWaitCode':\n            case 'authorizationStateWaitPassword': {\n                control = (\n                    <div className='auth-caption-telegram-logo'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: false,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'auth-caption-lottie'\n                                    }\n                                }}\n                            />\n                        </React.Suspense>\n                    </div>\n                );\n                break;\n            }\n            default:\n                break;\n        }\n\n        return <div className='auth-caption'>{control}</div>;\n    }\n}\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Country.css';\n\nfunction Country({ emoji, name, phone }) {\n    return (\n        <div className='country'>\n            <span className='country-emoji'>{emoji}</span>\n            <span className='country-name'>{name}</span>\n            <span className='country-phone'>{phone}</span>\n        </div>\n    );\n}\n\nCountry.propTypes = {\n    emoji: PropTypes.string,\n    name: PropTypes.string,\n    phone: PropTypes.string\n};\n\nexport default Country;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Country from './Country';\nimport HeaderProgress from '../ColumnMiddle/HeaderProgress';\nimport { KEY_SUGGESTED_LANGUAGE_PACK_ID } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport AuthStore from '../../Stores/AuthorizationStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Phone.css';\n\nexport function cleanProgressStatus(status) {\n    if (!status) return status;\n\n    return status.replace('...', '').replace('…', '');\n}\n\nexport function isConnecting(state) {\n    if (!state) return false;\n\n    switch (state['@type']) {\n        case 'connectionStateConnecting': {\n            return true;\n        }\n        case 'connectionStateConnectingToProxy': {\n            return true;\n        }\n        case 'connectionStateReady': {\n            return false;\n        }\n        case 'connectionStateUpdating': {\n            return false;\n        }\n        case 'connectionStateWaitingForNetwork': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isValidPhoneNumber(phoneNumber) {\n    if (!phoneNumber) return false;\n\n    let isBad = !phoneNumber.match(/^[\\d\\-+\\s]+$/);\n    if (!isBad) {\n        phoneNumber = phoneNumber.replace(/\\D/g, '');\n        if (phoneNumber.length < 7) {\n            isBad = true;\n        }\n    }\n\n    return !isBad;\n}\n\nfunction formatByPattern(phone, pattern) {\n    phone = clearPhone(phone);\n\n    let result = '';\n    let index = 0;\n    for (let i = 0; i < pattern.length && index < phone.length; i++) {\n        if (pattern[i] >= '0' && pattern[i] <= '9') {\n            result += pattern[i];\n            if (phone[index] === pattern[i]) {\n                index++;\n            }\n        } else if (pattern[i] === ' ') {\n            result += pattern[i];\n        } else if (pattern[i] === 'X') {\n            result += phone[index++];\n        }\n    }\n\n    result += ' ' + phone.substring(index);\n\n    return '+' + result;\n}\n\nexport function formatPhoneNumber(phone) {\n    const { data } = AuthStore;\n    if (!data) return phone;\n\n    const country = getCountryFromPhone(phone, data);\n    if (!country) return phone;\n\n    return formatByPattern(phone, country.pattern);\n}\n\nfunction phoneEquals(phone1, phone2) {\n    return clearPhone(phone1) === clearPhone(phone2);\n}\n\nfunction isWhitelistKey(key) {\n    if (key >= '0' && key <= '9') return true;\n    if (key === ' ') return true;\n    if (key === '+') return true;\n\n    return false;\n}\n\nfunction clearPhone(phone) {\n    if (!phone) return phone;\n\n    return phone\n        .replace(/ /g, '')\n        .replace('+', '')\n        .toLowerCase();\n}\n\nfunction isPhoneWithOptionCode(phone, option) {\n    if (!phone) return false;\n    if (!option) return false;\n\n    phone = clearPhone(phone);\n    const code = clearPhone(option.phone);\n\n    return phone.startsWith(code);\n}\n\nfunction isValidOption(x, value) {\n    if (!x) return false;\n    if (!value) return true;\n\n    if (value.length > 0 && value[0] === '(') {\n        value = value.substring(1);\n    }\n\n    const names = x.name.toLowerCase().split(' ');\n    for (let i = 0; i < names.length; i++) {\n        if (names[i].length > 0 && names[i][0] === '(') {\n            names[i] = names[i].substring(1);\n        }\n    }\n    const phone = clearPhone(x.phone);\n\n    if (names.some(x => x.startsWith(value))) return true;\n    if (phone.startsWith(value) || value.startsWith(phone)) return true;\n\n    return false;\n}\n\nfunction getCountryFromPhone(phone, data) {\n    if (!data) return null;\n\n    const index = data.findIndex(x => isPhoneWithOptionCode(phone, x));\n\n    return index !== -1 ? data[index] : null;\n}\n\nfunction getCountryFromCode(code, data) {\n    if (!code) return null;\n    if (!data) return null;\n\n    const index = data.findIndex(x => x.code.toLowerCase() === code.toLowerCase());\n\n    return index !== -1 ? data[index] : null;\n}\n\nclass Phone extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { defaultPhone, data } = props;\n\n        const phone = defaultPhone || '';\n        const country = getCountryFromPhone(phone, data);\n        const countryCode = null;\n\n        this.state = {\n            connecting: isConnecting(AppStore.connectionState),\n            error: null,\n            loading: false,\n            suggestedLanguage: localStorage.getItem(KEY_SUGGESTED_LANGUAGE_PACK_ID),\n            keep: true,\n\n            phone,\n            country,\n            countryCode\n        };\n\n        this.phoneInputRef = React.createRef();\n    }\n\n    async setCountryCode() {\n        const { countryCode } = this.state;\n        if (countryCode) return;\n\n        const code = await TdLibController.send({ '@type': 'getCountryCode' });\n        if (!code) return;\n\n        const { data } = this.props;\n        let { country, phone } = this.state;\n        if (!country && !phone && data) {\n            country = getCountryFromCode(code.text, data);\n            if (country) {\n                phone = '+' + clearPhone(country.phone) + ' ';\n            }\n        }\n\n        this.setState({ phone, country, countryCode });\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n    }\n\n    componentDidMount() {\n        this.setSuggestedLanguagePackId();\n\n        AppStore.on('clientUpdateSetPhoneCanceled', this.onClientUpdateSetPhoneCanceled);\n        AppStore.on('clientUpdateSetPhoneError', this.onClientUpdateSetPhoneError);\n        AppStore.on('clientUpdateSetPhoneResult', this.onClientUpdateSetPhoneResult);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n        OptionStore.on('updateOption', this.onUpdateOption);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSetPhoneCanceled', this.onClientUpdateSetPhoneCanceled);\n        AppStore.off('clientUpdateSetPhoneError', this.onClientUpdateSetPhoneError);\n        AppStore.off('clientUpdateSetPhoneResult', this.onClientUpdateSetPhoneResult);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n        OptionStore.off('updateOption', this.onUpdateOption);\n    }\n\n    onUpdateConnectionState = update => {\n        const { state } = update;\n\n        if (state['@type'] === 'connectionStateReady') {\n            this.setCountryCode();\n        }\n\n        this.setState({ connecting: isConnecting(state) });\n    };\n\n    onClientUpdateSetPhoneCanceled = update => {\n        this.setState({ loading: false });\n    };\n\n    onClientUpdateSetPhoneError = update => {\n        const { error } = update;\n\n        let errorString = null;\n        if (error && error['@type'] === 'error' && error.message) {\n            if (error.message === 'PHONE_NUMBER_INVALID') {\n                this.setState({ error: { code: 'InvalidPhoneNumber' }, loading: false });\n                return;\n            } else {\n                errorString = error.message;\n            }\n        } else {\n            errorString = JSON.stringify(error);\n        }\n\n        this.setState({ error: { string: errorString }, loading: false });\n    };\n\n    onClientUpdateSetPhoneResult = update => {\n        this.setState({ loading: false });\n    };\n\n    onUpdateOption = update => {\n        const { name } = update;\n\n        if (name === 'suggested_language_pack_id') {\n            this.setSuggestedLanguagePackId();\n        }\n    };\n\n    async setSuggestedLanguagePackId() {\n        const { i18n } = this.props;\n        if (!i18n) return;\n\n        const languagePackId = OptionStore.get('suggested_language_pack_id');\n        if (!languagePackId) return;\n\n        const { value } = languagePackId;\n\n        await LocalizationStore.loadLanguage(value);\n\n        this.setState({ suggestedLanguage: value });\n    }\n\n    handleKeyPress = event => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.handleDone();\n        } else if (!isWhitelistKey(event.key)) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleDone = () => {\n        const { phone } = this.state;\n        if (!isValidPhoneNumber(phone)) {\n            this.setState({ error: { code: 'InvalidPhoneNumber' } });\n            return;\n        }\n\n        this.setState({ error: null, loading: true });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSetPhone',\n            phone\n        });\n    };\n\n    handleChangeLanguage = () => {\n        const { i18n } = this.props;\n        const { suggestedLanguage } = this.state;\n\n        if (!i18n) return;\n        if (!suggestedLanguage) return;\n\n        const nextLanguage = suggestedLanguage === i18n.language ? LocalizationStore.fallbackLng : suggestedLanguage;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: nextLanguage });\n    };\n\n    handleFilterOptions = (options, { inputValue }) => {\n        if (!options) return;\n\n        let value = inputValue.toLowerCase().replace(/ /g, '');\n        value = value.length > 0 && value[0] === '+' ? value.substring(1) : value;\n\n        return options.filter(x => isValidOption(x, value));\n    };\n\n    handleCountryChange = (event, nextCountry) => {\n        if (!nextCountry) return;\n\n        const { phone, country } = this.state;\n\n        const prevPhone = country ? phone.replace(country.phone, '') : phone;\n        const nextPhone = nextCountry.phone + ' ' + prevPhone.trimStart();\n\n        this.setState({ country: nextCountry, phone: nextPhone }, () => {\n            this.phoneInputRef.current.focus();\n        });\n    };\n\n    handleKeepChange = (event, value) => {\n        this.setState({ keep: !this.state.keep });\n    };\n\n    handlePhoneChange = event => {\n        let nextPhone = event.target.value;\n\n        const { data } = this.props;\n        let { country } = this.state;\n        if (country) {\n            if (!nextPhone.startsWith(country.phone)) {\n                country = null;\n            }\n        }\n\n        if (!country && data && nextPhone) {\n            country = getCountryFromPhone(nextPhone, data);\n            if (country && phoneEquals(nextPhone, country.phone)) {\n                nextPhone = '+' + clearPhone(nextPhone) + ' ';\n            }\n        }\n\n        this.setState({ phone: nextPhone, country });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            // const phoneRegExp = '/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g';\n\n            let phone = '';\n            for (let ch of plainText) {\n                if (isWhitelistKey(ch)) {\n                    phone += ch;\n                }\n            }\n\n            document.execCommand('insertText', false, phone);\n        }\n    };\n\n    render() {\n        const { data, i18n, t } = this.props;\n        const { connecting, loading, error, suggestedLanguage, keep, phone, country } = this.state;\n\n        let errorString = '';\n        if (error) {\n            const { code, string } = error;\n            if (code) {\n                errorString = t(code);\n            } else {\n                errorString = string;\n            }\n        }\n\n        const title = connecting ? cleanProgressStatus(t('Connecting')) : t('SignInToTelegram');\n        const nextLanguage = suggestedLanguage === i18n.language ? LocalizationStore.fallbackLng : suggestedLanguage;\n\n        return (\n            <form className='auth-root' autoComplete='off'>\n                <Typography variant='body1' className='auth-title'>\n                    <span>{title}</span>\n                    {connecting && <HeaderProgress />}\n                </Typography>\n                <Typography variant='body1' className='auth-subtitle' style={{ width: 254 }}>\n                    {t('StartText')}\n                </Typography>\n                <Autocomplete\n                    debug={false}\n                    id='country-select'\n                    noOptionsText={t('NoResult')}\n                    options={data}\n                    disabled={loading}\n                    autoHighlight\n                    getOptionLabel={option => option.name}\n                    renderOption={option => <Country name={option.name} emoji={option.emoji} phone={option.phone} />}\n                    renderInput={params => (\n                        <TextField\n                            classes={{ root: 'auth-input' }}\n                            {...params}\n                            label={t('Country')}\n                            variant='outlined'\n                            inputProps={{\n                                ...params.inputProps\n                            }}\n                            fullWidth\n                            autoComplete='off'\n                        />\n                    )}\n                    filterOptions={this.handleFilterOptions}\n                    value={country}\n                    onChange={this.handleCountryChange}\n                />\n                <TextField\n                    id='phoneNumber'\n                    classes={{ root: 'auth-input' }}\n                    inputRef={this.phoneInputRef}\n                    variant='outlined'\n                    color='primary'\n                    label={t('PhoneNumber')}\n                    disabled={loading}\n                    error={Boolean(errorString)}\n                    helperText={errorString}\n                    fullWidth\n                    autoFocus\n                    autoComplete='off'\n                    value={phone}\n                    onChange={this.handlePhoneChange}\n                    onKeyPress={this.handleKeyPress}\n                    onPaste={this.handlePaste}\n                />\n                <div className='sign-in-keep'>\n                    <Checkbox color='primary' checked={keep} disabled={loading} onChange={this.handleKeepChange} />\n                    <Typography variant='body1'>{t('KeepMeSignedIn')}</Typography>\n                </div>\n                <Button\n                    classes={{ root: 'auth-button' }}\n                    variant='contained'\n                    disableElevation\n                    fullWidth\n                    color='primary'\n                    disabled={loading}\n                    onClick={this.handleDone}>\n                    {t('Next')}\n                </Button>\n                <Typography className='sign-in-continue-on'>\n                    <Link onClick={this.handleChangeLanguage}>\n                        {Boolean(nextLanguage) ? t('ContinueOnThisLanguage', { lng: nextLanguage }) : ' '}\n                    </Link>\n                </Typography>\n            </form>\n        );\n    }\n}\n\nPhone.propTypes = {\n    defaultPhone: PropTypes.string\n};\n\nexport default withTranslation()(Phone);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/EditOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport HeaderProgress from '../ColumnMiddle/HeaderProgress';\nimport { cleanProgressStatus, formatPhoneNumber, isConnecting } from './Phone';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Code.css';\n\nclass Code extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connecting: isConnecting(AppStore.connectionState),\n            error: '',\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMonkeyIdle'\n        });\n\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    onUpdateConnectionState = update => {\n        const { state } = update;\n\n        this.setState({ connecting: isConnecting(state) });\n    };\n\n    handleNext = () => {\n        if (this.code && this.isValid(this.code)) {\n            this.setState({ error: '' });\n            this.handleDone();\n        } else {\n            this.setState({ error: 'Invalid code. Please try again.' });\n        }\n    };\n\n    handleDone = () => {\n        const { t } = this.props;\n        const code = this.code;\n\n        this.setState({ loading: true });\n        TdLibController.send({\n            '@type': 'checkAuthenticationCode',\n            code: code,\n            first_name: 'A',\n            last_name: 'B'\n        })\n            .then(result => {})\n            .catch(error => {\n                let errorString = null;\n                if (error && error['@type'] === 'error' && error.message) {\n                    if (error.message === 'PHONE_CODE_INVALID') {\n                        errorString = t('InvalidCode');\n                    } else {\n                        errorString = error.message;\n                    }\n                } else {\n                    errorString = JSON.stringify(error);\n                }\n\n                this.setState({ error: errorString }, () => {\n                    setTimeout(() => this.inputRef.current.focus(), 100);\n                });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    handleBack = () => {\n        this.props.onChangePhone();\n    };\n\n    isValid(code) {\n        let isBad = !code.match(/^[\\d\\-+\\s]+$/);\n        if (!isBad) {\n            code = code.replace(/\\D/g, '');\n            if (code.length !== 5) {\n                isBad = true;\n            }\n        }\n\n        return !isBad;\n    }\n\n    handleChange = e => {\n        const prevCode = this.code || '';\n        this.code = e.target.value || '';\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMonkeyTracking',\n            prevCode,\n            code: this.code\n        });\n\n        if (this.code && this.codeLength > 0 && this.code.length === this.codeLength) {\n            this.handleNext();\n        }\n    };\n\n    handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleNext();\n        }\n    };\n\n    getPhoneNumber(codeInfo) {\n        if (!codeInfo) return null;\n        return codeInfo.phone_number;\n    }\n\n    getCodeLength(codeInfo) {\n        if (!codeInfo) return 0;\n        if (!codeInfo.type) return 0;\n\n        switch (codeInfo.type['@type']) {\n            case 'authenticationCodeTypeCall': {\n                return codeInfo.type.length;\n            }\n            case 'authenticationCodeTypeFlashCall': {\n                return 0;\n            }\n            case 'authenticationCodeTypeSms': {\n                return codeInfo.type.length;\n            }\n            case 'authenticationCodeTypeTelegramMessage': {\n                return codeInfo.type.length;\n            }\n        }\n\n        return 0;\n    }\n\n    getSubtitle(codeInfo, t = k => k) {\n        if (!codeInfo) return 'Subtitle';\n        if (!codeInfo.type) return 'Subtitle';\n\n        switch (codeInfo.type['@type']) {\n            case 'authenticationCodeTypeCall': {\n                return 'Telegram dialed your number';\n            }\n            case 'authenticationCodeTypeFlashCall': {\n                return 'Telegram dialed your number';\n            }\n            case 'authenticationCodeTypeSms': {\n                return 'We have sent you a message with activation code to your phone. Please enter it below.';\n            }\n            case 'authenticationCodeTypeTelegramMessage': {\n                return \"Please enter the code you've just received in your previous Telegram app.\";\n            }\n        }\n\n        return 'Subtitle';\n    }\n\n    render() {\n        const { codeInfo, t } = this.props;\n        const { connecting, loading, error } = this.state;\n\n        this.phoneNumber = this.getPhoneNumber(codeInfo);\n        this.codeLength = this.getCodeLength(codeInfo);\n        const subtitle = this.getSubtitle(codeInfo);\n\n        let title = 'Title';\n        if (connecting) {\n            title = cleanProgressStatus(t('Connecting'));\n        } else if (this.phoneNumber) {\n            title = formatPhoneNumber(this.phoneNumber);\n        }\n\n        return (\n            <form className='auth-root' autoComplete='off'>\n                <div className={classNames('code-title', 'auth-title')}>\n                    <Typography variant='body1' className='auth-title-typography'>\n                        <span>{title}</span>\n                        {connecting && <HeaderProgress />}\n                    </Typography>\n                    <IconButton aria-label='edit' onClick={this.handleBack} disabled={loading}>\n                        <EditIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <Typography variant='body1' className='auth-subtitle' style={{ width: 300 }}>\n                    {subtitle}\n                </Typography>\n                <TextField\n                    classes={{ root: 'auth-input' }}\n                    inputRef={this.inputRef}\n                    variant='outlined'\n                    color='primary'\n                    disabled={loading}\n                    error={Boolean(error)}\n                    helperText={error}\n                    fullWidth\n                    autoFocus\n                    autoComplete='off'\n                    label={t('Code')}\n                    maxLength={this.codeLength > 0 ? this.codeLength : 256}\n                    onChange={this.handleChange}\n                    onKeyPress={this.handleKeyPress}\n                />\n            </form>\n        );\n    }\n}\n\nexport default withTranslation()(Code);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport HeaderProgress from '../ColumnMiddle/HeaderProgress';\nimport { cleanProgressStatus, isConnecting } from './Phone';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Password.css';\n\nfunction debounce(func, wait, immediate) {\n    let timeout;\n    return function() {\n        let context = this,\n            args = arguments;\n        let later = function() {\n            timeout = null;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    };\n}\n\nclass Password extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connecting: isConnecting(AppStore.connectionState),\n            password: '',\n            showPassword: false,\n            error: ''\n        };\n\n        this.inputRef = React.createRef();\n        this.sendMonkeyPeek = debounce(this.sendMonkeyPeek, 200, false);\n    }\n\n    componentDidMount() {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMonkeyClose'\n        });\n\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    onUpdateConnectionState = update => {\n        const { state } = update;\n\n        this.setState({ connecting: isConnecting(state) });\n    };\n\n    handleNext = () => {\n        if (this.password) {\n            this.setState({ error: '' });\n            this.handleDone();\n        } else {\n            this.setState({ error: 'Invalid password. Please try again.' });\n        }\n    };\n\n    handleBack = () => {\n        this.props.onChangePhone();\n    };\n\n    handleDone = () => {\n        const password = this.password;\n\n        this.setState({ loading: true });\n        TdLibController.send({\n            '@type': 'checkAuthenticationPassword',\n            password: password\n        })\n            .then(result => {})\n            .catch(error => {\n                let errorString = null;\n                if (error && error['@type'] === 'error' && error.message) {\n                    errorString = error.message;\n                } else {\n                    errorString = JSON.stringify(error);\n                }\n\n                this.setState({ error: errorString }, () => {\n                    setTimeout(() => this.inputRef.current.focus(), 100);\n                });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n\n        this.sendMonkeyPeek();\n    };\n\n    sendMonkeyPeek() {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMonkeyPeek',\n            peek: this.state.showPassword\n        });\n    }\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleNext();\n        }\n    };\n\n    render() {\n        const { passwordHint, t } = this.props;\n        const { connecting, loading, error, showPassword } = this.state;\n\n        let title = t('EnterPassword');\n        if (connecting) {\n            title = cleanProgressStatus(t('Connecting'));\n        }\n\n        return (\n            <form className='auth-root' autoComplete='off'>\n                <Typography variant='body1' className='auth-title'>\n                    <span>{title}</span>\n                    {connecting && <HeaderProgress />}\n                </Typography>\n                <Typography variant='body1' className='auth-subtitle' style={{ width: 235 }}>\n                    {t('YourAccountProtectedWithPassword')}\n                </Typography>\n                <FormControl className='auth-input' fullWidth variant='outlined'>\n                    <InputLabel htmlFor='adornment-password' error={Boolean(error)}>\n                        {t('LoginPassword')}\n                    </InputLabel>\n                    <OutlinedInput\n                        fullWidth\n                        autoFocus\n                        autoComplete='off'\n                        id='adornment-password'\n                        inputRef={this.inputRef}\n                        type={showPassword ? 'text' : 'password'}\n                        disabled={loading}\n                        error={Boolean(error)}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        endAdornment={\n                            <InputAdornment position='end'>\n                                <IconButton\n                                    aria-label='Toggle password visibility'\n                                    onClick={this.handleClickShowPassword}\n                                    onMouseDown={this.handleMouseDownPassword}\n                                    edge='end'>\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        labelWidth={70}\n                    />\n                    {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                    {error && (\n                        <FormHelperText id='password-error-text' error>\n                            {error}\n                        </FormHelperText>\n                    )}\n                </FormControl>\n                <Button\n                    classes={{ root: 'auth-button' }}\n                    fullWidth\n                    color='primary'\n                    variant='contained'\n                    disableElevation\n                    onClick={this.handleNext}\n                    disabled={loading}>\n                    {t('Next')}\n                </Button>\n            </form>\n        );\n    }\n}\n\nexport default withTranslation()(Password);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass AuthErrorDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            error: null\n        };\n\n        this.handleAuthError = this.handleAuthError.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n    componentDidMount() {\n        TdLibController.on('tdlib_auth_error', this.handleAuthError);\n    }\n\n    componentWillUnmount() {\n        TdLibController.off('tdlib_auth_error', this.handleAuthError);\n    }\n\n    handleAuthError(error) {\n        this.setState({\n            open: true,\n            error: error\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleKeyDown(e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleClose();\n        }\n    }\n\n    render() {\n        let errorString = null;\n        if (this.state.error && this.state.error['@type'] === 'error' && this.state.error.message) {\n            errorString = this.state.error.message;\n        } else {\n            errorString = JSON.stringify(this.state.error);\n        }\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onKeyDown={this.handleKeyDown}\n                onClose={this.handleClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>Error</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{errorString}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AuthErrorDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Caption from './Caption';\nimport Code from './Code';\nimport Password from './Password';\nimport Phone from './Phone';\nimport AuthErrorDialog from './AuthErrorDialog';\nimport { loadData } from '../../Utils/Phone';\nimport AppStore from '../../Stores/ApplicationStore';\nimport AuthStore from '../../Stores/AuthorizationStore';\nimport './AuthForm.css';\n\nclass AuthForm extends React.Component {\n    state = {\n        data: null\n    };\n\n    componentDidMount() {\n        setTimeout(this.loadContent, 100);\n    }\n\n    loadContent = async () => {\n        const { data } = this.state;\n        if (data) return;\n\n        try {\n            AuthStore.data = await loadData();\n\n            this.setState({ data: AuthStore.data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    render() {\n        const { authorizationState: state } = this.props;\n        const { data } = this.state;\n        const { defaultPhone } = AppStore;\n\n        let control = null;\n        switch (state['@type']) {\n            case 'authorizationStateWaitPhoneNumber':\n            case 'authorizationStateWaitEncryptionKey':\n            case 'authorizationStateWaitTdlibParameters':\n            case 'authorizationStateWaitTdlib': {\n                control = <Phone defaultPhone={defaultPhone} data={data} />;\n                break;\n            }\n            case 'authorizationStateWaitCode': {\n                const { onChangePhone } = this.props;\n                const { terms_of_service, code_info } = state;\n\n                control = (\n                    <Code\n                        termsOfService={terms_of_service}\n                        codeInfo={code_info}\n                        onChangePhone={onChangePhone}\n                        data={data}\n                    />\n                );\n                break;\n            }\n            case 'authorizationStateWaitPassword': {\n                const { onChangePhone } = this.props;\n                const { password_hint, has_recovery_email_address, recovery_email_address_pattern } = state;\n\n                control = (\n                    <Password\n                        passwordHint={password_hint}\n                        hasRecoveryEmailAddress={has_recovery_email_address}\n                        recoveryEmailAddressPattern={recovery_email_address_pattern}\n                        onChangePhone={onChangePhone}\n                    />\n                );\n                break;\n            }\n            default:\n                break;\n        }\n\n        return (\n            <div className='authorization-form' onLoad={this.handleLoad}>\n                <div className='authorization-form-content'>\n                    <Caption state={state} />\n                    {control}\n                </div>\n                <AuthErrorDialog />\n            </div>\n        );\n    }\n}\nexport default AuthForm;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './AppInactive.css';\n\nclass AppInactive extends React.Component {\n    static handleReload() {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div className='app-inactive'>\n                <div className='app-inactive-wrapper'>\n                    <img\n                        className='app-inactive-image'\n                        src='Manytabs_2x.png'\n                        alt=''\n                        onClick={AppInactive.handleReload}\n                    />\n                    <h3 className='app-inactive-title'>Such error, many tabs</h3>\n                    <div className='app-inactive-description'>\n                        Telegram supports only one active tab with the app.\n                        <br />\n                        Please reload this page to continue using this tab or close it.\n                    </div>\n                    <div className='app-inactive-actions'>\n                        <Button color='primary' onClick={AppInactive.handleReload}>\n                            Reload app\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AppInactive;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport packageJson from '../../package.json';\nimport './Footer.css';\n\nclass Footer extends React.PureComponent {\n    render() {\n        return (\n            <div className='footer-wrapper'>\n                <span>{packageJson.version}</span>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport AppInactive from './Additional/AppInactive';\nimport Footer from './Footer';\n\nclass InactivePage extends React.Component {\n    render() {\n        return (\n            <>\n                <div className='header-wrapper' />\n                <div className='page'>\n                    <AppInactive />\n                </div>\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default InactivePage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { isIOS, isWindowsPhone } from '../../Utils/Common';\nimport './NativeApp.css';\n\nclass NativeApp extends React.Component {\n    static handleInstall = () => {\n        if (isIOS()) {\n            window.location.href = 'https://telegram.org/dl/ios';\n        } else if (isWindowsPhone()) {\n            window.location.href = 'https://telegram.org/dl/wp';\n        } else {\n            window.location.href = 'https://telegram.org/dl/android';\n        }\n    };\n\n    render() {\n        let src = 'Android_2x.jpg';\n        if (isIOS()) {\n            src = 'iOS_2x.jpg';\n        } else if (isWindowsPhone()) {\n            src = 'WP_2x.jpg';\n        }\n\n        return (\n            <div className='app-inactive'>\n                <div className='app-inactive-wrapper'>\n                    <img src={src} alt='' className='app-inactive-image' onClick={NativeApp.handleInstall} />\n                    <h3 className='app-inactive-title'>Work is in progress!</h3>\n                    <div className='app-inactive-description'>\n                        This client has not been optimized for mobile devices yet.\n                        <br />\n                        Please consider using our native mobile app.\n                    </div>\n                    <div className='app-inactive-actions'>\n                        <Button color='primary' onClick={NativeApp.handleInstall}>\n                            Install app\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NativeApp;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Footer from './Footer';\nimport NativeApp from './Additional/NativeApp';\n\nclass NativeAppPage extends React.Component {\n    render() {\n        return (\n            <>\n                <div className='header-wrapper' />\n                <div\n                    className='page'\n                    style={{\n                        background: '#FFFFFF',\n                        color: '#000000'\n                    }}>\n                    <NativeApp />\n                </div>\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default NativeAppPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport { compose } from './Utils/HOC';\nimport withLanguage from './Language';\nimport withTelegramTheme from './Theme';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport packageJson from '../package.json';\nimport AuthForm from './Components/Auth/AuthForm';\nimport InactivePage from './Components/InactivePage';\nimport NativeAppPage from './Components/NativeAppPage';\n// import StubPage from './Components/StubPage';\nimport registerServiceWorker from './registerServiceWorker';\nimport { isMobile } from './Utils/Common';\nimport { loadData } from './Utils/Phone';\nimport { OPTIMIZATIONS_FIRST_START } from './Constants';\nimport ChatStore from './Stores/ChatStore';\nimport UserStore from './Stores/UserStore';\nimport AppStore from './Stores/ApplicationStore';\nimport AuthorizationStore from './Stores/AuthorizationStore';\nimport TdLibController from './Controllers/TdLibController';\nimport './TelegramApp.css';\n\n// import MainPage from './Components/MainPage';\nconst MainPage = React.lazy(() => import('./Components/MainPage'));\n\nclass TelegramApp extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`Start Telegram Web ${packageJson.version}`);\n\n        this.state = {\n            prevAuthorizationState: AuthorizationStore.current,\n            authorizationState: null,\n            tdlibDatabaseExists: false,\n            inactive: false,\n            fatalError: false,\n            nativeMobile: isMobile(),\n            isSmall: window.innerWidth < 800\n        };\n    }\n\n    componentWillMount() {\n        const { location } = this.props;\n\n        TdLibController.init(location);\n    }\n\n    componentDidMount() {\n        setTimeout(() => loadData(), 1500);\n        TdLibController.on('update', this.onUpdate);\n\n        AppStore.on('clientUpdateAppInactive', this.onClientUpdateAppInactive);\n        AppStore.on('clientUpdateTdLibDatabaseExists', this.onClientUpdateTdLibDatabaseExists);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateFatalError', this.onUpdateFatalError);\n    }\n\n    componentWillUnmount() {\n        TdLibController.off('update', this.onUpdate);\n\n        AppStore.off('clientUpdateAppInactive', this.onClientUpdateAppInactive);\n        AppStore.off('clientUpdateTdLibDatabaseExists', this.onClientUpdateTdLibDatabaseExists);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateFatalError', this.onUpdateFatalError);\n    }\n\n    onClientUpdateTdLibDatabaseExists = update => {\n        const { exists } = update;\n\n        if (!exists) {\n            this.setState({\n                authorizationState: {\n                    '@type': 'authorizationStateWaitTdlib'\n                },\n                tdlibDatabaseExists: exists\n            });\n        }\n    };\n\n    onUpdate = update => {\n        if (OPTIMIZATIONS_FIRST_START) {\n            if (!this.checkServiceWorker) {\n                this.checkServiceWorker = true;\n\n                const register = localStorage.getItem('register');\n                if (!register) {\n                    registerServiceWorker();\n                }\n            }\n        }\n    };\n\n    onUpdateFatalError = update => {\n        this.setState({ fatalError: true });\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState });\n\n        if (!window.hasFocus) return;\n        if (!authorizationState) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'online',\n            value: { '@type': 'optionValueBoolean', value: true }\n        });\n    };\n\n    onClientUpdateAppInactive = update => {\n        this.setState({ inactive: true });\n    };\n\n    handleChangePhone = () => {\n        this.setState({\n            authorizationState: { '@type': 'authorizationStateWaitPhoneNumber' }\n        });\n    };\n\n    handleDragOver = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleRefresh = () => {\n        this.setState({ fatalError: false });\n        window.location.reload();\n    };\n\n    handleDestroy = () => {\n        this.setState({ fatalError: false });\n        TdLibController.send({ '@type': 'destroy' });\n    };\n\n    handleKeyDown = event => {\n        //console.log('KeyDown', event);\n    };\n\n    render() {\n        const { t, theme } = this.props;\n        const { inactive, nativeMobile, tdlibDatabaseExists, fatalError } = this.state;\n        let { authorizationState, prevAuthorizationState } = this.state;\n        const state = authorizationState;\n        if (\n            !authorizationState ||\n            authorizationState['@type'] === 'authorizationStateWaitEncryptionKey' ||\n            authorizationState['@type'] === 'authorizationStateWaitTdlibParameters'\n        ) {\n            if (prevAuthorizationState) {\n                authorizationState = prevAuthorizationState;\n            }\n            // else if (tdlibDatabaseExists) {\n            //     authorizationState = {\n            //         '@type': 'authorizationStateReady'\n            //     }\n            // }\n            else {\n                authorizationState = {\n                    '@type': 'authorizationStateWaitPhoneNumber'\n                };\n            }\n        }\n\n        const loading = t('Loading').replace('...', '');\n        let page = ( //<MainPage />;\n            <React.Suspense fallback={null}>\n                <MainPage />\n            </React.Suspense>\n        );\n\n        if (nativeMobile) {\n            page = <NativeAppPage />;\n        } else if (inactive) {\n            page = <InactivePage />;\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                case 'authorizationStateClosing':\n                case 'authorizationStateLoggingOut':\n                case 'authorizationStateReady': {\n                    break;\n                }\n                case 'authorizationStateWaitCode':\n                case 'authorizationStateWaitPassword':\n                case 'authorizationStateWaitPhoneNumber':\n                case 'authorizationStateWaitTdlib':\n                    page = <AuthForm authorizationState={authorizationState} onChangePhone={this.handleChangePhone} />;\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                case 'authorizationStateWaitTdlibParameters': {\n                    // if (!tdlibDatabaseExists) {\n                    //     page = (\n                    //         <AuthForm\n                    //             authorizationState={authorizationState}\n                    //             onChangePhone={this.handleChangePhone}\n                    //         />\n                    //     );\n                    // }\n\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     'TelegramApp.render',\n        //     state,\n        //     prevAuthorizationState,\n        //     'nativeMobile=' + nativeMobile,\n        //     'inactive=' + inactive,\n        //     'tdlibDb=' + tdlibDatabaseExists,\n        //     page\n        // );\n\n        return (\n            <div\n                id='app'\n                className={theme.palette.type === 'dark' ? 'dark' : 'light'}\n                onDragOver={this.handleDragOver}\n                onDrop={this.handleDrop}\n                onKeyDown={this.handleKeyDown}>\n                {page}\n                <Dialog\n                    transitionDuration={0}\n                    open={fatalError}\n                    onClose={this.handleRefresh}\n                    aria-labelledby='fatal-error-dialog-title'\n                    aria-describedby='fatal-error-dialog-description'>\n                    <DialogTitle id='fatal-error-dialog-title'>Telegram</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='fatal-error-dialog-description'>\n                            Oops! Something went wrong. We need to refresh this page.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDestroy} color='primary'>\n                            Log out\n                        </Button>\n                        <Button onClick={this.handleRefresh} color='primary' autoFocus>\n                            Refresh\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst keyMap = new Map();\nwindow.keyMap = keyMap;\n\nasync function openPinnedChat(index) {\n    const chats = await TdLibController.send({\n        '@type': 'getChats',\n        offset_order: '9223372036854775807',\n        offset_chat_id: 0,\n        limit: 10\n    });\n\n    if (chats) {\n        let pinnedIndex = -1;\n        for (let i = 0; i < chats.chat_ids.length; i++) {\n            const chat = ChatStore.get(chats.chat_ids[i]);\n            if (chat && chat.is_pinned) {\n                pinnedIndex++;\n            }\n\n            if (pinnedIndex === index) {\n                TdLibController.setChatId(chat.id);\n                return;\n            }\n        }\n    }\n}\n\ndocument.addEventListener('keyup', event => {\n    keyMap.delete(event.key);\n    //console.log('keyup key=' + event.key, keyMap);\n});\n\ndocument.addEventListener('keydown', async event => {\n    keyMap.set(event.key, event.key);\n    //console.log('keydown key=' + event.key, event.altKey, event.ctrlKey, event, keyMap);\n\n    const { authorizationState } = AppStore;\n    if (!authorizationState) return;\n    if (authorizationState['@type'] !== 'authorizationStateReady') return;\n    if (keyMap.size > 3) return;\n\n    if (event.altKey && event.ctrlKey) {\n        switch (event.key) {\n            case '0': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const chat = await TdLibController.send({\n                    '@type': 'createPrivateChat',\n                    user_id: UserStore.getMyId(),\n                    force: true\n                });\n\n                if (chat) {\n                    TdLibController.setChatId(chat.id);\n                }\n                break;\n            }\n            case '1': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(0);\n                break;\n            }\n            case '2': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(1);\n                break;\n            }\n            case '3': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(2);\n                break;\n            }\n            case '4': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(3);\n                break;\n            }\n            case '5': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(4);\n                break;\n            }\n        }\n    }\n});\n\nwindow.hasFocus = true;\n\n// set offline on page lost focus\n// console.log('[ns] window.onblur attach');\nwindow.onblur = function() {\n    keyMap.clear();\n\n    window.hasFocus = false;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateFocusWindow',\n        focused: false\n    });\n};\n\n// set online on page get focus\n// console.log('[ns] window.onfocus attach');\nwindow.onfocus = function() {\n    keyMap.clear();\n\n    window.hasFocus = true;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateFocusWindow',\n        focused: true\n    });\n};\n\n// disable back navigation\nwindow.history.pushState(null, null, window.location.href);\nwindow.onpopstate = function() {\n    window.history.go(1);\n};\n\nconst enhance = compose(\n    withLanguage,\n    withTranslation(),\n    withTelegramTheme,\n    withTheme\n);\n\nexport default enhance(TelegramApp);\n","import { actions } from \"../action/constants\";\n\nconst initialState = {\n  currentEmotion: \"neutral\",\n  isLocked: false\n};\n\nexport const emotions = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.CHANGE_EMOTION:\n      if(!state.isLocked){\n        return {\n          ...state,\n          currentEmotion: action.payload\n        };\n      }else {\n        return {\n          ...state\n        }\n      }\n    case actions.TOGGLE_LOCK:\n      return {\n        ...state,\n        isLocked: !state.isLocked\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { emotions } from \"./emotions\";\nimport { emojis } from \"./emojis\";\n\nconst reducer = combineReducers({\n  emotions,\n  emojis\n});\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducers from \"../reducers\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import TelegramApp from './Components/Auth/TestPage';\nimport TelegramApp from './TelegramApp';\nimport registerServiceWorker from './registerServiceWorker';\nimport { OPTIMIZATIONS_FIRST_START } from './Constants';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./Stores/emotion/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route path=\"\" component={TelegramApp} />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nif (OPTIMIZATIONS_FIRST_START) {\n    const register = localStorage.getItem('register');\n    if (register) {\n        registerServiceWorker();\n    }\n} else {\n    registerServiceWorker();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../Constants';\n\nexport function isMobile() {\n    return isAndroid() || isIOS() || isWindowsPhone();\n}\n\nexport function isIOS() {\n    const iDevices = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'];\n\n    if (!!navigator.platform && iDevices.indexOf(navigator.platform) > -1) {\n        return true;\n    }\n\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n\nexport function isAndroid() {\n    const ua = navigator.userAgent.toLowerCase();\n    return ua.indexOf('android') > -1;\n}\n\nexport function isWindowsPhone() {\n    if (navigator.userAgent.match(/Windows Phone/i)) {\n        return true;\n    }\n\n    if (navigator.userAgent.match(/iemobile/i)) {\n        return true;\n    }\n\n    if (navigator.userAgent.match(/WPDesktop/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isAppleDevice() {\n    const iDevices = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod', 'MacIntel'];\n\n    if (!!navigator.platform) {\n        return iDevices.indexOf(navigator.platform) > -1;\n    }\n\n    return /iPad|iPhone|iPod|Mac\\sOS\\sX/.test(navigator.userAgent) && !window.MSStream;\n}\n\nfunction getOSName() {\n    let OSName = 'Unknown';\n    if (window.navigator.userAgent.indexOf('Windows NT 10.0') !== -1) OSName = 'Windows 10';\n    if (window.navigator.userAgent.indexOf('Windows NT 6.2') !== -1) OSName = 'Windows 8';\n    if (window.navigator.userAgent.indexOf('Windows NT 6.1') !== -1) OSName = 'Windows 7';\n    if (window.navigator.userAgent.indexOf('Windows NT 6.0') !== -1) OSName = 'Windows Vista';\n    if (window.navigator.userAgent.indexOf('Windows NT 5.1') !== -1) OSName = 'Windows XP';\n    if (window.navigator.userAgent.indexOf('Windows NT 5.0') !== -1) OSName = 'Windows 2000';\n    if (window.navigator.userAgent.indexOf('Mac') !== -1) OSName = 'Mac/iOS';\n    if (window.navigator.userAgent.indexOf('X11') !== -1) OSName = 'UNIX';\n    if (window.navigator.userAgent.indexOf('Linux') !== -1) OSName = 'Linux';\n\n    return OSName;\n}\n\nfunction getBrowser() {\n    let browser_name = '';\n    let isIE = /*@cc_on!@*/ false || !!document.documentMode;\n    let isEdge = !isIE && !!window.StyleMedia;\n    if (navigator.userAgent.indexOf('Chrome') !== -1 && !isEdge) {\n        browser_name = 'Chrome';\n    } else if (navigator.userAgent.indexOf('Safari') !== -1 && !isEdge) {\n        browser_name = 'Safari';\n    } else if (navigator.userAgent.indexOf('Firefox') !== -1) {\n        browser_name = 'Firefox';\n    } else if (navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode === true) {\n        //IF IE > 10\n        browser_name = 'IE';\n    } else if (isEdge) {\n        browser_name = 'Edge';\n    } else {\n        browser_name = 'Unknown';\n    }\n\n    return browser_name;\n}\n\nfunction stringToBoolean(string) {\n    switch (string.toLowerCase().trim()) {\n        case 'true':\n        case 'yes':\n        case '1':\n            return true;\n        case 'false':\n        case 'no':\n        case '0':\n        case null:\n            return false;\n        default:\n            return Boolean(string);\n    }\n}\n\nfunction orderCompare(order1, order2) {\n    let diff = order1.length - order2.length;\n    if (diff !== 0) return diff < 0 ? -1 : 1;\n    if (order1 === order2) return 0;\n\n    return order1 > order2 ? 1 : -1;\n}\n\nfunction getPhotoThumbnailSize(sizes) {\n    return getSize(sizes, PHOTO_THUMBNAIL_SIZE);\n}\n\nfunction getPhotoSize(sizes, displaySize = PHOTO_SIZE) {\n    return getSize(sizes, displaySize);\n}\n\nfunction getSize(sizes, dimension) {\n    if (!sizes) return null;\n    if (sizes.length === 0) return null;\n    if (dimension === 0) return null;\n\n    // let iSize = sizes[2];//.find(x => x.type === 'i');\n    // if (iSize){\n    //     return iSize;\n    // }\n\n    let useWidth = sizes[0].width >= sizes[0].height;\n    let diff = Math.abs(dimension - (useWidth ? sizes[0].width : sizes[0].height));\n    let index = 0;\n    for (let i = 1; i < sizes.length; i++) {\n        if (sizes[i].type === 'i' && !sizes[i].photo.local.is_downloading_completed) {\n            continue;\n        }\n\n        let currDiff = Math.abs(dimension - (useWidth ? sizes[i].width : sizes[i].height));\n        if (currDiff < diff) {\n            index = i;\n            currDiff = diff;\n        }\n    }\n\n    return sizes[index];\n}\n\nfunction getFitSize(size, max, increaseToMax = true) {\n    if (!size) return { width: 0, height: 0 };\n\n    if (!increaseToMax) {\n        if (size.width < max && size.height < max) {\n            return size;\n        }\n    }\n\n    if (size.width > size.height) {\n        return { width: max, height: Math.floor((size.height * max) / size.width) };\n    }\n\n    return { width: Math.floor((size.width * max) / size.height), height: max };\n}\n\nfunction itemsInView(scrollContainerRef, itemsContainerRef) {\n    let scrollContainer = scrollContainerRef.current;\n    let itemsContainer = itemsContainerRef ? itemsContainerRef.current : scrollContainer;\n\n    const items = [];\n    for (let i = 0; i < itemsContainer.children.length; i++) {\n        let child = itemsContainer.children[i];\n        if (\n            child.offsetTop + child.offsetHeight >= scrollContainer.scrollTop &&\n            child.offsetTop <= scrollContainer.scrollTop + scrollContainer.offsetHeight\n        ) {\n            items.push(i);\n        }\n    }\n\n    return items;\n}\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nfunction throttle(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n    };\n    return function() {\n        var now = Date.now();\n        if (!previous && options.leading === false) previous = now;\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this,\n            args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    };\n}\n\nexport function getFirstLetter(str) {\n    if (!str) return '';\n\n    for (let char of str) {\n        if (char.toUpperCase() !== char.toLowerCase()) {\n            return char;\n        } else if (char >= '0' && char <= '9') {\n            return char;\n        } else if (char.length > 1) {\n            return char;\n        }\n    }\n\n    return '';\n}\n\nfunction getLetters(title) {\n    if (!title) return null;\n    if (title.length === 0) return null;\n\n    const split = title.split(' ');\n    if (split.length === 1) {\n        return getFirstLetter(split[0]);\n    }\n    if (split.length > 1) {\n        return getFirstLetter(split[0]) + getFirstLetter(split[split.length - 1]);\n    }\n\n    return null;\n}\n\nasync function readImageSize(file) {\n    return new Promise((resolve, reject) => {\n        let useBlob = false;\n        const reader = new FileReader();\n\n        reader.addEventListener('load', function() {\n            try {\n                const image = new Image();\n                image.addEventListener('load', function() {\n                    const { width, height } = image;\n                    if (useBlob) {\n                        window.URL.revokeObjectURL(image.src);\n                    }\n\n                    resolve([width, height]);\n                });\n\n                image.src = useBlob ? window.URL.createObjectURL(file) : reader.result;\n            } catch {\n                reject();\n            }\n        });\n\n        reader.readAsDataURL(file);\n    });\n}\n\n/**\n * use this to make a Base64 encoded string URL friendly,\n * i.e. '+' and '/' are replaced with '-' and '_' also any trailing '='\n * characters are removed\n *\n * @param {String} str the encoded string\n * @returns {String} the URL friendly encoded String\n */\nfunction Base64EncodeUrl(str) {\n    return str\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/\\=+$/, '');\n}\n\n/**\n * Use this to recreate a Base64 encoded string that was made URL friendly\n * using Base64EncodeurlFriendly.\n * '-' and '_' are replaced with '+' and '/' and also it is padded with '+'\n *\n * @param {String} str the encoded string\n * @returns {String} the URL friendly encoded String\n */\nfunction Base64DecodeUrl(str) {\n    str = (str + '===').slice(0, str.length + (str.length % 4));\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nfunction arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return Base64EncodeUrl(window.btoa(binary));\n}\n\nfunction isAuthorizationReady(state) {\n    if (!state) return false;\n\n    return state['@type'] === 'authorizationStateReady';\n}\n\nfunction between(item, first, last, inclusive = false) {\n    return inclusive ? item >= first && item <= last : item > first && item < last;\n}\n\nfunction clamp(item, first, last) {\n    if (item < first) return first;\n    if (item > last) return last;\n\n    return item;\n}\n\nfunction getDurationString(secondsTotal) {\n    let hours = Math.floor(secondsTotal / 3600);\n    let minutes = Math.floor((secondsTotal - hours * 3600) / 60);\n    let seconds = secondsTotal - hours * 3600 - minutes * 60;\n\n    if (hours > 0 && minutes < 10) {\n        minutes = '0' + minutes;\n    }\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return (hours > 0 ? hours + ':' : '') + minutes + ':' + seconds;\n}\n\nexport function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction historyEquals(first, second) {\n    if (!first && second) return false;\n    if (first && !second) return false;\n\n    if (!first && !second) return true;\n    if (first.length === 0 && second.length === 0) return true;\n\n    return first === second;\n}\n\nfunction insertByOrder(array, element, comparator) {\n    let i = 0;\n    for (; i < array.length && comparator(array[i], element) < 0; i++) {}\n\n    return [...array.slice(0, i), element, ...array.slice(i)];\n}\n\nexport {\n    getBrowser,\n    getOSName,\n    stringToBoolean,\n    orderCompare,\n    getSize,\n    getPhotoThumbnailSize,\n    getPhotoSize,\n    getFitSize,\n    itemsInView,\n    throttle,\n    debounce,\n    getLetters,\n    readImageSize,\n    arrayBufferToBase64,\n    isAuthorizationReady,\n    between,\n    clamp,\n    getDurationString,\n    isAppleDevice,\n    historyEquals,\n    insertByOrder\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from '../Stores/EventEmitter';\nimport packageJson from '../../package.json';\nimport { stringToBoolean, getBrowser, getOSName } from '../Utils/Common';\nimport {\n    VERBOSITY_JS_MAX,\n    VERBOSITY_JS_MIN,\n    VERBOSITY_MAX,\n    VERBOSITY_MIN,\n    WASM_FILE_HASH,\n    WASM_FILE_NAME\n} from '../Constants';\nimport TdClient from 'tdweb/dist/tdweb';\n// import TdClient from '@arseny30/tdweb/dist/tdweb';\n\nfunction databaseExists(dbname, callback) {\n    var req = indexedDB.open(dbname);\n    var existed = true;\n    req.onsuccess = function() {\n        req.result.close();\n        if (!existed) indexedDB.deleteDatabase(dbname);\n        callback(existed);\n    };\n    req.onupgradeneeded = function() {\n        existed = false;\n    };\n}\n\nclass TdLibController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.parameters = {\n            useTestDC: false,\n            readOnly: false,\n            verbosity: 1,\n            jsVerbosity: 3,\n            fastUpdating: true,\n            useDatabase: false,\n            mode: 'wasm'\n        };\n\n        this.disableLog = true;\n    }\n\n    init = location => {\n        this.setParameters(location);\n\n        const { verbosity, jsVerbosity, useTestDC, readOnly, fastUpdating, useDatabase, mode } = this.parameters;\n        const dbName = useTestDC ? 'tdlib_test' : 'tdlib';\n\n        databaseExists(dbName, exists => {\n            this.clientUpdate({ '@type': 'clientUpdateTdLibDatabaseExists', exists });\n\n            let options = {\n                logVerbosityLevel: verbosity,\n                jsLogVerbosityLevel: jsVerbosity,\n                mode: mode, // 'wasm-streaming'/'wasm'/'asmjs'\n                prefix: useTestDC ? 'tdlib_test' : 'tdlib',\n                readOnly: readOnly,\n                isBackground: false,\n                useDatabase: useDatabase,\n                wasmUrl: `${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`\n                // onUpdate: update => this.emit('update', update)\n            };\n\n            console.log(\n                `[TdLibController] (fast_updating=${fastUpdating}) Start client with params=${JSON.stringify(options)}`\n            );\n\n            this.client = new TdClient(options);\n            this.client.onUpdate = update => {\n                if (!this.disableLog) {\n                    if (update['@type'] === 'updateFile') {\n                        console.log('receive updateFile file_id=' + update.file.id, update);\n                    } else {\n                        console.log('receive update', update);\n                    }\n                }\n                this.emit('update', update);\n            };\n        });\n    };\n\n    clientUpdate = update => {\n        if (!this.disableLog) {\n            console.log('clientUpdate', update);\n        }\n        this.emit('clientUpdate', update);\n    };\n\n    setParameters = location => {\n        if (!location) return;\n\n        const { search } = location;\n        if (!search) return;\n\n        const params = new URLSearchParams(search.toLowerCase());\n\n        if (params.has('test')) {\n            this.parameters.useTestDC = stringToBoolean(params.get('test'));\n        }\n\n        if (params.has('verbosity')) {\n            const verbosity = parseInt(params.get('verbosity'), 10);\n            if (verbosity >= VERBOSITY_MIN && verbosity <= VERBOSITY_MAX) {\n                this.parameters.verbosity = verbosity;\n            }\n        }\n\n        if (params.has('jsverbosity')) {\n            const jsVerbosity = parseInt(params.get('jsverbosity'), 10);\n            if (jsVerbosity >= VERBOSITY_JS_MIN && jsVerbosity <= VERBOSITY_JS_MAX) {\n                this.parameters.jsVerbosity = jsVerbosity;\n            }\n        }\n\n        if (params.has('tag') && params.has('tagverbosity')) {\n            const tag = params\n                .get('tag')\n                .replace('[', '')\n                .replace(']', '')\n                .split(',');\n            const tagVerbosity = params\n                .get('tagverbosity')\n                .replace('[', '')\n                .replace(']', '')\n                .split(',');\n            if (tag && tagVerbosity && tag.length === tagVerbosity.length) {\n                this.parameters.tag = tag;\n                this.parameters.tagVerbosity = tagVerbosity;\n            }\n        }\n\n        if (params.has('readonly')) {\n            this.parameters.readOnly = stringToBoolean(params.get('readonly'));\n        }\n\n        if (params.has('fastupdating')) {\n            this.parameters.fastUpdating = stringToBoolean(params.get('fastupdating'));\n        }\n\n        if (params.has('db')) {\n            this.parameters.useDatabase = stringToBoolean(params.get('db'));\n        }\n        if (params.has('mode')) {\n            this.parameters.mode = params.get('mode');\n        }\n        if (params.has('clientlog')) {\n            this.disableLog = !stringToBoolean(params.get('clientlog'));\n        }\n    };\n\n    send = request => {\n        if (!this.client) {\n            console.log('send (none init)', request);\n            return;\n        }\n\n        if (!this.disableLog) {\n            console.log('send', request);\n\n            return this.client\n                .send(request)\n                .then(result => {\n                    console.log('send result', result);\n                    return result;\n                })\n                .catch(error => {\n                    console.error('send error', error);\n\n                    throw error;\n                });\n        } else {\n            return this.client.send(request);\n        }\n    };\n\n    sendTdParameters = async () => {\n        const apiId = process.env.REACT_APP_TELEGRAM_API_ID;\n        const apiHash = process.env.REACT_APP_TELEGRAM_API_HASH;\n\n        // console.log('[td] sendTdParameters', apiHash, apiId);\n        if (!apiId || !apiHash) {\n            if (\n                window.confirm(\n                    'API id is missing!\\n' +\n                        'In order to obtain an API id and develop your own application ' +\n                        'using the Telegram API please visit https://core.telegram.org/api/obtaining_api_id'\n                )\n            ) {\n                window.location.href = 'https://core.telegram.org/api/obtaining_api_id';\n            }\n        }\n\n        const { useTestDC } = this.parameters;\n        const { version } = packageJson;\n\n        this.send({\n            '@type': 'setTdlibParameters',\n            parameters: {\n                '@type': 'tdParameters',\n                use_test_dc: useTestDC,\n                api_id: apiId,\n                api_hash: apiHash,\n                system_language_code: navigator.language || 'en',\n                device_model: getBrowser(),\n                system_version: getOSName(),\n                application_version: version,\n                use_secret_chats: false,\n                use_message_database: true,\n                use_file_database: false,\n                database_directory: '/db',\n                files_directory: '/'\n            }\n            // ,\n            // extra: {\n            //     a: ['a', 'b'],\n            //     b: 123\n            // }\n        });\n\n        if (this.parameters.tag && this.parameters.tagVerbosity) {\n            for (let i = 0; i < this.parameters.tag.length; i++) {\n                let tag = this.parameters.tag[i];\n                let tagVerbosity = this.parameters.tagVerbosity[i];\n\n                this.send({\n                    '@type': 'setLogTagVerbosityLevel',\n                    tag: tag,\n                    new_verbosity_level: tagVerbosity\n                });\n            }\n        }\n    };\n\n    logOut() {\n        this.send({ '@type': 'logOut' }).catch(error => {\n            this.emit('tdlib_auth_error', error);\n        });\n    }\n\n    setChatId = (chatId, messageId = null) => {\n        const update = {\n            '@type': 'clientUpdateChatId',\n            chatId: chatId,\n            messageId: messageId\n        };\n\n        this.clientUpdate(update);\n    };\n\n    setMediaViewerContent(content) {\n        this.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: content\n        });\n    }\n}\n\nconst controller = new TdLibController();\n\nexport default controller;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_INPUT_INTERVAL_S } from '../Constants';\n\nclass InputTypingManager {\n    constructor(chatId, timeoutCallback) {\n        this.actions = new Map();\n        this.timerId = null;\n        this.chatId = chatId;\n        this.timeoutCallback = timeoutCallback;\n\n        this.handleTimer = this.handleTimer.bind(this);\n        this.addAction = this.addAction.bind(this);\n        this.clearAction = this.clearAction.bind(this);\n        this.setActionsTimeout = this.setActionsTimeout.bind(this);\n    }\n\n    handleTimer() {\n        let now = new Date();\n        let expiredActions = [];\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout <= 0) expiredActions.push(key);\n        }\n\n        for (let key of expiredActions) {\n            this.actions.delete(key);\n        }\n\n        let update = {\n            '@type': 'updateUserChatAction',\n            chat_id: this.chatId,\n            action: { '@type': 'chatActionTimerUpdate' }\n        };\n\n        this.timeoutCallback(update);\n        // ChatStore.emit('updateUserChatAction', update);\n\n        this.setActionsTimeout();\n    }\n\n    addAction(userId, action) {\n        let expire = new Date();\n        expire.setSeconds(expire.getSeconds() + TYPING_INPUT_INTERVAL_S);\n\n        this.actions.set(userId, { expire: expire, action: action });\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setActionsTimeout();\n    }\n\n    setActionsTimeout() {\n        let now = new Date();\n        let timeout = 1000000;\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout < timeout) timeout = actionTimeout;\n            if (timeout < 0) timeout = 0;\n        }\n\n        if (timeout < 1000000) {\n            this.timerId = setTimeout(this.handleTimer, timeout);\n        }\n    }\n\n    clearAction(userId) {\n        this.actions.delete(userId);\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setActionsTimeout();\n    }\n}\n\nexport default InputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport InputTypingManager from '../Utils/InputTypingManager';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass ChatStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n        this.loadClientData();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.typingManagers = new Map();\n        this.onlineMemberCount = new Map();\n        this.counters = new Map();\n        this.skippedUpdates = [];\n        this.chatList = new Map();\n        this.wallpaper = null;\n    };\n\n    loadClientData = () => {\n        const clientData = new Map();\n        try {\n            let data = localStorage.get('clientData');\n            if (data) {\n                data = JSON.parse(data);\n                if (data) {\n                    Object.keys(data).forEach(key => {\n                        clientData.set(Number(key), data[key]);\n                    });\n                }\n            }\n        } catch {}\n\n        this.clientData = clientData;\n    };\n\n    saveClientData = () => {\n        const arr = Array.from(this.clientData.entries());\n        const obj = arr.reduce((obj, [key, value]) => {\n            if (value) {\n                obj[String(key)] = value;\n            }\n            return obj;\n        }, {});\n\n        localStorage.setItem('clientData', JSON.stringify(obj));\n    };\n\n    updateChatChatList(chatId, chatList) {\n        if (!chatList) {\n            for (const key of this.chatList.keys()) {\n                this.chatList.get(key).delete(chatId);\n            }\n\n            return;\n        }\n\n        let idMap = this.chatList.get(chatList['@type']);\n        if (!idMap) {\n            idMap = new Map();\n            this.chatList.set(chatList['@type'], idMap);\n        }\n\n        idMap.set(chatId, chatId);\n        for (const key of this.chatList.keys()) {\n            if (key !== chatList['@type']) {\n                this.chatList.get(key).delete(chatId);\n            }\n        }\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateConnectionState': {\n                if (update.state['@type'] === 'connectionStateUpdating') {\n                    this.updating = true;\n                    this.skippedUpdates = [];\n                } else {\n                    this.updating = false;\n                    if (this.skippedUpdates.length > 0) {\n                        TdLibController.parameters.fastUpdating = false;\n                        this.emitUpdate({\n                            '@type': 'clientUpdateFastUpdatingComplete',\n                            updates: this.skippedUpdates\n                        });\n                        this.skippedUpdates = [];\n                    }\n                }\n                break;\n            }\n            case 'updateChatActionBar': {\n                const { chat_id, action_bar } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { action_bar });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatChatList': {\n                const { chat_id, chat_list } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { chat_list });\n                }\n\n                this.updateChatChatList(chat_id, chat_list);\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatDefaultDisableNotification': {\n                //TODO: handle updateChatDefaultDisableNotification\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatOnlineMemberCount': {\n                this.setOnlineMemberCount(update.chat_id, update.online_member_count);\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatDraftMessage': {\n                const { chat_id, order, draft_message } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, {\n                        order: order === '0' ? chat.order : order,\n                        draft_message\n                    });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatIsMarkedAsUnread': {\n                const { chat_id, is_marked_as_unread } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { is_marked_as_unread });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatIsPinned': {\n                const { chat_id, order, is_pinned } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { order, is_pinned });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatIsSponsored': {\n                const { chat_id, order, is_sponsored } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { order, is_sponsored });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatLastMessage': {\n                const { chat_id, order, last_message } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, {\n                        order: order === '0' ? chat.order : order,\n                        last_message\n                    });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatNotificationSettings': {\n                const { chat_id, notification_settings } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { notification_settings });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatOrder': {\n                const { chat_id, order } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { order });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatPhoto': {\n                const { chat_id, photo } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { photo });\n\n                    switch (chat.type['@type']) {\n                        case 'chatTypeBasicGroup': {\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            break;\n                        }\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            const user = UserStore.get(chat.type.user_id);\n                            if (user) {\n                                UserStore.assign(user, { profile_photo: update.photo });\n                            }\n                            break;\n                        }\n                    }\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatPinnedMessage': {\n                const { chat_id, pinned_message_id } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { pinned_message_id });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatReadInbox': {\n                const { chat_id, last_read_inbox_message_id, unread_count } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { last_read_inbox_message_id, unread_count });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatReadOutbox': {\n                const { chat_id, last_read_outbox_message_id } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { last_read_outbox_message_id });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatReplyMarkup': {\n                const { chat_id, reply_markup_message_id } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { reply_markup_message_id });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatTitle': {\n                const { chat_id, title } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { title });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateChatUnreadMentionCount': {\n                const { chat_id, unread_mention_count } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { unread_mention_count });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateNewChat': {\n                this.set(update.chat);\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateSecretChat': {\n                //TODO: handle updateSecretChat\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateUnreadChatCount': {\n                //TODO: handle updateUnreadChatCount\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateUserChatAction': {\n                let typingManager = this.getTypingManager(update.chat_id);\n                if (!typingManager) {\n                    typingManager = new InputTypingManager(update.chat_id, update => this.emitUpdate(update));\n                    this.setTypingManager(update.chat_id, typingManager);\n                }\n\n                const key = update.user_id;\n                if (update.action['@type'] === 'chatActionCancel') {\n                    typingManager.clearAction(key);\n                } else {\n                    typingManager.addAction(key, update.action);\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            case 'updateMessageMentionRead': {\n                const { chat_id, unread_mention_count } = update;\n\n                const chat = this.get(chat_id);\n                if (chat) {\n                    this.assign(chat, { unread_mention_count });\n                }\n\n                this.emitFastUpdate(update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatBackground': {\n                const { wallpaper } = update;\n                this.wallpaper = wallpaper;\n\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateClearHistory': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateLeaveChat': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateArchive': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateOpenChat': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateContacts': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateSettings': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateNewGroup': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateNewChannel': {\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateSetChatClientData': {\n                const { chatId, clientData } = update;\n\n                TdLibController.send({\n                    '@type': 'setChatClientData',\n                    chat_id: chatId,\n                    client_data: JSON.stringify(clientData)\n                });\n                this.setClientData(chatId, clientData);\n                this.saveClientData();\n\n                this.emitUpdate(update);\n                break;\n            }\n            case 'clientUpdateUnpin': {\n                this.emitUpdate(update);\n                break;\n            }\n        }\n    };\n\n    emitUpdate = update => {\n        this.emit(update['@type'], update);\n    };\n\n    emitFastUpdate = update => {\n        if (this.updating && TdLibController.parameters.fastUpdating) {\n            this.skippedUpdates.push(update);\n            return;\n        }\n\n        this.emit(update['@type'], update);\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        //Object.assign(source1, source2);\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    get(chatId) {\n        return this.items.get(chatId);\n    }\n\n    set(chat) {\n        this.items.set(chat.id, chat);\n    }\n\n    getCounters(chatId) {\n        return this.counters.get(chatId);\n    }\n\n    setCounters(chatId, counters) {\n        this.counters.set(chatId, counters);\n    }\n\n    getClientData(chatId) {\n        return this.clientData.get(chatId) || {};\n    }\n\n    setClientData(chatId, data) {\n        this.clientData.set(chatId, data);\n    }\n\n    setOnlineMemberCount(chatId, onlineMemberCount) {\n        this.onlineMemberCount.set(chatId, onlineMemberCount);\n    }\n\n    getOnlineMemberCount(chatId) {\n        return this.onlineMemberCount.get(chatId) || 0;\n    }\n\n    getTypingManager(chatId) {\n        return this.typingManagers.get(chatId);\n    }\n\n    setTypingManager(chatId, typingManager) {\n        return this.typingManagers.set(chatId, typingManager);\n    }\n}\n\nconst store = new ChatStore();\nwindow.chat = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { arrayBufferToBase64, isAuthorizationReady } from './Utils/Common';\nimport { OPTIMIZATIONS_FIRST_START } from './Constants';\nimport ApplicationStore from './Stores/ApplicationStore';\nimport NotificationStore from './Stores/NotificationStore';\nimport TdLibController from './Controllers/TdLibController';\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost =\n    //false;\n    Boolean(\n        window.location.hostname === 'localhost' ||\n            // [::1] is the IPv6 localhost address.\n            window.location.hostname === '[::1]' ||\n            // 127.0.0.1/8 is considered localhost for IPv4.\n            window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n    );\n\nexport default async function register() {\n    console.log('[SW] Register');\n\n    if (OPTIMIZATIONS_FIRST_START) {\n        localStorage.setItem('register', 'true');\n    }\n\n    if ('serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        const serviceWorkerName =\n            process.env.NODE_ENV === 'production' ? 'service-worker.js' : 'custom-service-worker.js';\n        const swUrl = `${process.env.PUBLIC_URL}/${serviceWorkerName}`;\n        console.log(`[SW] Service worker url: ${swUrl}`);\n\n        if (!isLocalhost) {\n            // Is not local host. Just register service worker\n            await registerValidSW(swUrl);\n        } else {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            await checkValidServiceWorker(swUrl);\n        }\n    }\n}\n\nasync function registerValidSW(swUrl) {\n    console.log('[SW] RegisterValidSW');\n    try {\n        const registration = await navigator.serviceWorker.register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed') {\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"New content is\n                        // available; please refresh.\" message in your web app.\n                        console.log('[SW] New content is available; please refresh.');\n\n                        TdLibController.clientUpdate({ '@type': 'clientUpdateNewContentAvailable' });\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"Content is cached for offline use.\" message.\n                        console.log('[SW] Content is cached for offline use.');\n                    }\n                }\n            };\n        };\n    } catch (error) {\n        console.error('[SW] Error during service worker registration: ', error);\n    }\n}\n\nexport async function subscribeNotifications() {\n    try {\n        const registration = await navigator.serviceWorker.ready;\n\n        let pushSubscription = await registration.pushManager.getSubscription();\n        if (pushSubscription) await pushSubscription.unsubscribe();\n\n        pushSubscription = await registration.pushManager.subscribe({ userVisibleOnly: true });\n        console.log('[SW] Received push subscription: ', JSON.stringify(pushSubscription));\n\n        const { endpoint } = pushSubscription;\n        const p256dh_base64url = arrayBufferToBase64(pushSubscription.getKey('p256dh'));\n        const auth_base64url = arrayBufferToBase64(pushSubscription.getKey('auth'));\n\n        if (endpoint && p256dh_base64url && auth_base64url) {\n            const { authorizationState } = ApplicationStore;\n            if (isAuthorizationReady(authorizationState)) {\n                const deviceToken = {\n                    '@type': 'deviceTokenWebPush',\n                    endpoint,\n                    p256dh_base64url,\n                    auth_base64url\n                };\n                console.log('[SW] registerDevice', deviceToken);\n                const result = await TdLibController.send({\n                    '@type': 'registerDevice',\n                    device_token: deviceToken,\n                    other_user_ids: []\n                });\n                console.log('[SW] registerDevice result', result);\n            }\n        }\n    } catch (error) {\n        console.error('[SW] Error during service worker push subscription: ', error);\n        NotificationStore.enableSound = true;\n    }\n}\n\nasync function checkValidServiceWorker(swUrl) {\n    console.log('[SW] CheckValidServiceWorker');\n    // Check if the service worker can be found. If it can't reload the page.\n    try {\n        const response = await fetch(swUrl);\n\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n            await registration.unregister();\n\n            window.location.reload();\n        } else {\n            // Service worker found. Proceed as normal.\n            await registerValidSW(swUrl);\n        }\n    } catch (error) {\n        console.log('[SW] No internet connection found. App is running in offline mode.');\n    }\n}\n\nexport async function unregister() {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n\n        await registration.unregister();\n    }\n}\n\nexport async function update() {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n\n        await registration.update();\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\n\nexport function compose(...funcs) {\n    return funcs.reduce((a, b) => (...args) => a(b(...args)), arg => arg);\n}\n\nexport function withSaveRef() {\n    return Component => {\n        return React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\n    };\n}\n\nexport function withRestoreRef() {\n    return Component => {\n        return class extends React.Component {\n            render() {\n                const { forwardedRef, ...rest } = this.props;\n\n                return <Component {...rest} ref={forwardedRef} />;\n            }\n        };\n    };\n}\n\nexport function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { KEY_SUGGESTED_LANGUAGE_PACK_ID } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OptionStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateOption':\n                const { name, value } = update;\n\n                this.set(name, value);\n\n                if (name === KEY_SUGGESTED_LANGUAGE_PACK_ID) {\n                    localStorage.setItem(name, value.value);\n                }\n\n                this.emit('updateOption', update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(name) {\n        return this.items.get(name);\n    }\n\n    set(name, value) {\n        this.items.set(name, value);\n    }\n}\n\nconst store = new OptionStore();\nwindow.option = store;\nexport default store;\n","class Storage {\n    constructor(options) {\n        this.store = options.store;\n    }\n\n    setItem(key, value) {\n        if (!this.store) return;\n\n        try {\n            this.store.setItem(key, value);\n        } catch (e) {}\n    }\n\n    getItem(key, value) {\n        if (!this.store) return;\n\n        try {\n            return this.store.getItem(key, value);\n        } catch (e) {}\n\n        return undefined;\n    }\n}\n\nfunction getDefaults() {\n    return {\n        prefix: 'i18next_res_',\n        expirationTime: Infinity,\n        versions: {},\n        store: window.localStorage\n    };\n}\n\nclass Cache {\n    constructor(services, options = {}) {\n        this.init(services, options);\n\n        this.type = 'backend';\n    }\n\n    init(services, options = {}) {\n        this.services = services;\n        this.options = { ...getDefaults(), ...this.options, ...options };\n        this.storage = new Storage(this.options);\n    }\n\n    read(language, namespace, callback) {\n        const nowMS = new Date().getTime();\n\n        if (!this.storage.store) {\n            return callback(null, null);\n        }\n\n        let local = this.storage.getItem(`${this.options.prefix}${language}-${namespace}`);\n\n        if (local) {\n            local = JSON.parse(local);\n            if (\n                // expiration field is mandatory, and should not be expired\n                local.i18nStamp &&\n                local.i18nStamp + this.options.expirationTime > nowMS &&\n                // there should be no language version set, or if it is, it should match the one in translation\n                this.options.versions[language] === local.i18nVersion\n            ) {\n                delete local.i18nVersion;\n                delete local.i18nStamp;\n                return callback(null, local);\n            }\n        }\n\n        return callback(null, null);\n    }\n\n    save(language, namespace, data) {\n        if (this.storage.store) {\n            data.i18nStamp = new Date().getTime();\n\n            // language version (if set)\n            if (this.options.versions[language]) {\n                data.i18nVersion = this.options.versions[language];\n            }\n\n            // save\n            this.storage.setItem(`${this.options.prefix}${language}-${namespace}`, JSON.stringify(data));\n        }\n    }\n}\n\nCache.type = 'backend';\n\nexport default Cache;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport i18n from 'i18next';\nimport LocalizationCache from '../Localization/Cache';\nimport { initReactI18next } from 'react-i18next';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst fallbackLng = 'en';\nconst defaultNS = 'translation';\nconst lng = localStorage.getItem('i18next') || fallbackLng;\n\ni18n.use(initReactI18next).init({\n    ns: [defaultNS, 'local'],\n    defaultNS,\n    fallbackNS: ['local', 'emoji', 'settings', 'translation', 'search'],\n    resources: {\n        en: {\n            search: {\n                ChatsAndContacts: 'Chats and contacts',\n                SearchMessagesIn: 'Search messages in'\n            },\n            settings: {\n                ContactJoinedEnabled: 'Enabled',\n                ContactJoinedDisabled: 'Disabled',\n                NotificationsEnabled: 'Enabled',\n                NotificationsDisabled: 'Disabled',\n                PreviewEnabled: 'Enabled',\n                PreviewDisabled: 'Disabled',\n                BioAbout: 'Any details such as age, occupation or city.\\nExample: 23 y.o. designer from San Francisco.',\n                Archived: 'Archived',\n                Saved: 'Saved',\n                EditProfile: 'Edit Profile',\n                GeneralSettings: 'General Settings'\n            },\n            local: {\n                PollQuizOneRightAnswer: 'Quiz has only one right answer.',\n                LeftChannel: 'Left channel',\n                LeftGroup: 'Left group',\n                EnterPassword: 'Enter a Password',\n                YourAccountProtectedWithPassword: 'Your account is protected with an additional password.',\n                DeletedMessage: 'Deleted message',\n                YourPhone: 'Your Phone',\n                SignInToTelegram: 'Sign in to Telegram',\n                PhoneNumber: 'Phone Number',\n                Country: 'Country',\n                KeepMeSignedIn: 'Keep me signed in',\n                StartText: 'Please confirm your country code and enter your phone number.',\n                Next: 'Next',\n                InvalidPhoneNumber: 'Invalid phone number. Please check the number and try again.',\n                More: 'More',\n                SendFileConfirmation: 'Are you sure you want to send file?',\n                SendFilesConfirmation: 'Are you sure you want to send files?',\n                SendMessage: 'Send Message',\n                ChatInfo: 'Chat Info',\n                ChannelInfo: 'Channel Info',\n                Stickers: 'STICKERS',\n                Emoji: 'EMOJI',\n                SelectChatToStartMessaging: 'Please select a chat to start messaging',\n                Text: 'Text',\n                ViewChannelInfo: 'View channel info',\n                ViewGroupInfo: 'View group info',\n                ViewProfile: 'View profile',\n                GoToMessage: 'Go to message',\n                PhotosTitle: 'Photos',\n                VideosTitle: 'Videos',\n                VoiceTitle: 'Voice messages',\n                UpdateDraftConfirmation: 'Are you sure you want to update draft?'\n            },\n            emoji: {\n                Search: 'Search',\n                NotEmojiFound: 'No Emoji Found',\n                ChooseDefaultSkinTone: 'Choose your default skin tone',\n                SearchResults: 'Search Results',\n                Recent: 'Frequently Used',\n                SmileysPeople: 'Smileys & People',\n                AnimalsNature: 'Animals & Nature',\n                FoodDrink: 'Food & Drink',\n                Activity: 'Activity',\n                TravelPlaces: 'Travel & Places',\n                Objects: 'Objects',\n                Symbols: 'Symbols',\n                Flags: 'Flags',\n                Custom: 'Custom'\n            },\n            translation: {\n                AppName: 'Telegram',\n                Connecting: 'Connecting...',\n                ConnectingToProxy: 'Connecting to proxy...',\n                Loading: 'Loading...',\n                Updating: 'Updating...',\n                WaitingForNetwork: 'Waiting for network...',\n                ContinueOnThisLanguage: 'Continue in English',\n                SendAsFile: 'Send as a file',\n                SendAsPhoto: 'Send as a photo'\n            }\n        },\n        ru: {\n            search: {\n                ChatsAndContacts: 'Чаты и контакты',\n                SearchMessagesIn: 'Искать сообщения в'\n            },\n            settings: {\n                ContactJoinedEnabled: 'Включено',\n                ContactJoinedDisabled: 'Выключено',\n                NotificationsEnabled: 'Включены',\n                NotificationsDisabled: 'Выключены',\n                PreviewEnabled: 'Включено',\n                PreviewDisabled: 'Выключено',\n                BioAbout:\n                    'Любые подробности, например: возраст, род занятий или город.\\nПример: 23 года, дизайнер из Санкт-Петербурга.',\n                Archived: 'Архив',\n                Saved: 'Избранное',\n                EditProfile: 'Редактровать профиль',\n                GeneralSettings: 'Основные настройки'\n            },\n            local: {\n                PollQuizOneRightAnswer: 'Quiz has only one right answer.',\n                LeftChannel: 'Канал покинут',\n                LeftGroup: 'Группа покинута',\n                EnterPassword: 'Введите пароль',\n                YourAccountProtectedWithPassword: 'Ваш аккаунт защищен дополнительным паролем.',\n                DeletedMessage: 'Удаленное сообщение',\n                YourPhone: 'Ваш телефон',\n                SignInToTelegram: 'Вход в Telegram',\n                PhoneNumber: 'Телефонный номер',\n                Country: 'Страна',\n                KeepMeSignedIn: 'Сохранить авторизацию',\n                StartText: 'Пожалуйста, укажите код страны и свой номер телефона.',\n                Next: 'Далее',\n                InvalidPhoneNumber: 'Некорректный номер телефона. Пожалуйста, проверьте номер и попробуйте ещё раз.',\n                More: 'Ещё',\n                SendFileConfirmation: 'Вы действительно хотите отправить файл?',\n                SendFilesConfirmation: 'Вы действительно хотите отправить файлы?',\n                SendMessage: 'Отправить сообщение',\n                ChatInfo: 'Информация о чате',\n                ChannelInfo: 'Информация о канале',\n                Stickers: 'СТИКЕРЫ',\n                Emoji: 'ЕМОДЗИ',\n                SelectChatToStartMessaging: 'Пожалуйста, выберите, кому хотели бы написать',\n                Text: 'Текст',\n                ViewChannelInfo: 'Информация о канале',\n                ViewGroupInfo: 'Информация о группе',\n                ViewProfile: 'Показать профиль',\n                GoToMessage: 'Перейти к сообщению',\n                PhotosTitle: 'Фотографии',\n                VideosTitle: 'Видеозаписи',\n                VoiceTitle: 'Голосовые сообщения',\n                UpdateDraftConfirmation: 'Вы действительно хотите обновить черновик сообщения?'\n            },\n            emoji: {\n                Search: 'Поиск',\n                NotEmojiFound: 'Емодзи не найдены',\n                ChooseDefaultSkinTone: 'Выберите тон кожи по умолчанию',\n                SearchResults: 'Результаты поиска',\n                Recent: 'Часто используемые',\n                SmileysPeople: 'Смайлики и люди',\n                AnimalsNature: 'Животные и природа',\n                FoodDrink: 'Еда и напитки',\n                Activity: 'Активность',\n                TravelPlaces: 'Путешествия и местности',\n                Objects: 'Предметы',\n                Symbols: 'Символы',\n                Flags: 'Флаги',\n                Custom: 'Пользовательские'\n            },\n            translation: {\n                AppName: 'Telegram',\n                Connecting: 'Соединение...',\n                ConnectingToProxy: 'Подключение к прокси...',\n                Loading: 'Загрузка...',\n                Updating: 'Обновление...',\n                WaitingForNetwork: 'Ожидание сети...',\n                ContinueOnThisLanguage: 'Продолжить на русском',\n                SendAsFile: 'Отправить как файл',\n                SendAsPhoto: 'Отправить как фото'\n            }\n        }\n    },\n    lng,\n    fallbackLng,\n    interpolation: {\n        escapeValue: false\n    },\n    react: {\n        wait: false\n    }\n});\n\nconst cache = new LocalizationCache(null, {\n    enabled: true,\n    prefix: 'i18next_res_',\n    expirationTime: Infinity\n});\n\nconst defaultResources = cache.read(fallbackLng, defaultNS, (err, data) => data);\nconst currentResources = cache.read(lng, defaultNS, (err, data) => data);\n\ni18n.addResourceBundle(fallbackLng, defaultNS, defaultResources);\ni18n.addResourceBundle(lng, defaultNS, currentResources);\n\nclass LocalizationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.fallbackLng = fallbackLng;\n        this.i18n = i18n;\n        this.cache = cache;\n\n        this.addTdLibListener();\n    }\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                switch (update.authorization_state['@type']) {\n                    case 'authorizationStateWaitTdlibParameters':\n                        TdLibController.send({\n                            '@type': 'setOption',\n                            name: 'localization_target',\n                            value: { '@type': 'optionValueString', value: 'android' }\n                        });\n\n                        TdLibController.send({\n                            '@type': 'setOption',\n                            name: 'language_pack_id',\n                            value: { '@type': 'optionValueString', value: lng }\n                        });\n\n                        this.info = await TdLibController.send({\n                            '@type': 'getLocalizationTargetInfo',\n                            only_local: false\n                        });\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateLanguageChange',\n                            language: lng\n                        });\n                        break;\n                }\n                break;\n            }\n            case 'updateLanguagePackStrings': {\n                // add/remove new strings\n\n                this.emit('updateLanguagePackStrings', update);\n                break;\n            }\n        }\n    };\n\n    onClientUpdate = async update => {\n        switch (update['@type']) {\n            case 'clientUpdateLanguageChange': {\n                const { language } = update;\n\n                await this.loadLanguage(language);\n\n                localStorage.setItem('i18next', language);\n\n                await i18n.changeLanguage(language);\n\n                TdLibController.send({\n                    '@type': 'setOption',\n                    name: 'language_pack_id',\n                    value: { '@type': 'optionValueString', value: language }\n                });\n\n                this.emit('clientUpdateLanguageChange', update);\n                break;\n            }\n        }\n    };\n\n    processStrings = (lng, languagePackStrings) => {\n        if (!languagePackStrings) return {};\n        const { strings } = languagePackStrings;\n        if (!strings) return {};\n\n        let result = {};\n        for (let i = 0; i < strings.length; i++) {\n            const { value } = strings[i];\n            switch (value['@type']) {\n                case 'languagePackStringValueOrdinary': {\n                    result[strings[i].key] = value.value;\n                    break;\n                }\n                case 'languagePackStringValuePluralized': {\n                    if (value.zero_value) {\n                        result[strings[i].key + 'Z'] = value.zero_value;\n                    }\n                    if (value.one_value) {\n                        result[strings[i].key + 'O'] = value.one_value;\n                    }\n                    if (value.two_value) {\n                        result[strings[i].key + 'T'] = value.two_value;\n                    }\n                    if (value.few_value) {\n                        result[strings[i].key + 'F'] = value.few_value;\n                    }\n                    if (value.many_value) {\n                        result[strings[i].key + 'M'] = value.many_value;\n                    }\n                    if (value.other_value) {\n                        result[strings[i].key + 'OT'] = value.other_value;\n                    }\n                    break;\n                }\n                case 'languagePackStringValueDeleted': {\n                    break;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    loadLanguage = async language => {\n        const result = await TdLibController.send({\n            '@type': 'getLanguagePackStrings',\n            language_pack_id: language,\n            keys: []\n        });\n\n        const resources = this.processStrings(language, result);\n        this.cache.save(language, defaultNS, resources);\n        i18n.addResourceBundle(language, defaultNS, resources);\n    };\n}\n\nconst store = new LocalizationStore();\nwindow.localization = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './HeaderProgress.css';\n\nclass HeaderProgress extends React.Component {\n    render() {\n        return (\n            <>\n                <span className='header-progress'>.</span>\n                <span className='header-progress'>.</span>\n                <span className='header-progress'>.</span>\n            </>\n        );\n    }\n}\n\nexport default HeaderProgress;\n","export const actions = {\n  GET_SINGLE_EMOJI: \"GET_SINGLE_EMOJI\",\n  GET_MULTIPLE_EMOJI: \"GET_MULTIPLE_EMOJI\",\n  CHANGE_EMOTION: \"CHANGE_EMOTION\",\n  TOGGLE_LOCK: \"TOGGLE_LOCK\"\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport OptionStore from '../Stores/OptionStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass UserStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateUser': {\n                this.set(update.user);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateUserFullInfo':\n                this.setFullInfo(update.user_id, update.user_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateUserStatus': {\n                let user = this.get(update.user_id);\n                if (user) {\n                    this.assign(user, { status: update.status });\n                }\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateOpenUser': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        Object.assign(source1, source2);\n        //this.set(Object.assign({}, source1, source2));\n    }\n\n    getMyId() {\n        const myId = OptionStore.get('my_id');\n        if (!myId) return null;\n        if (!myId.value) return null;\n\n        return myId.value;\n    }\n\n    get(userId) {\n        return this.items.get(userId);\n    }\n\n    set(user) {\n        this.items.set(user.id, user);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new UserStore();\nwindow.user = store;\nexport default store;\n"],"sourceRoot":""}